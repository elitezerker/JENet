// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$746 {

    static final FunctionDescriptor RpcErrorAddRecord$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcErrorAddRecord$MH = RuntimeHelper.downcallHandle(
        "RpcErrorAddRecord",
        constants$746.RpcErrorAddRecord$FUNC
    );
    static final FunctionDescriptor RpcErrorClearInformation$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle RpcErrorClearInformation$MH = RuntimeHelper.downcallHandle(
        "RpcErrorClearInformation",
        constants$746.RpcErrorClearInformation$FUNC
    );
    static final FunctionDescriptor RpcAsyncCleanupThread$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RpcAsyncCleanupThread$MH = RuntimeHelper.downcallHandle(
        "RpcAsyncCleanupThread",
        constants$746.RpcAsyncCleanupThread$FUNC
    );
    static final FunctionDescriptor RpcGetAuthorizationContextForClient$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("LowPart"),
            Constants$root.C_LONG$LAYOUT.withName("HighPart")
        ).withName("_LUID"),
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcGetAuthorizationContextForClient$MH = RuntimeHelper.downcallHandle(
        "RpcGetAuthorizationContextForClient",
        constants$746.RpcGetAuthorizationContextForClient$FUNC
    );
    static final FunctionDescriptor RpcFreeAuthorizationContext$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcFreeAuthorizationContext$MH = RuntimeHelper.downcallHandle(
        "RpcFreeAuthorizationContext",
        constants$746.RpcFreeAuthorizationContext$FUNC
    );
    static final FunctionDescriptor RpcSsContextLockExclusive$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RpcSsContextLockExclusive$MH = RuntimeHelper.downcallHandle(
        "RpcSsContextLockExclusive",
        constants$746.RpcSsContextLockExclusive$FUNC
    );
}


