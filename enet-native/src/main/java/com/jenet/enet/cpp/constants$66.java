// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$66 {

    static final FunctionDescriptor wcsncat$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncat$MH = RuntimeHelper.downcallHandle(
        "wcsncat",
        constants$66.wcsncat$FUNC
    );
    static final FunctionDescriptor wcsncmp$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncmp$MH = RuntimeHelper.downcallHandle(
        "wcsncmp",
        constants$66.wcsncmp$FUNC
    );
    static final FunctionDescriptor wcsncpy$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle wcsncpy$MH = RuntimeHelper.downcallHandle(
        "wcsncpy",
        constants$66.wcsncpy$FUNC
    );
    static final FunctionDescriptor wcspbrk$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcspbrk$MH = RuntimeHelper.downcallHandle(
        "wcspbrk",
        constants$66.wcspbrk$FUNC
    );
    static final FunctionDescriptor wcsspn$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcsspn$MH = RuntimeHelper.downcallHandle(
        "wcsspn",
        constants$66.wcsspn$FUNC
    );
    static final FunctionDescriptor wcstok$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle wcstok$MH = RuntimeHelper.downcallHandle(
        "wcstok",
        constants$66.wcstok$FUNC
    );
}


