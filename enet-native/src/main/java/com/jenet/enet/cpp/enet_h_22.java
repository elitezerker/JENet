// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class enet_h_22 extends enet_h_21 {

    public static OfAddress LPPRINTER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_7 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_7 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_INFO_9 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_INFO_9 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PJOB_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPJOB_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PADDJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPADDJOB_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_4 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_5 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_6 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDRIVER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDRIVER_INFO_8 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PFORM_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORM_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDOC_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDOC_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTPROCESSOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_CAPS_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTPROCESSOR_CAPS_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPORT_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPORT_INFO_3 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PMONITOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPMONITOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PDATATYPES_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPDATATYPES_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_DEFAULTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_DEFAULTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUESA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUESA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUESW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUESW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_ENUM_VALUES = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_ENUM_VALUES = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle EnumPrintersA$MH() {
        return RuntimeHelper.requireNonNull(constants$922.EnumPrintersA$MH,"EnumPrintersA");
    }
    public static int EnumPrintersA ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintersA$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintersW$MH() {
        return RuntimeHelper.requireNonNull(constants$923.EnumPrintersW$MH,"EnumPrintersW");
    }
    public static int EnumPrintersW ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintersW$MH();
        try {
            return (int)mh$.invokeExact(Flags, Name, Level, pPrinterEnum, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$923.GetSpoolFileHandle$MH,"GetSpoolFileHandle");
    }
    public static MemoryAddress GetSpoolFileHandle ( Addressable hPrinter) {
        var mh$ = GetSpoolFileHandle$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommitSpoolData$MH() {
        return RuntimeHelper.requireNonNull(constants$923.CommitSpoolData$MH,"CommitSpoolData");
    }
    public static MemoryAddress CommitSpoolData ( Addressable hPrinter,  Addressable hSpoolFile,  int cbCommit) {
        var mh$ = CommitSpoolData$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter, hSpoolFile, cbCommit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$923.CloseSpoolFileHandle$MH,"CloseSpoolFileHandle");
    }
    public static int CloseSpoolFileHandle ( Addressable hPrinter,  Addressable hSpoolFile) {
        var mh$ = CloseSpoolFileHandle$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, hSpoolFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$923.OpenPrinterA$MH,"OpenPrinterA");
    }
    public static int OpenPrinterA ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = OpenPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$923.OpenPrinterW$MH,"OpenPrinterW");
    }
    public static int OpenPrinterW ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = OpenPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$924.ResetPrinterA$MH,"ResetPrinterA");
    }
    public static int ResetPrinterA ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = ResetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$924.ResetPrinterW$MH,"ResetPrinterW");
    }
    public static int ResetPrinterW ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = ResetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pDefault);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$924.SetJobA$MH,"SetJobA");
    }
    public static int SetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = SetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$924.SetJobW$MH,"SetJobW");
    }
    public static int SetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = SetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$924.GetJobA$MH,"GetJobA");
    }
    public static int GetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$924.GetJobW$MH,"GetJobW");
    }
    public static int GetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, Level, pJob, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsA$MH() {
        return RuntimeHelper.requireNonNull(constants$925.EnumJobsA$MH,"EnumJobsA");
    }
    public static int EnumJobsA ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumJobsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsW$MH() {
        return RuntimeHelper.requireNonNull(constants$925.EnumJobsW$MH,"EnumJobsW");
    }
    public static int EnumJobsW ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumJobsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, FirstJob, NoJobs, Level, pJob, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$925.AddPrinterA$MH,"AddPrinterA");
    }
    public static MemoryAddress AddPrinterA ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = AddPrinterA$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$925.AddPrinterW$MH,"AddPrinterW");
    }
    public static MemoryAddress AddPrinterW ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = AddPrinterW$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pName, Level, pPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$925.DeletePrinter$MH,"DeletePrinter");
    }
    public static int DeletePrinter ( Addressable hPrinter) {
        var mh$ = DeletePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$925.SetPrinterA$MH,"SetPrinterA");
    }
    public static int SetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = SetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$926.SetPrinterW$MH,"SetPrinterW");
    }
    public static int SetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = SetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$926.GetPrinterA$MH,"GetPrinterA");
    }
    public static int GetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$926.GetPrinterW$MH,"GetPrinterW");
    }
    public static int GetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pPrinter, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$926.AddPrinterDriverA$MH,"AddPrinterDriverA");
    }
    public static int AddPrinterDriverA ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = AddPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$926.AddPrinterDriverW$MH,"AddPrinterDriverW");
    }
    public static int AddPrinterDriverW ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = AddPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pDriverInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$926.AddPrinterDriverExA$MH,"AddPrinterDriverExA");
    }
    public static int AddPrinterDriverExA ( Addressable pName,  int Level,  Addressable lpbDriverInfo,  int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$927.AddPrinterDriverExW$MH,"AddPrinterDriverExW");
    }
    public static int AddPrinterDriverExW ( Addressable pName,  int Level,  Addressable lpbDriverInfo,  int dwFileCopyFlags) {
        var mh$ = AddPrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, lpbDriverInfo, dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$927.EnumPrinterDriversA$MH,"EnumPrinterDriversA");
    }
    public static int EnumPrinterDriversA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$927.EnumPrinterDriversW$MH,"EnumPrinterDriversW");
    }
    public static int EnumPrinterDriversW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$927.GetPrinterDriverA$MH,"GetPrinterDriverA");
    }
    public static int GetPrinterDriverA ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$927.GetPrinterDriverW$MH,"GetPrinterDriverW");
    }
    public static int GetPrinterDriverW ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$927.GetPrinterDriverDirectoryA$MH,"GetPrinterDriverDirectoryA");
    }
    public static int GetPrinterDriverDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$928.GetPrinterDriverDirectoryW$MH,"GetPrinterDriverDirectoryW");
    }
    public static int GetPrinterDriverDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriverDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pDriverDirectory, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$928.DeletePrinterDriverA$MH,"DeletePrinterDriverA");
    }
    public static int DeletePrinterDriverA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = DeletePrinterDriverA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$928.DeletePrinterDriverW$MH,"DeletePrinterDriverW");
    }
    public static int DeletePrinterDriverW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = DeletePrinterDriverW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$928.DeletePrinterDriverExA$MH,"DeletePrinterDriverExA");
    }
    public static int DeletePrinterDriverExA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$928.DeletePrinterDriverExW$MH,"DeletePrinterDriverExW");
    }
    public static int DeletePrinterDriverExW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = DeletePrinterDriverExW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pDriverName, dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$928.AddPrintProcessorA$MH,"AddPrintProcessorA");
    }
    public static int AddPrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = AddPrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$929.AddPrintProcessorW$MH,"AddPrintProcessorW");
    }
    public static int AddPrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = AddPrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPathName, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$929.EnumPrintProcessorsA$MH,"EnumPrintProcessorsA");
    }
    public static int EnumPrintProcessorsA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$929.EnumPrintProcessorsW$MH,"EnumPrintProcessorsW");
    }
    public static int EnumPrintProcessorsW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$929.GetPrintProcessorDirectoryA$MH,"GetPrintProcessorDirectoryA");
    }
    public static int GetPrintProcessorDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$929.GetPrintProcessorDirectoryW$MH,"GetPrintProcessorDirectoryW");
    }
    public static int GetPrintProcessorDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrintProcessorDirectoryW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, Level, pPrintProcessorInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesA$MH() {
        return RuntimeHelper.requireNonNull(constants$929.EnumPrintProcessorDatatypesA$MH,"EnumPrintProcessorDatatypesA");
    }
    public static int EnumPrintProcessorDatatypesA ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesW$MH() {
        return RuntimeHelper.requireNonNull(constants$930.EnumPrintProcessorDatatypesW$MH,"EnumPrintProcessorDatatypesW");
    }
    public static int EnumPrintProcessorDatatypesW ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPrintProcessorDatatypesW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPrintProcessorName, Level, pDatatypes, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$930.DeletePrintProcessorA$MH,"DeletePrintProcessorA");
    }
    public static int DeletePrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = DeletePrintProcessorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$930.DeletePrintProcessorW$MH,"DeletePrintProcessorW");
    }
    public static int DeletePrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = DeletePrintProcessorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProcessorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$930.StartDocPrinterA$MH,"StartDocPrinterA");
    }
    public static int StartDocPrinterA ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = StartDocPrinterA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$930.StartDocPrinterW$MH,"StartDocPrinterW");
    }
    public static int StartDocPrinterW ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = StartDocPrinterW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pDocInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$930.StartPagePrinter$MH,"StartPagePrinter");
    }
    public static int StartPagePrinter ( Addressable hPrinter) {
        var mh$ = StartPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WritePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.WritePrinter$MH,"WritePrinter");
    }
    public static int WritePrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten) {
        var mh$ = WritePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlushPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.FlushPrinter$MH,"FlushPrinter");
    }
    public static int FlushPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten,  int cSleep) {
        var mh$ = FlushPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pcWritten, cSleep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.EndPagePrinter$MH,"EndPagePrinter");
    }
    public static int EndPagePrinter ( Addressable hPrinter) {
        var mh$ = EndPagePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.AbortPrinter$MH,"AbortPrinter");
    }
    public static int AbortPrinter ( Addressable hPrinter) {
        var mh$ = AbortPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.ReadPrinter$MH,"ReadPrinter");
    }
    public static int ReadPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pNoBytesRead) {
        var mh$ = ReadPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pBuf, cbBuf, pNoBytesRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDocPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$931.EndDocPrinter$MH,"EndDocPrinter");
    }
    public static int EndDocPrinter ( Addressable hPrinter) {
        var mh$ = EndDocPrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$932.AddJobA$MH,"AddJobA");
    }
    public static int AddJobA ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = AddJobA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$932.AddJobW$MH,"AddJobW");
    }
    public static int AddJobW ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = AddJobW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pData, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScheduleJob$MH() {
        return RuntimeHelper.requireNonNull(constants$932.ScheduleJob$MH,"ScheduleJob");
    }
    public static int ScheduleJob ( Addressable hPrinter,  int JobId) {
        var mh$ = ScheduleJob$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$932.PrinterProperties$MH,"PrinterProperties");
    }
    public static int PrinterProperties ( Addressable hWnd,  Addressable hPrinter) {
        var mh$ = PrinterProperties$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$932.DocumentPropertiesA$MH,"DocumentPropertiesA");
    }
    public static int DocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = DocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$932.DocumentPropertiesW$MH,"DocumentPropertiesW");
    }
    public static int DocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = DocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.AdvancedDocumentPropertiesA$MH,"AdvancedDocumentPropertiesA");
    }
    public static int AdvancedDocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesA$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$933.AdvancedDocumentPropertiesW$MH,"AdvancedDocumentPropertiesW");
    }
    public static int AdvancedDocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = AdvancedDocumentPropertiesW$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pDeviceName, pDevModeOutput, pDevModeInput);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtDeviceMode$MH() {
        return RuntimeHelper.requireNonNull(constants$933.ExtDeviceMode$MH,"ExtDeviceMode");
    }
    public static int ExtDeviceMode ( Addressable hWnd,  Addressable hInst,  Addressable pDevModeOutput,  Addressable pDeviceName,  Addressable pPort,  Addressable pDevModeInput,  Addressable pProfile,  int fMode) {
        var mh$ = ExtDeviceMode$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hInst, pDevModeOutput, pDeviceName, pPort, pDevModeInput, pProfile, fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.GetPrinterDataA$MH,"GetPrinterDataA");
    }
    public static int GetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$933.GetPrinterDataW$MH,"GetPrinterDataW");
    }
    public static int GetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$933.GetPrinterDataExA$MH,"GetPrinterDataExA");
    }
    public static int GetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.GetPrinterDataExW$MH,"GetPrinterDataExW");
    }
    public static int GetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, pType, pData, nSize, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.EnumPrinterDataA$MH,"EnumPrinterDataA");
    }
    public static int EnumPrinterDataA ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = EnumPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.EnumPrinterDataW$MH,"EnumPrinterDataW");
    }
    public static int EnumPrinterDataW ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = EnumPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, dwIndex, pValueName, cbValueName, pcbValueName, pType, pData, cbData, pcbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.EnumPrinterDataExA$MH,"EnumPrinterDataExA");
    }
    public static int EnumPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = EnumPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$934.EnumPrinterDataExW$MH,"EnumPrinterDataExW");
    }
    public static int EnumPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = EnumPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pEnumValues, cbEnumValues, pcbEnumValues, pnEnumValues);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$934.EnumPrinterKeyA$MH,"EnumPrinterKeyA");
    }
    public static int EnumPrinterKeyA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = EnumPrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.EnumPrinterKeyW$MH,"EnumPrinterKeyW");
    }
    public static int EnumPrinterKeyW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = EnumPrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pSubkey, cbSubkey, pcbSubkey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SetPrinterDataA$MH,"SetPrinterDataA");
    }
    public static int SetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SetPrinterDataW$MH,"SetPrinterDataW");
    }
    public static int SetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SetPrinterDataExA$MH,"SetPrinterDataExA");
    }
    public static int SetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$935.SetPrinterDataExW$MH,"SetPrinterDataExW");
    }
    public static int SetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = SetPrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName, Type, pData, cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$935.DeletePrinterDataA$MH,"DeletePrinterDataA");
    }
    public static int DeletePrinterDataA ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = DeletePrinterDataA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$936.DeletePrinterDataW$MH,"DeletePrinterDataW");
    }
    public static int DeletePrinterDataW ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = DeletePrinterDataW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$936.DeletePrinterDataExA$MH,"DeletePrinterDataExA");
    }
    public static int DeletePrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = DeletePrinterDataExA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$936.DeletePrinterDataExW$MH,"DeletePrinterDataExW");
    }
    public static int DeletePrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = DeletePrinterDataExW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName, pValueName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$936.DeletePrinterKeyA$MH,"DeletePrinterKeyA");
    }
    public static int DeletePrinterKeyA ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = DeletePrinterKeyA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$936.DeletePrinterKeyW$MH,"DeletePrinterKeyW");
    }
    public static int DeletePrinterKeyW ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = DeletePrinterKeyW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pKeyName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPRINTER_NOTIFY_OPTIONS_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_OPTIONS_TYPE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_INFO_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_INFO_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_NOTIFY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_NOTIFY_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBINARY_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_REQUEST_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_REQUEST_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_REQUEST_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_REQUEST_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_RESPONSE_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_RESPONSE_DATA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PBIDI_RESPONSE_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIDI_RESPONSE_CONTAINER = Constants$root.C_POINTER$LAYOUT;
    public static int BIDI_NULL() {
        return (int)0L;
    }
    public static int BIDI_INT() {
        return (int)1L;
    }
    public static int BIDI_FLOAT() {
        return (int)2L;
    }
    public static int BIDI_BOOL() {
        return (int)3L;
    }
    public static int BIDI_STRING() {
        return (int)4L;
    }
    public static int BIDI_TEXT() {
        return (int)5L;
    }
    public static int BIDI_ENUM() {
        return (int)6L;
    }
    public static int BIDI_BLOB() {
        return (int)7L;
    }
    public static MethodHandle WaitForPrinterChange$MH() {
        return RuntimeHelper.requireNonNull(constants$936.WaitForPrinterChange$MH,"WaitForPrinterChange");
    }
    public static int WaitForPrinterChange ( Addressable hPrinter,  int Flags) {
        var mh$ = WaitForPrinterChange$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindFirstPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$937.FindFirstPrinterChangeNotification$MH,"FindFirstPrinterChangeNotification");
    }
    public static MemoryAddress FindFirstPrinterChangeNotification ( Addressable hPrinter,  int fdwFilter,  int fdwOptions,  Addressable pPrinterNotifyOptions) {
        var mh$ = FindFirstPrinterChangeNotification$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hPrinter, fdwFilter, fdwOptions, pPrinterNotifyOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNextPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$937.FindNextPrinterChangeNotification$MH,"FindNextPrinterChangeNotification");
    }
    public static int FindNextPrinterChangeNotification ( Addressable hChange,  Addressable pdwChange,  Addressable pvReserved,  Addressable ppPrinterNotifyInfo) {
        var mh$ = FindNextPrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange, pdwChange, pvReserved, ppPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrinterNotifyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$937.FreePrinterNotifyInfo$MH,"FreePrinterNotifyInfo");
    }
    public static int FreePrinterNotifyInfo ( Addressable pPrinterNotifyInfo) {
        var mh$ = FreePrinterNotifyInfo$MH();
        try {
            return (int)mh$.invokeExact(pPrinterNotifyInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindClosePrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$937.FindClosePrinterChangeNotification$MH,"FindClosePrinterChangeNotification");
    }
    public static int FindClosePrinterChangeNotification ( Addressable hChange) {
        var mh$ = FindClosePrinterChangeNotification$MH();
        try {
            return (int)mh$.invokeExact(hChange);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$937.PrinterMessageBoxA$MH,"PrinterMessageBoxA");
    }
    public static int PrinterMessageBoxA ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = PrinterMessageBoxA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$937.PrinterMessageBoxW$MH,"PrinterMessageBoxW");
    }
    public static int PrinterMessageBoxW ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = PrinterMessageBoxW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Error, hWnd, pText, pCaption, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClosePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$938.ClosePrinter$MH,"ClosePrinter");
    }
    public static int ClosePrinter ( Addressable hPrinter) {
        var mh$ = ClosePrinter$MH();
        try {
            return (int)mh$.invokeExact(hPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$938.AddFormA$MH,"AddFormA");
    }
    public static int AddFormA ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = AddFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$938.AddFormW$MH,"AddFormW");
    }
    public static int AddFormW ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = AddFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$938.DeleteFormA$MH,"DeleteFormA");
    }
    public static int DeleteFormA ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = DeleteFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$938.DeleteFormW$MH,"DeleteFormW");
    }
    public static int DeleteFormW ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = DeleteFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$938.GetFormA$MH,"GetFormA");
    }
    public static int GetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$939.GetFormW$MH,"GetFormW");
    }
    public static int GetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SetFormA$MH,"SetFormA");
    }
    public static int SetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = SetFormA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$939.SetFormW$MH,"SetFormW");
    }
    public static int SetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = SetFormW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, pFormName, Level, pForm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsA$MH() {
        return RuntimeHelper.requireNonNull(constants$939.EnumFormsA$MH,"EnumFormsA");
    }
    public static int EnumFormsA ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumFormsA$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsW$MH() {
        return RuntimeHelper.requireNonNull(constants$939.EnumFormsW$MH,"EnumFormsW");
    }
    public static int EnumFormsW ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumFormsW$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, Level, pForm, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$939.EnumMonitorsA$MH,"EnumMonitorsA");
    }
    public static int EnumMonitorsA ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumMonitorsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$940.EnumMonitorsW$MH,"EnumMonitorsW");
    }
    public static int EnumMonitorsW ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumMonitorsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitor, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$940.AddMonitorA$MH,"AddMonitorA");
    }
    public static int AddMonitorA ( Addressable pName,  int Level,  Addressable pMonitors) {
        var mh$ = AddMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$940.AddMonitorW$MH,"AddMonitorW");
    }
    public static int AddMonitorW ( Addressable pName,  int Level,  Addressable pMonitors) {
        var mh$ = AddMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pMonitors);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$940.DeleteMonitorA$MH,"DeleteMonitorA");
    }
    public static int DeleteMonitorA ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = DeleteMonitorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$940.DeleteMonitorW$MH,"DeleteMonitorW");
    }
    public static int DeleteMonitorW ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = DeleteMonitorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsA$MH() {
        return RuntimeHelper.requireNonNull(constants$940.EnumPortsA$MH,"EnumPortsA");
    }
    public static int EnumPortsA ( Addressable pName,  int Level,  Addressable pPort,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPortsA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsW$MH() {
        return RuntimeHelper.requireNonNull(constants$941.EnumPortsW$MH,"EnumPortsW");
    }
    public static int EnumPortsW ( Addressable pName,  int Level,  Addressable pPort,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = EnumPortsW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pPort, cbBuf, pcbNeeded, pcReturned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$941.AddPortA$MH,"AddPortA");
    }
    public static int AddPortA ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = AddPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$941.AddPortW$MH,"AddPortW");
    }
    public static int AddPortW ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = AddPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pMonitorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$941.ConfigurePortA$MH,"ConfigurePortA");
    }
    public static int ConfigurePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = ConfigurePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$941.ConfigurePortW$MH,"ConfigurePortW");
    }
    public static int ConfigurePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = ConfigurePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$941.DeletePortA$MH,"DeletePortA");
    }
    public static int DeletePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = DeletePortA$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.DeletePortW$MH,"DeletePortW");
    }
    public static int DeletePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = DeletePortW$MH();
        try {
            return (int)mh$.invokeExact(pName, hWnd, pPortName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle XcvDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.XcvDataW$MH,"XcvDataW");
    }
    public static int XcvDataW ( Addressable hXcv,  Addressable pszDataName,  Addressable pInputData,  int cbInputData,  Addressable pOutputData,  int cbOutputData,  Addressable pcbOutputNeeded,  Addressable pdwStatus) {
        var mh$ = XcvDataW$MH();
        try {
            return (int)mh$.invokeExact(hXcv, pszDataName, pInputData, cbInputData, pOutputData, cbOutputData, pcbOutputNeeded, pdwStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$942.GetDefaultPrinterA$MH,"GetDefaultPrinterA");
    }
    public static int GetDefaultPrinterA ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = GetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.GetDefaultPrinterW$MH,"GetDefaultPrinterW");
    }
    public static int GetDefaultPrinterW ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = GetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszBuffer, pcchBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SetDefaultPrinterA$MH,"SetDefaultPrinterA");
    }
    public static int SetDefaultPrinterA ( Addressable pszPrinter) {
        var mh$ = SetDefaultPrinterA$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$942.SetDefaultPrinterW$MH,"SetDefaultPrinterW");
    }
    public static int SetDefaultPrinterW ( Addressable pszPrinter) {
        var mh$ = SetDefaultPrinterW$MH();
        try {
            return (int)mh$.invokeExact(pszPrinter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SetPortA$MH,"SetPortA");
    }
    public static int SetPortA ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = SetPortA$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.SetPortW$MH,"SetPortW");
    }
    public static int SetPortW ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = SetPortW$MH();
        try {
            return (int)mh$.invokeExact(pName, pPortName, dwLevel, pPortInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.AddPrinterConnectionA$MH,"AddPrinterConnectionA");
    }
    public static int AddPrinterConnectionA ( Addressable pName) {
        var mh$ = AddPrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.AddPrinterConnectionW$MH,"AddPrinterConnectionW");
    }
    public static int AddPrinterConnectionW ( Addressable pName) {
        var mh$ = AddPrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$943.DeletePrinterConnectionA$MH,"DeletePrinterConnectionA");
    }
    public static int DeletePrinterConnectionA ( Addressable pName) {
        var mh$ = DeletePrinterConnectionA$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$943.DeletePrinterConnectionW$MH,"DeletePrinterConnectionW");
    }
    public static int DeletePrinterConnectionW ( Addressable pName) {
        var mh$ = DeletePrinterConnectionW$MH();
        try {
            return (int)mh$.invokeExact(pName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConnectToPrinterDlg$MH() {
        return RuntimeHelper.requireNonNull(constants$944.ConnectToPrinterDlg$MH,"ConnectToPrinterDlg");
    }
    public static MemoryAddress ConnectToPrinterDlg ( Addressable hwnd,  int Flags) {
        var mh$ = ConnectToPrinterDlg$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(hwnd, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPROVIDOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPROVIDOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPROVIDOR_INFO_2 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle AddPrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$944.AddPrintProvidorA$MH,"AddPrintProvidorA");
    }
    public static int AddPrintProvidorA ( Addressable pName,  int Level,  Addressable pProvidorInfo) {
        var mh$ = AddPrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$944.AddPrintProvidorW$MH,"AddPrintProvidorW");
    }
    public static int AddPrintProvidorW ( Addressable pName,  int Level,  Addressable pProvidorInfo) {
        var mh$ = AddPrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, Level, pProvidorInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$944.DeletePrintProvidorA$MH,"DeletePrintProvidorA");
    }
    public static int DeletePrintProvidorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = DeletePrintProvidorA$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$944.DeletePrintProvidorW$MH,"DeletePrintProvidorW");
    }
    public static int DeletePrintProvidorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = DeletePrintProvidorW$MH();
        try {
            return (int)mh$.invokeExact(pName, pEnvironment, pPrintProvidorName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeA$MH() {
        return RuntimeHelper.requireNonNull(constants$944.IsValidDevmodeA$MH,"IsValidDevmodeA");
    }
    public static int IsValidDevmodeA ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = IsValidDevmodeA$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeW$MH() {
        return RuntimeHelper.requireNonNull(constants$945.IsValidDevmodeW$MH,"IsValidDevmodeW");
    }
    public static int IsValidDevmodeW ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = IsValidDevmodeW$MH();
        try {
            return (int)mh$.invokeExact(pDevmode, DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PRINTER_OPTION_NO_CACHE() {
        return (int)1L;
    }
    public static int PRINTER_OPTION_CACHE() {
        return (int)2L;
    }
    public static int PRINTER_OPTION_CLIENT_CHANGE() {
        return (int)4L;
    }
    public static int PRINTER_OPTION_NO_CLIENT_DATA() {
        return (int)8L;
    }
    public static OfAddress PPRINTER_OPTIONSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONSA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_OPTIONSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONSW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPPRINTER_OPTIONS = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle OpenPrinter2A$MH() {
        return RuntimeHelper.requireNonNull(constants$945.OpenPrinter2A$MH,"OpenPrinter2A");
    }
    public static int OpenPrinter2A ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = OpenPrinter2A$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinter2W$MH() {
        return RuntimeHelper.requireNonNull(constants$945.OpenPrinter2W$MH,"OpenPrinter2W");
    }
    public static int OpenPrinter2W ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = OpenPrinter2W$MH();
        try {
            return (int)mh$.invokeExact(pPrinterName, phPrinter, pDefault, pOptions);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PPRINTER_CONNECTION_INFO_1A = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_CONNECTION_INFO_1W = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PPRINTER_CONNECTION_INFO_1 = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle AddPrinterConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$945.AddPrinterConnection2A$MH,"AddPrinterConnection2A");
    }
    public static int AddPrinterConnection2A ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = AddPrinterConnection2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$945.AddPrinterConnection2W$MH,"AddPrinterConnection2W");
    }
    public static int AddPrinterConnection2W ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = AddPrinterConnection2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszName, dwLevel, pConnectionInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$945.InstallPrinterDriverFromPackageA$MH,"InstallPrinterDriverFromPackageA");
    }
    public static int InstallPrinterDriverFromPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszDriverName,  Addressable pszEnvironment,  int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InstallPrinterDriverFromPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$946.InstallPrinterDriverFromPackageW$MH,"InstallPrinterDriverFromPackageW");
    }
    public static int InstallPrinterDriverFromPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszDriverName,  Addressable pszEnvironment,  int dwFlags) {
        var mh$ = InstallPrinterDriverFromPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszDriverName, pszEnvironment, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$946.UploadPrinterDriverPackageA$MH,"UploadPrinterDriverPackageA");
    }
    public static int UploadPrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$946.UploadPrinterDriverPackageW$MH,"UploadPrinterDriverPackageW");
    }
    public static int UploadPrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = UploadPrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment, dwFlags, hwnd, pszDestInfPath, pcchDestInfPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PCORE_PRINTER_DRIVERA = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCORE_PRINTER_DRIVERW = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PCORE_PRINTER_DRIVER = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle GetCorePrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$946.GetCorePrinterDriversA$MH,"GetCorePrinterDriversA");
    }
    public static int GetCorePrinterDriversA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCorePrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$946.GetCorePrinterDriversW$MH,"GetCorePrinterDriversW");
    }
    public static int GetCorePrinterDriversW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = GetCorePrinterDriversW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszzCoreDriverDependencies, cCorePrinterDrivers, pCorePrinterDrivers);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledA$MH() {
        return RuntimeHelper.requireNonNull(constants$946.CorePrinterDriverInstalledA$MH,"CorePrinterDriverInstalledA");
    }
    public static int CorePrinterDriverInstalledA ( Addressable pszServer,  Addressable pszEnvironment,  MemorySegment CoreDriverGUID,  MemorySegment ftDriverDate,  long dwlDriverVersion,  Addressable pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CorePrinterDriverInstalledW$MH() {
        return RuntimeHelper.requireNonNull(constants$947.CorePrinterDriverInstalledW$MH,"CorePrinterDriverInstalledW");
    }
    public static int CorePrinterDriverInstalledW ( Addressable pszServer,  Addressable pszEnvironment,  MemorySegment CoreDriverGUID,  MemorySegment ftDriverDate,  long dwlDriverVersion,  Addressable pbDriverInstalled) {
        var mh$ = CorePrinterDriverInstalledW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, CoreDriverGUID, ftDriverDate, dwlDriverVersion, pbDriverInstalled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathA$MH() {
        return RuntimeHelper.requireNonNull(constants$947.GetPrinterDriverPackagePathA$MH,"GetPrinterDriverPackagePathA");
    }
    public static int GetPrinterDriverPackagePathA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathW$MH() {
        return RuntimeHelper.requireNonNull(constants$947.GetPrinterDriverPackagePathW$MH,"GetPrinterDriverPackagePathW");
    }
    public static int GetPrinterDriverPackagePathW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = GetPrinterDriverPackagePathW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszEnvironment, pszLanguage, pszPackageID, pszDriverPackageCab, cchDriverPackageCab, pcchRequiredSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$947.DeletePrinterDriverPackageA$MH,"DeletePrinterDriverPackageA");
    }
    public static int DeletePrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageA$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$947.DeletePrinterDriverPackageW$MH,"DeletePrinterDriverPackageW");
    }
    public static int DeletePrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = DeletePrinterDriverPackageW$MH();
        try {
            return (int)mh$.invokeExact(pszServer, pszInfPath, pszEnvironment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int kPropertyTypeString() {
        return (int)1L;
    }
    public static int kPropertyTypeInt32() {
        return (int)2L;
    }
    public static int kPropertyTypeInt64() {
        return (int)3L;
    }
    public static int kPropertyTypeByte() {
        return (int)4L;
    }
    public static int kPropertyTypeTime() {
        return (int)5L;
    }
    public static int kPropertyTypeDevMode() {
        return (int)6L;
    }
    public static int kPropertyTypeSD() {
        return (int)7L;
    }
    public static int kPropertyTypeNotificationReply() {
        return (int)8L;
    }
    public static int kPropertyTypeNotificationOptions() {
        return (int)9L;
    }
    public static int kPropertyTypeBuffer() {
        return (int)10L;
    }
    public static int kAddingDocumentSequence() {
        return (int)0L;
    }
    public static int kDocumentSequenceAdded() {
        return (int)1L;
    }
    public static int kAddingFixedDocument() {
        return (int)2L;
    }
    public static int kFixedDocumentAdded() {
        return (int)3L;
    }
    public static int kAddingFixedPage() {
        return (int)4L;
    }
    public static int kFixedPageAdded() {
        return (int)5L;
    }
    public static int kResourceAdded() {
        return (int)6L;
    }
    public static int kFontAdded() {
        return (int)7L;
    }
    public static int kImageAdded() {
        return (int)8L;
    }
    public static int kXpsDocumentCommitted() {
        return (int)9L;
    }
    public static int kJobProduction() {
        return (int)1L;
    }
    public static int kJobConsumption() {
        return (int)2L;
    }
    public static MethodHandle ReportJobProcessingProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$947.ReportJobProcessingProgress$MH,"ReportJobProcessingProgress");
    }
    public static int ReportJobProcessingProgress ( Addressable printerHandle,  int jobId,  int jobOperation,  int jobProgress) {
        var mh$ = ReportJobProcessingProgress$MH();
        try {
            return (int)mh$.invokeExact(printerHandle, jobId, jobOperation, jobProgress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2A$MH() {
        return RuntimeHelper.requireNonNull(constants$948.GetPrinterDriver2A$MH,"GetPrinterDriver2A");
    }
    public static int GetPrinterDriver2A ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriver2A$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2W$MH() {
        return RuntimeHelper.requireNonNull(constants$948.GetPrinterDriver2W$MH,"GetPrinterDriver2W");
    }
    public static int GetPrinterDriver2W ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = GetPrinterDriver2W$MH();
        try {
            return (int)mh$.invokeExact(hWnd, hPrinter, pEnvironment, Level, pDriverInfo, cbBuf, pcbNeeded);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PRINT_EXECUTION_CONTEXT_APPLICATION() {
        return (int)0L;
    }
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE() {
        return (int)1L;
    }
    public static int PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST() {
        return (int)2L;
    }
    public static int PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE() {
        return (int)3L;
    }
    public static int PRINT_EXECUTION_CONTEXT_WOW64() {
        return (int)4L;
    }
    public static MethodHandle GetPrintExecutionData$MH() {
        return RuntimeHelper.requireNonNull(constants$948.GetPrintExecutionData$MH,"GetPrintExecutionData");
    }
    public static int GetPrintExecutionData ( Addressable pData) {
        var mh$ = GetPrintExecutionData$MH();
        try {
            return (int)mh$.invokeExact(pData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobNamedPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$948.GetJobNamedPropertyValue$MH,"GetJobNamedPropertyValue");
    }
    public static int GetJobNamedPropertyValue ( Addressable hPrinter,  int JobId,  Addressable pszName,  Addressable pValue) {
        var mh$ = GetJobNamedPropertyValue$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName, pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintPropertyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$948.FreePrintPropertyValue$MH,"FreePrintPropertyValue");
    }
    public static void FreePrintPropertyValue ( Addressable pValue) {
        var mh$ = FreePrintPropertyValue$MH();
        try {
            mh$.invokeExact(pValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrintNamedPropertyArray$MH() {
        return RuntimeHelper.requireNonNull(constants$948.FreePrintNamedPropertyArray$MH,"FreePrintNamedPropertyArray");
    }
    public static void FreePrintNamedPropertyArray ( int cProperties,  Addressable ppProperties) {
        var mh$ = FreePrintNamedPropertyArray$MH();
        try {
            mh$.invokeExact(cProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$949.SetJobNamedProperty$MH,"SetJobNamedProperty");
    }
    public static int SetJobNamedProperty ( Addressable hPrinter,  int JobId,  Addressable pProperty) {
        var mh$ = SetJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteJobNamedProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$949.DeleteJobNamedProperty$MH,"DeleteJobNamedProperty");
    }
    public static int DeleteJobNamedProperty ( Addressable hPrinter,  int JobId,  Addressable pszName) {
        var mh$ = DeleteJobNamedProperty$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pszName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobNamedProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$949.EnumJobNamedProperties$MH,"EnumJobNamedProperties");
    }
    public static int EnumJobNamedProperties ( Addressable hPrinter,  int JobId,  Addressable pcProperties,  Addressable ppProperties) {
        var mh$ = EnumJobNamedProperties$MH();
        try {
            return (int)mh$.invokeExact(hPrinter, JobId, pcProperties, ppProperties);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintOutputInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$949.GetPrintOutputInfo$MH,"GetPrintOutputInfo");
    }
    public static int GetPrintOutputInfo ( Addressable hWnd,  Addressable pszPrinter,  Addressable phFile,  Addressable ppszOutputFile) {
        var mh$ = GetPrintOutputInfo$MH();
        try {
            return (int)mh$.invokeExact(hWnd, pszPrinter, phFile, ppszOutputFile);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int REGCLS_SINGLEUSE() {
        return (int)0L;
    }
    public static int REGCLS_MULTIPLEUSE() {
        return (int)1L;
    }
    public static int REGCLS_MULTI_SEPARATE() {
        return (int)2L;
    }
    public static int REGCLS_SUSPENDED() {
        return (int)4L;
    }
    public static int REGCLS_SURROGATE() {
        return (int)8L;
    }
    public static int REGCLS_AGILE() {
        return (int)16L;
    }
    public static int COINITBASE_MULTITHREADED() {
        return (int)0L;
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$949.__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0000_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPUNKNOWN = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$950.IID_IUnknown$SEGMENT,"IID_IUnknown");
    }
    public static MethodHandle IUnknown_QueryInterface_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$950.IUnknown_QueryInterface_Proxy$MH,"IUnknown_QueryInterface_Proxy");
    }
    public static int IUnknown_QueryInterface_Proxy ( Addressable This,  Addressable riid,  Addressable ppvObject) {
        var mh$ = IUnknown_QueryInterface_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_QueryInterface_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$950.IUnknown_QueryInterface_Stub$MH,"IUnknown_QueryInterface_Stub");
    }
    public static void IUnknown_QueryInterface_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IUnknown_QueryInterface_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_AddRef_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$950.IUnknown_AddRef_Proxy$MH,"IUnknown_AddRef_Proxy");
    }
    public static int IUnknown_AddRef_Proxy ( Addressable This) {
        var mh$ = IUnknown_AddRef_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_AddRef_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$950.IUnknown_AddRef_Stub$MH,"IUnknown_AddRef_Stub");
    }
    public static void IUnknown_AddRef_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IUnknown_AddRef_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_Release_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$950.IUnknown_Release_Proxy$MH,"IUnknown_Release_Proxy");
    }
    public static int IUnknown_Release_Proxy ( Addressable This) {
        var mh$ = IUnknown_Release_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IUnknown_Release_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$951.IUnknown_Release_Stub$MH,"IUnknown_Release_Stub");
    }
    public static void IUnknown_Release_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IUnknown_Release_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0001_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0001_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_AsyncIUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$951.IID_AsyncIUnknown$SEGMENT,"IID_AsyncIUnknown");
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0002_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH() {
        return constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$951.__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0002_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPCLASSFACTORY = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IClassFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$952.IID_IClassFactory$SEGMENT,"IID_IClassFactory");
    }
    public static MethodHandle IClassFactory_RemoteCreateInstance_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$952.IClassFactory_RemoteCreateInstance_Proxy$MH,"IClassFactory_RemoteCreateInstance_Proxy");
    }
    public static int IClassFactory_RemoteCreateInstance_Proxy ( Addressable This,  Addressable riid,  Addressable ppvObject) {
        var mh$ = IClassFactory_RemoteCreateInstance_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteCreateInstance_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$952.IClassFactory_RemoteCreateInstance_Stub$MH,"IClassFactory_RemoteCreateInstance_Stub");
    }
    public static void IClassFactory_RemoteCreateInstance_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IClassFactory_RemoteCreateInstance_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteLockServer_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$952.IClassFactory_RemoteLockServer_Proxy$MH,"IClassFactory_RemoteLockServer_Proxy");
    }
    public static int IClassFactory_RemoteLockServer_Proxy ( Addressable This,  int fLock) {
        var mh$ = IClassFactory_RemoteLockServer_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_RemoteLockServer_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$952.IClassFactory_RemoteLockServer_Stub$MH,"IClassFactory_RemoteLockServer_Stub");
    }
    public static void IClassFactory_RemoteLockServer_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IClassFactory_RemoteLockServer_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH() {
        return constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$952.__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0003_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH() {
        return constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwnbase_0000_0003_v0_0_s_ifspec"), x);
    }
    public static MethodHandle IClassFactory_CreateInstance_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$953.IClassFactory_CreateInstance_Proxy$MH,"IClassFactory_CreateInstance_Proxy");
    }
    public static int IClassFactory_CreateInstance_Proxy ( Addressable This,  Addressable pUnkOuter,  Addressable riid,  Addressable ppvObject) {
        var mh$ = IClassFactory_CreateInstance_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pUnkOuter, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_CreateInstance_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$953.IClassFactory_CreateInstance_Stub$MH,"IClassFactory_CreateInstance_Stub");
    }
    public static int IClassFactory_CreateInstance_Stub ( Addressable This,  Addressable riid,  Addressable ppvObject) {
        var mh$ = IClassFactory_CreateInstance_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, riid, ppvObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_LockServer_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$953.IClassFactory_LockServer_Proxy$MH,"IClassFactory_LockServer_Proxy");
    }
    public static int IClassFactory_LockServer_Proxy ( Addressable This,  int fLock) {
        var mh$ = IClassFactory_LockServer_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IClassFactory_LockServer_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$953.IClassFactory_LockServer_Stub$MH,"IClassFactory_LockServer_Stub");
    }
    public static int IClassFactory_LockServer_Stub ( Addressable This,  int fLock) {
        var mh$ = IClassFactory_LockServer_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, fLock);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH() {
        return constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$953.__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH() {
        return constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0000_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPMARSHAL = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.IID_IMarshal$SEGMENT,"IID_IMarshal");
    }
    public static MemorySegment IID_INoMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.IID_INoMarshal$SEGMENT,"IID_INoMarshal");
    }
    public static MemorySegment IID_IAgileObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.IID_IAgileObject$SEGMENT,"IID_IAgileObject");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH() {
        return constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0003_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH() {
        return constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$954.__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0003_v0_0_s_ifspec"), x);
    }
    public static int ACTIVATIONTYPE_UNCATEGORIZED() {
        return (int)0L;
    }
    public static int ACTIVATIONTYPE_FROM_MONIKER() {
        return (int)1L;
    }
    public static int ACTIVATIONTYPE_FROM_DATA() {
        return (int)2L;
    }
    public static int ACTIVATIONTYPE_FROM_STORAGE() {
        return (int)4L;
    }
    public static int ACTIVATIONTYPE_FROM_STREAM() {
        return (int)8L;
    }
    public static int ACTIVATIONTYPE_FROM_FILE() {
        return (int)16L;
    }
    public static MemorySegment IID_IActivationFilter$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.IID_IActivationFilter$SEGMENT,"IID_IActivationFilter");
    }
    public static OfAddress LPMARSHAL2 = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IMarshal2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.IID_IMarshal2$SEGMENT,"IID_IMarshal2");
    }
    public static OfAddress LPMALLOC = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IMalloc$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.IID_IMalloc$SEGMENT,"IID_IMalloc");
    }
    public static OfAddress LPSTDMARSHALINFO = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IStdMarshalInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.IID_IStdMarshalInfo$SEGMENT,"IID_IStdMarshalInfo");
    }
    public static OfAddress LPEXTERNALCONNECTION = Constants$root.C_POINTER$LAYOUT;
    public static int EXTCONN_STRONG() {
        return (int)1L;
    }
    public static int EXTCONN_WEAK() {
        return (int)2L;
    }
    public static int EXTCONN_CALLABLE() {
        return (int)4L;
    }
    public static MemorySegment IID_IExternalConnection$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.IID_IExternalConnection$SEGMENT,"IID_IExternalConnection");
    }
    public static OfAddress LPMULTIQI = Constants$root.C_POINTER$LAYOUT;
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT() {
        return constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH() {
        return constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$955.__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0008_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT() {
        return constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH() {
        return constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0008_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IMultiQI$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.IID_IMultiQI$SEGMENT,"IID_IMultiQI");
    }
    public static MemorySegment IID_AsyncIMultiQI$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.IID_AsyncIMultiQI$SEGMENT,"IID_AsyncIMultiQI");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT() {
        return constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH() {
        return constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0009_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT() {
        return constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH() {
        return constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$956.__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0009_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IInternalUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$956.IID_IInternalUnknown$SEGMENT,"IID_IInternalUnknown");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT() {
        return constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH() {
        return constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0010_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT() {
        return constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH() {
        return constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$957.__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0010_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPENUMUNKNOWN = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumUnknown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$957.IID_IEnumUnknown$SEGMENT,"IID_IEnumUnknown");
    }
    public static MethodHandle IEnumUnknown_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$957.IEnumUnknown_RemoteNext_Proxy$MH,"IEnumUnknown_RemoteNext_Proxy");
    }
    public static int IEnumUnknown_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumUnknown_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumUnknown_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$957.IEnumUnknown_RemoteNext_Stub$MH,"IEnumUnknown_RemoteNext_Stub");
    }
    public static void IEnumUnknown_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumUnknown_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPENUMSTRING = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumString$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$957.IID_IEnumString$SEGMENT,"IID_IEnumString");
    }
    public static MethodHandle IEnumString_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$958.IEnumString_RemoteNext_Proxy$MH,"IEnumString_RemoteNext_Proxy");
    }
    public static int IEnumString_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumString_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$958.IEnumString_RemoteNext_Stub$MH,"IEnumString_RemoteNext_Stub");
    }
    public static void IEnumString_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumString_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment IID_ISequentialStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$958.IID_ISequentialStream$SEGMENT,"IID_ISequentialStream");
    }
    public static MethodHandle ISequentialStream_RemoteRead_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$958.ISequentialStream_RemoteRead_Proxy$MH,"ISequentialStream_RemoteRead_Proxy");
    }
    public static int ISequentialStream_RemoteRead_Proxy ( Addressable This,  Addressable pv,  int cb,  Addressable pcbRead) {
        var mh$ = ISequentialStream_RemoteRead_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteRead_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$958.ISequentialStream_RemoteRead_Stub$MH,"ISequentialStream_RemoteRead_Stub");
    }
    public static void ISequentialStream_RemoteRead_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = ISequentialStream_RemoteRead_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteWrite_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$958.ISequentialStream_RemoteWrite_Proxy$MH,"ISequentialStream_RemoteWrite_Proxy");
    }
    public static int ISequentialStream_RemoteWrite_Proxy ( Addressable This,  Addressable pv,  int cb,  Addressable pcbWritten) {
        var mh$ = ISequentialStream_RemoteWrite_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_RemoteWrite_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$959.ISequentialStream_RemoteWrite_Stub$MH,"ISequentialStream_RemoteWrite_Stub");
    }
    public static void ISequentialStream_RemoteWrite_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = ISequentialStream_RemoteWrite_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPSTREAM = Constants$root.C_POINTER$LAYOUT;
    public static int STGTY_STORAGE() {
        return (int)1L;
    }
    public static int STGTY_STREAM() {
        return (int)2L;
    }
    public static int STGTY_LOCKBYTES() {
        return (int)3L;
    }
    public static int STGTY_PROPERTY() {
        return (int)4L;
    }
    public static int STREAM_SEEK_SET() {
        return (int)0L;
    }
    public static int STREAM_SEEK_CUR() {
        return (int)1L;
    }
    public static int STREAM_SEEK_END() {
        return (int)2L;
    }
    public static int LOCK_WRITE() {
        return (int)1L;
    }
    public static int LOCK_EXCLUSIVE() {
        return (int)2L;
    }
    public static int LOCK_ONLYONCE() {
        return (int)4L;
    }
    public static MemorySegment IID_IStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$959.IID_IStream$SEGMENT,"IID_IStream");
    }
    public static MethodHandle IStream_RemoteSeek_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$959.IStream_RemoteSeek_Proxy$MH,"IStream_RemoteSeek_Proxy");
    }
    public static int IStream_RemoteSeek_Proxy ( Addressable This,  MemorySegment dlibMove,  int dwOrigin,  Addressable plibNewPosition) {
        var mh$ = IStream_RemoteSeek_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteSeek_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$959.IStream_RemoteSeek_Stub$MH,"IStream_RemoteSeek_Stub");
    }
    public static void IStream_RemoteSeek_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IStream_RemoteSeek_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteCopyTo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$959.IStream_RemoteCopyTo_Proxy$MH,"IStream_RemoteCopyTo_Proxy");
    }
    public static int IStream_RemoteCopyTo_Proxy ( Addressable This,  Addressable pstm,  MemorySegment cb,  Addressable pcbRead,  Addressable pcbWritten) {
        var mh$ = IStream_RemoteCopyTo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_RemoteCopyTo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$959.IStream_RemoteCopyTo_Stub$MH,"IStream_RemoteCopyTo_Stub");
    }
    public static void IStream_RemoteCopyTo_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IStream_RemoteCopyTo_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PRPCOLEMESSAGE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IRpcChannelBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.IID_IRpcChannelBuffer$SEGMENT,"IID_IRpcChannelBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT() {
        return constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH() {
        return constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0015_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT() {
        return constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH() {
        return constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$960.__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0015_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IRpcChannelBuffer2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.IID_IRpcChannelBuffer2$SEGMENT,"IID_IRpcChannelBuffer2");
    }
    public static MemorySegment IID_IAsyncRpcChannelBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.IID_IAsyncRpcChannelBuffer$SEGMENT,"IID_IAsyncRpcChannelBuffer");
    }
    public static MemorySegment IID_IRpcChannelBuffer3$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$960.IID_IRpcChannelBuffer3$SEGMENT,"IID_IRpcChannelBuffer3");
    }
    public static MemorySegment IID_IRpcSyntaxNegotiate$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.IID_IRpcSyntaxNegotiate$SEGMENT,"IID_IRpcSyntaxNegotiate");
    }
    public static MemorySegment IID_IRpcProxyBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.IID_IRpcProxyBuffer$SEGMENT,"IID_IRpcProxyBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$LAYOUT() {
        return constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$VH() {
        return constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0020_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$LAYOUT() {
        return constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$VH() {
        return constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$961.__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0020_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IRpcStubBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.IID_IRpcStubBuffer$SEGMENT,"IID_IRpcStubBuffer");
    }
    public static MemorySegment IID_IPSFactoryBuffer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$961.IID_IPSFactoryBuffer$SEGMENT,"IID_IPSFactoryBuffer");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$LAYOUT() {
        return constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$VH() {
        return constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0022_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$LAYOUT() {
        return constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$VH() {
        return constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0022_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IChannelHook$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.IID_IChannelHook$SEGMENT,"IID_IChannelHook");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$LAYOUT() {
        return constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$VH() {
        return constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0023_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$LAYOUT() {
        return constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$VH() {
        return constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$962.__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0023_v0_0_s_ifspec"), x);
    }
    public static OfAddress PSOLE_AUTHENTICATION_SERVICE = Constants$root.C_POINTER$LAYOUT;
    public static int EOAC_NONE() {
        return (int)0L;
    }
    public static int EOAC_MUTUAL_AUTH() {
        return (int)1L;
    }
    public static int EOAC_STATIC_CLOAKING() {
        return (int)32L;
    }
    public static int EOAC_DYNAMIC_CLOAKING() {
        return (int)64L;
    }
    public static int EOAC_ANY_AUTHORITY() {
        return (int)128L;
    }
    public static int EOAC_MAKE_FULLSIC() {
        return (int)256L;
    }
    public static int EOAC_DEFAULT() {
        return (int)2048L;
    }
    public static int EOAC_SECURE_REFS() {
        return (int)2L;
    }
    public static int EOAC_ACCESS_CONTROL() {
        return (int)4L;
    }
    public static int EOAC_APPID() {
        return (int)8L;
    }
    public static int EOAC_DYNAMIC() {
        return (int)16L;
    }
    public static int EOAC_REQUIRE_FULLSIC() {
        return (int)512L;
    }
    public static int EOAC_AUTO_IMPERSONATE() {
        return (int)1024L;
    }
    public static int EOAC_DISABLE_AAA() {
        return (int)4096L;
    }
    public static int EOAC_NO_CUSTOM_MARSHAL() {
        return (int)8192L;
    }
    public static int EOAC_RESERVED1() {
        return (int)16384L;
    }
    public static OfAddress PSOLE_AUTHENTICATION_INFO = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress PSOLE_AUTHENTICATION_LIST = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IClientSecurity$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$962.IID_IClientSecurity$SEGMENT,"IID_IClientSecurity");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$LAYOUT() {
        return constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$VH() {
        return constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0024_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$LAYOUT() {
        return constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$VH() {
        return constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0024_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IServerSecurity$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.IID_IServerSecurity$SEGMENT,"IID_IServerSecurity");
    }
    public static int COMBND_RPCTIMEOUT() {
        return (int)1L;
    }
    public static int COMBND_SERVER_LOCALITY() {
        return (int)2L;
    }
    public static int COMBND_RESERVED1() {
        return (int)4L;
    }
    public static int COMBND_RESERVED2() {
        return (int)5L;
    }
    public static int COMBND_RESERVED3() {
        return (int)8L;
    }
    public static int COMBND_RESERVED4() {
        return (int)16L;
    }
    public static int SERVER_LOCALITY_PROCESS_LOCAL() {
        return (int)0L;
    }
    public static int SERVER_LOCALITY_MACHINE_LOCAL() {
        return (int)1L;
    }
    public static int SERVER_LOCALITY_REMOTE() {
        return (int)2L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$LAYOUT() {
        return constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$VH() {
        return constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0025_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$LAYOUT() {
        return constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$VH() {
        return constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$963.__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0025_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IRpcOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$963.IID_IRpcOptions$SEGMENT,"IID_IRpcOptions");
    }
    public static int COMGLB_EXCEPTION_HANDLING() {
        return (int)1L;
    }
    public static int COMGLB_APPID() {
        return (int)2L;
    }
    public static int COMGLB_RPC_THREADPOOL_SETTING() {
        return (int)3L;
    }
    public static int COMGLB_RO_SETTINGS() {
        return (int)4L;
    }
    public static int COMGLB_UNMARSHALING_POLICY() {
        return (int)5L;
    }
    public static int COMGLB_PROPERTIES_RESERVED1() {
        return (int)6L;
    }
    public static int COMGLB_PROPERTIES_RESERVED2() {
        return (int)7L;
    }
    public static int COMGLB_PROPERTIES_RESERVED3() {
        return (int)8L;
    }
    public static int COMGLB_EXCEPTION_HANDLE() {
        return (int)0L;
    }
    public static int COMGLB_EXCEPTION_DONOT_HANDLE_FATAL() {
        return (int)1L;
    }
    public static int COMGLB_EXCEPTION_DONOT_HANDLE() {
        return (int)1L;
    }
    public static int COMGLB_EXCEPTION_DONOT_HANDLE_ANY() {
        return (int)2L;
    }
    public static int COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL() {
        return (int)0L;
    }
    public static int COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL() {
        return (int)1L;
    }
    public static int COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES() {
        return (int)1L;
    }
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES() {
        return (int)2L;
    }
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES() {
        return (int)4L;
    }
    public static int COMGLB_FAST_RUNDOWN() {
        return (int)8L;
    }
    public static int COMGLB_RESERVED1() {
        return (int)16L;
    }
    public static int COMGLB_RESERVED2() {
        return (int)32L;
    }
    public static int COMGLB_RESERVED3() {
        return (int)64L;
    }
    public static int COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES() {
        return (int)128L;
    }
    public static int COMGLB_RESERVED4() {
        return (int)256L;
    }
    public static int COMGLB_RESERVED5() {
        return (int)512L;
    }
    public static int COMGLB_RESERVED6() {
        return (int)1024L;
    }
    public static int COMGLB_UNMARSHALING_POLICY_NORMAL() {
        return (int)0L;
    }
    public static int COMGLB_UNMARSHALING_POLICY_STRONG() {
        return (int)1L;
    }
    public static int COMGLB_UNMARSHALING_POLICY_HYBRID() {
        return (int)2L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$LAYOUT() {
        return constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$VH() {
        return constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0026_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$LAYOUT() {
        return constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$VH() {
        return constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0026_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IGlobalOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.IID_IGlobalOptions$SEGMENT,"IID_IGlobalOptions");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$LAYOUT() {
        return constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$VH() {
        return constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0027_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$LAYOUT() {
        return constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$VH() {
        return constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$964.__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0027_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPSURROGATE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_ISurrogate$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$964.IID_ISurrogate$SEGMENT,"IID_ISurrogate");
    }
    public static OfAddress LPGLOBALINTERFACETABLE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IGlobalInterfaceTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.IID_IGlobalInterfaceTable$SEGMENT,"IID_IGlobalInterfaceTable");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$LAYOUT() {
        return constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$VH() {
        return constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0029_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$LAYOUT() {
        return constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$VH() {
        return constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$965.__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0029_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_ISynchronize$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.IID_ISynchronize$SEGMENT,"IID_ISynchronize");
    }
    public static MemorySegment IID_ISynchronizeHandle$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.IID_ISynchronizeHandle$SEGMENT,"IID_ISynchronizeHandle");
    }
    public static MemorySegment IID_ISynchronizeEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$965.IID_ISynchronizeEvent$SEGMENT,"IID_ISynchronizeEvent");
    }
    public static MemorySegment IID_ISynchronizeContainer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_ISynchronizeContainer$SEGMENT,"IID_ISynchronizeContainer");
    }
    public static MemorySegment IID_ISynchronizeMutex$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_ISynchronizeMutex$SEGMENT,"IID_ISynchronizeMutex");
    }
    public static OfAddress LPCANCELMETHODCALLS = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_ICancelMethodCalls$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_ICancelMethodCalls$SEGMENT,"IID_ICancelMethodCalls");
    }
    public static int DCOM_NONE() {
        return (int)0L;
    }
    public static int DCOM_CALL_COMPLETE() {
        return (int)1L;
    }
    public static int DCOM_CALL_CANCELED() {
        return (int)2L;
    }
    public static MemorySegment IID_IAsyncManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_IAsyncManager$SEGMENT,"IID_IAsyncManager");
    }
    public static MemorySegment IID_ICallFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_ICallFactory$SEGMENT,"IID_ICallFactory");
    }
    public static MemorySegment IID_IRpcHelper$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$966.IID_IRpcHelper$SEGMENT,"IID_IRpcHelper");
    }
    public static MemorySegment IID_IReleaseMarshalBuffers$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_IReleaseMarshalBuffers$SEGMENT,"IID_IReleaseMarshalBuffers");
    }
    public static MemorySegment IID_IWaitMultiple$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_IWaitMultiple$SEGMENT,"IID_IWaitMultiple");
    }
    public static OfAddress LPADDRTRACKINGCONTROL = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IAddrTrackingControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_IAddrTrackingControl$SEGMENT,"IID_IAddrTrackingControl");
    }
    public static OfAddress LPADDREXCLUSIONCONTROL = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IAddrExclusionControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_IAddrExclusionControl$SEGMENT,"IID_IAddrExclusionControl");
    }
    public static MemorySegment IID_IPipeByte$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_IPipeByte$SEGMENT,"IID_IPipeByte");
    }
    public static MemorySegment IID_AsyncIPipeByte$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$967.IID_AsyncIPipeByte$SEGMENT,"IID_AsyncIPipeByte");
    }
    public static MemorySegment IID_IPipeLong$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.IID_IPipeLong$SEGMENT,"IID_IPipeLong");
    }
    public static MemorySegment IID_AsyncIPipeLong$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.IID_AsyncIPipeLong$SEGMENT,"IID_AsyncIPipeLong");
    }
    public static MemorySegment IID_IPipeDouble$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.IID_IPipeDouble$SEGMENT,"IID_IPipeDouble");
    }
    public static MemorySegment IID_AsyncIPipeDouble$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.IID_AsyncIPipeDouble$SEGMENT,"IID_AsyncIPipeDouble");
    }
    public static int APTTYPEQUALIFIER_NONE() {
        return (int)0L;
    }
    public static int APTTYPEQUALIFIER_IMPLICIT_MTA() {
        return (int)1L;
    }
    public static int APTTYPEQUALIFIER_NA_ON_MTA() {
        return (int)2L;
    }
    public static int APTTYPEQUALIFIER_NA_ON_STA() {
        return (int)3L;
    }
    public static int APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA() {
        return (int)4L;
    }
    public static int APTTYPEQUALIFIER_NA_ON_MAINSTA() {
        return (int)5L;
    }
    public static int APTTYPEQUALIFIER_APPLICATION_STA() {
        return (int)6L;
    }
    public static int APTTYPEQUALIFIER_RESERVED_1() {
        return (int)7L;
    }
    public static int APTTYPE_CURRENT() {
        return (int)-1L;
    }
    public static int APTTYPE_STA() {
        return (int)0L;
    }
    public static int APTTYPE_MTA() {
        return (int)1L;
    }
    public static int APTTYPE_NA() {
        return (int)2L;
    }
    public static int APTTYPE_MAINSTA() {
        return (int)3L;
    }
    public static int THDTYPE_BLOCKMESSAGES() {
        return (int)0L;
    }
    public static int THDTYPE_PROCESSMESSAGES() {
        return (int)1L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$LAYOUT() {
        return constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$VH() {
        return constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0048_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$LAYOUT() {
        return constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$VH() {
        return constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$968.__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0048_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IComThreadingInfo$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.IID_IComThreadingInfo$SEGMENT,"IID_IComThreadingInfo");
    }
    public static MemorySegment IID_IProcessInitControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.IID_IProcessInitControl$SEGMENT,"IID_IProcessInitControl");
    }
    public static MemorySegment IID_IFastRundown$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.IID_IFastRundown$SEGMENT,"IID_IFastRundown");
    }
    public static int CO_MARSHALING_SOURCE_IS_APP_CONTAINER() {
        return (int)0L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1() {
        return (int)-2147483648L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2() {
        return (int)-2147483647L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3() {
        return (int)-2147483646L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4() {
        return (int)-2147483645L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5() {
        return (int)-2147483644L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6() {
        return (int)-2147483643L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7() {
        return (int)-2147483642L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8() {
        return (int)-2147483641L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9() {
        return (int)-2147483640L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10() {
        return (int)-2147483639L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11() {
        return (int)-2147483638L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12() {
        return (int)-2147483637L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13() {
        return (int)-2147483636L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14() {
        return (int)-2147483635L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15() {
        return (int)-2147483634L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16() {
        return (int)-2147483633L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17() {
        return (int)-2147483632L;
    }
    public static int CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_18() {
        return (int)-2147483631L;
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$LAYOUT() {
        return constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$VH() {
        return constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0051_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$LAYOUT() {
        return constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$VH() {
        return constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$969.__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0051_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IMarshalingStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$969.IID_IMarshalingStream$SEGMENT,"IID_IMarshalingStream");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$LAYOUT() {
        return constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$VH() {
        return constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0052_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$LAYOUT() {
        return constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$VH() {
        return constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0052_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IAgileReference$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.IID_IAgileReference$SEGMENT,"IID_IAgileReference");
    }
    public static MemorySegment IID_ICallbackWithNoReentrancyToApplicationSTA$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.IID_ICallbackWithNoReentrancyToApplicationSTA$SEGMENT,"IID_ICallbackWithNoReentrancyToApplicationSTA");
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$LAYOUT() {
        return constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$VH() {
        return constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0053_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$LAYOUT() {
        return constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$VH() {
        return constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$970.__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidlbase_0000_0053_v0_0_s_ifspec"), x);
    }
    public static MethodHandle IEnumUnknown_Next_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$971.IEnumUnknown_Next_Proxy$MH,"IEnumUnknown_Next_Proxy");
    }
    public static int IEnumUnknown_Next_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumUnknown_Next_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumUnknown_Next_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$971.IEnumUnknown_Next_Stub$MH,"IEnumUnknown_Next_Stub");
    }
    public static int IEnumUnknown_Next_Stub ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumUnknown_Next_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_Next_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$971.IEnumString_Next_Proxy$MH,"IEnumString_Next_Proxy");
    }
    public static int IEnumString_Next_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumString_Next_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumString_Next_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$971.IEnumString_Next_Stub$MH,"IEnumString_Next_Stub");
    }
    public static int IEnumString_Next_Stub ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumString_Next_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Read_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$971.ISequentialStream_Read_Proxy$MH,"ISequentialStream_Read_Proxy");
    }
    public static int ISequentialStream_Read_Proxy ( Addressable This,  Addressable pv,  int cb,  Addressable pcbRead) {
        var mh$ = ISequentialStream_Read_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Read_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$971.ISequentialStream_Read_Stub$MH,"ISequentialStream_Read_Stub");
    }
    public static int ISequentialStream_Read_Stub ( Addressable This,  Addressable pv,  int cb,  Addressable pcbRead) {
        var mh$ = ISequentialStream_Read_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Write_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$972.ISequentialStream_Write_Proxy$MH,"ISequentialStream_Write_Proxy");
    }
    public static int ISequentialStream_Write_Proxy ( Addressable This,  Addressable pv,  int cb,  Addressable pcbWritten) {
        var mh$ = ISequentialStream_Write_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ISequentialStream_Write_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$972.ISequentialStream_Write_Stub$MH,"ISequentialStream_Write_Stub");
    }
    public static int ISequentialStream_Write_Stub ( Addressable This,  Addressable pv,  int cb,  Addressable pcbWritten) {
        var mh$ = ISequentialStream_Write_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_Seek_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$972.IStream_Seek_Proxy$MH,"IStream_Seek_Proxy");
    }
    public static int IStream_Seek_Proxy ( Addressable This,  MemorySegment dlibMove,  int dwOrigin,  Addressable plibNewPosition) {
        var mh$ = IStream_Seek_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_Seek_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$972.IStream_Seek_Stub$MH,"IStream_Seek_Stub");
    }
    public static int IStream_Seek_Stub ( Addressable This,  MemorySegment dlibMove,  int dwOrigin,  Addressable plibNewPosition) {
        var mh$ = IStream_Seek_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, dlibMove, dwOrigin, plibNewPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_CopyTo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$972.IStream_CopyTo_Proxy$MH,"IStream_CopyTo_Proxy");
    }
    public static int IStream_CopyTo_Proxy ( Addressable This,  Addressable pstm,  MemorySegment cb,  Addressable pcbRead,  Addressable pcbWritten) {
        var mh$ = IStream_CopyTo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStream_CopyTo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$972.IStream_CopyTo_Stub$MH,"IStream_CopyTo_Stub");
    }
    public static int IStream_CopyTo_Stub ( Addressable This,  Addressable pstm,  MemorySegment cb,  Addressable pcbRead,  Addressable pcbWritten) {
        var mh$ = IStream_CopyTo_Stub$MH();
        try {
            return (int)mh$.invokeExact(This, pstm, cb, pcbRead, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment GUID_NULL$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.GUID_NULL$SEGMENT,"GUID_NULL");
    }
    public static MemorySegment CATID_MARSHALER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.CATID_MARSHALER$SEGMENT,"CATID_MARSHALER");
    }
    public static MemorySegment IID_IRpcChannel$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.IID_IRpcChannel$SEGMENT,"IID_IRpcChannel");
    }
    public static MemorySegment IID_IRpcStub$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.IID_IRpcStub$SEGMENT,"IID_IRpcStub");
    }
    public static MemorySegment IID_IStubManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.IID_IStubManager$SEGMENT,"IID_IStubManager");
    }
    public static MemorySegment IID_IRpcProxy$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$973.IID_IRpcProxy$SEGMENT,"IID_IRpcProxy");
    }
    public static MemorySegment IID_IProxyManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IProxyManager$SEGMENT,"IID_IProxyManager");
    }
    public static MemorySegment IID_IPSFactory$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IPSFactory$SEGMENT,"IID_IPSFactory");
    }
    public static MemorySegment IID_IInternalMoniker$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IInternalMoniker$SEGMENT,"IID_IInternalMoniker");
    }
    public static MemorySegment IID_IDfReserved1$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IDfReserved1$SEGMENT,"IID_IDfReserved1");
    }
    public static MemorySegment IID_IDfReserved2$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IDfReserved2$SEGMENT,"IID_IDfReserved2");
    }
    public static MemorySegment IID_IDfReserved3$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$974.IID_IDfReserved3$SEGMENT,"IID_IDfReserved3");
    }
    public static MemorySegment CLSID_StdMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.CLSID_StdMarshal$SEGMENT,"CLSID_StdMarshal");
    }
    public static MemorySegment CLSID_AggStdMarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.CLSID_AggStdMarshal$SEGMENT,"CLSID_AggStdMarshal");
    }
    public static MemorySegment CLSID_StdAsyncActManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.CLSID_StdAsyncActManager$SEGMENT,"CLSID_StdAsyncActManager");
    }
    public static MemorySegment IID_IStub$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.IID_IStub$SEGMENT,"IID_IStub");
    }
    public static MemorySegment IID_IProxy$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.IID_IProxy$SEGMENT,"IID_IProxy");
    }
    public static MemorySegment IID_IEnumGeneric$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$975.IID_IEnumGeneric$SEGMENT,"IID_IEnumGeneric");
    }
    public static MemorySegment IID_IEnumHolder$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IEnumHolder$SEGMENT,"IID_IEnumHolder");
    }
    public static MemorySegment IID_IEnumCallback$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IEnumCallback$SEGMENT,"IID_IEnumCallback");
    }
    public static MemorySegment IID_IOleManager$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IOleManager$SEGMENT,"IID_IOleManager");
    }
    public static MemorySegment IID_IOlePresObj$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IOlePresObj$SEGMENT,"IID_IOlePresObj");
    }
    public static MemorySegment IID_IDebug$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IDebug$SEGMENT,"IID_IDebug");
    }
    public static MemorySegment IID_IDebugStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$976.IID_IDebugStream$SEGMENT,"IID_IDebugStream");
    }
    public static MemorySegment CLSID_PSGenObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSGenObject$SEGMENT,"CLSID_PSGenObject");
    }
    public static MemorySegment CLSID_PSClientSite$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSClientSite$SEGMENT,"CLSID_PSClientSite");
    }
    public static MemorySegment CLSID_PSClassObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSClassObject$SEGMENT,"CLSID_PSClassObject");
    }
    public static MemorySegment CLSID_PSInPlaceActive$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSInPlaceActive$SEGMENT,"CLSID_PSInPlaceActive");
    }
    public static MemorySegment CLSID_PSInPlaceFrame$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSInPlaceFrame$SEGMENT,"CLSID_PSInPlaceFrame");
    }
    public static MemorySegment CLSID_PSDragDrop$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$977.CLSID_PSDragDrop$SEGMENT,"CLSID_PSDragDrop");
    }
    public static MemorySegment CLSID_PSBindCtx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CLSID_PSBindCtx$SEGMENT,"CLSID_PSBindCtx");
    }
    public static MemorySegment CLSID_PSEnumerators$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CLSID_PSEnumerators$SEGMENT,"CLSID_PSEnumerators");
    }
    public static MemorySegment CLSID_StaticMetafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CLSID_StaticMetafile$SEGMENT,"CLSID_StaticMetafile");
    }
    public static MemorySegment CLSID_StaticDib$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CLSID_StaticDib$SEGMENT,"CLSID_StaticDib");
    }
    public static MemorySegment CID_CDfsVolume$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CID_CDfsVolume$SEGMENT,"CID_CDfsVolume");
    }
    public static MemorySegment CLSID_DCOMAccessControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$978.CLSID_DCOMAccessControl$SEGMENT,"CLSID_DCOMAccessControl");
    }
    public static MemorySegment CLSID_GlobalOptions$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_GlobalOptions$SEGMENT,"CLSID_GlobalOptions");
    }
    public static MemorySegment CLSID_StdGlobalInterfaceTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_StdGlobalInterfaceTable$SEGMENT,"CLSID_StdGlobalInterfaceTable");
    }
    public static MemorySegment CLSID_ComBinding$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_ComBinding$SEGMENT,"CLSID_ComBinding");
    }
    public static MemorySegment CLSID_StdEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_StdEvent$SEGMENT,"CLSID_StdEvent");
    }
    public static MemorySegment CLSID_ManualResetEvent$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_ManualResetEvent$SEGMENT,"CLSID_ManualResetEvent");
    }
    public static MemorySegment CLSID_SynchronizeContainer$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$979.CLSID_SynchronizeContainer$SEGMENT,"CLSID_SynchronizeContainer");
    }
    public static MemorySegment CLSID_AddrControl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_AddrControl$SEGMENT,"CLSID_AddrControl");
    }
    public static MemorySegment CLSID_ContextSwitcher$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_ContextSwitcher$SEGMENT,"CLSID_ContextSwitcher");
    }
    public static MemorySegment CLSID_CCDFormKrnl$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_CCDFormKrnl$SEGMENT,"CLSID_CCDFormKrnl");
    }
    public static MemorySegment CLSID_CCDPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_CCDPropertyPage$SEGMENT,"CLSID_CCDPropertyPage");
    }
    public static MemorySegment CLSID_CCDFormDialog$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_CCDFormDialog$SEGMENT,"CLSID_CCDFormDialog");
    }
    public static MemorySegment CLSID_CCDCommandButton$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$980.CLSID_CCDCommandButton$SEGMENT,"CLSID_CCDCommandButton");
    }
    public static MemorySegment CLSID_CCDComboBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDComboBox$SEGMENT,"CLSID_CCDComboBox");
    }
    public static MemorySegment CLSID_CCDTextBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDTextBox$SEGMENT,"CLSID_CCDTextBox");
    }
    public static MemorySegment CLSID_CCDCheckBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDCheckBox$SEGMENT,"CLSID_CCDCheckBox");
    }
    public static MemorySegment CLSID_CCDLabel$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDLabel$SEGMENT,"CLSID_CCDLabel");
    }
    public static MemorySegment CLSID_CCDOptionButton$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDOptionButton$SEGMENT,"CLSID_CCDOptionButton");
    }
    public static MemorySegment CLSID_CCDListBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$981.CLSID_CCDListBox$SEGMENT,"CLSID_CCDListBox");
    }
    public static MemorySegment CLSID_CCDScrollBar$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDScrollBar$SEGMENT,"CLSID_CCDScrollBar");
    }
    public static MemorySegment CLSID_CCDGroupBox$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDGroupBox$SEGMENT,"CLSID_CCDGroupBox");
    }
    public static MemorySegment CLSID_CCDGeneralPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDGeneralPropertyPage$SEGMENT,"CLSID_CCDGeneralPropertyPage");
    }
    public static MemorySegment CLSID_CCDGenericPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDGenericPropertyPage$SEGMENT,"CLSID_CCDGenericPropertyPage");
    }
    public static MemorySegment CLSID_CCDFontPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDFontPropertyPage$SEGMENT,"CLSID_CCDFontPropertyPage");
    }
    public static MemorySegment CLSID_CCDColorPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$982.CLSID_CCDColorPropertyPage$SEGMENT,"CLSID_CCDColorPropertyPage");
    }
    public static MemorySegment CLSID_CCDLabelPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDLabelPropertyPage$SEGMENT,"CLSID_CCDLabelPropertyPage");
    }
    public static MemorySegment CLSID_CCDCheckBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDCheckBoxPropertyPage$SEGMENT,"CLSID_CCDCheckBoxPropertyPage");
    }
    public static MemorySegment CLSID_CCDTextBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDTextBoxPropertyPage$SEGMENT,"CLSID_CCDTextBoxPropertyPage");
    }
    public static MemorySegment CLSID_CCDOptionButtonPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDOptionButtonPropertyPage$SEGMENT,"CLSID_CCDOptionButtonPropertyPage");
    }
    public static MemorySegment CLSID_CCDListBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDListBoxPropertyPage$SEGMENT,"CLSID_CCDListBoxPropertyPage");
    }
    public static MemorySegment CLSID_CCDCommandButtonPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$983.CLSID_CCDCommandButtonPropertyPage$SEGMENT,"CLSID_CCDCommandButtonPropertyPage");
    }
    public static MemorySegment CLSID_CCDComboBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CCDComboBoxPropertyPage$SEGMENT,"CLSID_CCDComboBoxPropertyPage");
    }
    public static MemorySegment CLSID_CCDScrollBarPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CCDScrollBarPropertyPage$SEGMENT,"CLSID_CCDScrollBarPropertyPage");
    }
    public static MemorySegment CLSID_CCDGroupBoxPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CCDGroupBoxPropertyPage$SEGMENT,"CLSID_CCDGroupBoxPropertyPage");
    }
    public static MemorySegment CLSID_CCDXObjectPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CCDXObjectPropertyPage$SEGMENT,"CLSID_CCDXObjectPropertyPage");
    }
    public static MemorySegment CLSID_CStdPropertyFrame$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CStdPropertyFrame$SEGMENT,"CLSID_CStdPropertyFrame");
    }
    public static MemorySegment CLSID_CFormPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$984.CLSID_CFormPropertyPage$SEGMENT,"CLSID_CFormPropertyPage");
    }
    public static MemorySegment CLSID_CGridPropertyPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_CGridPropertyPage$SEGMENT,"CLSID_CGridPropertyPage");
    }
    public static MemorySegment CLSID_CWSJArticlePage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_CWSJArticlePage$SEGMENT,"CLSID_CWSJArticlePage");
    }
    public static MemorySegment CLSID_CSystemPage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_CSystemPage$SEGMENT,"CLSID_CSystemPage");
    }
    public static MemorySegment CLSID_IdentityUnmarshal$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_IdentityUnmarshal$SEGMENT,"CLSID_IdentityUnmarshal");
    }
    public static MemorySegment CLSID_InProcFreeMarshaler$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_InProcFreeMarshaler$SEGMENT,"CLSID_InProcFreeMarshaler");
    }
    public static MemorySegment CLSID_Picture_Metafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$985.CLSID_Picture_Metafile$SEGMENT,"CLSID_Picture_Metafile");
    }
    public static MemorySegment CLSID_Picture_EnhMetafile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$986.CLSID_Picture_EnhMetafile$SEGMENT,"CLSID_Picture_EnhMetafile");
    }
    public static MemorySegment CLSID_Picture_Dib$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$986.CLSID_Picture_Dib$SEGMENT,"CLSID_Picture_Dib");
    }
    public static MemorySegment GUID_TRISTATE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$986.GUID_TRISTATE$SEGMENT,"GUID_TRISTATE");
    }
    public static MethodHandle CoGetMalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$986.CoGetMalloc$MH,"CoGetMalloc");
    }
    public static int CoGetMalloc ( int dwMemContext,  Addressable ppMalloc) {
        var mh$ = CoGetMalloc$MH();
        try {
            return (int)mh$.invokeExact(dwMemContext, ppMalloc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateStreamOnHGlobal$MH() {
        return RuntimeHelper.requireNonNull(constants$986.CreateStreamOnHGlobal$MH,"CreateStreamOnHGlobal");
    }
    public static int CreateStreamOnHGlobal ( Addressable hGlobal,  int fDeleteOnRelease,  Addressable ppstm) {
        var mh$ = CreateStreamOnHGlobal$MH();
        try {
            return (int)mh$.invokeExact(hGlobal, fDeleteOnRelease, ppstm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetHGlobalFromStream$MH() {
        return RuntimeHelper.requireNonNull(constants$986.GetHGlobalFromStream$MH,"GetHGlobalFromStream");
    }
    public static int GetHGlobalFromStream ( Addressable pstm,  Addressable phglobal) {
        var mh$ = GetHGlobalFromStream$MH();
        try {
            return (int)mh$.invokeExact(pstm, phglobal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoUninitialize$MH,"CoUninitialize");
    }
    public static void CoUninitialize () {
        var mh$ = CoUninitialize$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCurrentProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoGetCurrentProcess$MH,"CoGetCurrentProcess");
    }
    public static int CoGetCurrentProcess () {
        var mh$ = CoGetCurrentProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInitializeEx$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoInitializeEx$MH,"CoInitializeEx");
    }
    public static int CoInitializeEx ( Addressable pvReserved,  int dwCoInit) {
        var mh$ = CoInitializeEx$MH();
        try {
            return (int)mh$.invokeExact(pvReserved, dwCoInit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCallerTID$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoGetCallerTID$MH,"CoGetCallerTID");
    }
    public static int CoGetCallerTID ( Addressable lpdwTID) {
        var mh$ = CoGetCallerTID$MH();
        try {
            return (int)mh$.invokeExact(lpdwTID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCurrentLogicalThreadId$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoGetCurrentLogicalThreadId$MH,"CoGetCurrentLogicalThreadId");
    }
    public static int CoGetCurrentLogicalThreadId ( Addressable pguid) {
        var mh$ = CoGetCurrentLogicalThreadId$MH();
        try {
            return (int)mh$.invokeExact(pguid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetContextToken$MH() {
        return RuntimeHelper.requireNonNull(constants$987.CoGetContextToken$MH,"CoGetContextToken");
    }
    public static int CoGetContextToken ( Addressable pToken) {
        var mh$ = CoGetContextToken$MH();
        try {
            return (int)mh$.invokeExact(pToken);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetDefaultContext$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoGetDefaultContext$MH,"CoGetDefaultContext");
    }
    public static int CoGetDefaultContext ( int aptType,  Addressable riid,  Addressable ppv) {
        var mh$ = CoGetDefaultContext$MH();
        try {
            return (int)mh$.invokeExact(aptType, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetApartmentType$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoGetApartmentType$MH,"CoGetApartmentType");
    }
    public static int CoGetApartmentType ( Addressable pAptType,  Addressable pAptQualifier) {
        var mh$ = CoGetApartmentType$MH();
        try {
            return (int)mh$.invokeExact(pAptType, pAptQualifier);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress PServerInformation = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CoDecodeProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoDecodeProxy$MH,"CoDecodeProxy");
    }
    public static int CoDecodeProxy ( int dwClientPid,  long ui64ProxyAddress,  Addressable pServerInformation) {
        var mh$ = CoDecodeProxy$MH();
        try {
            return (int)mh$.invokeExact(dwClientPid, ui64ProxyAddress, pServerInformation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress CO_MTA_USAGE_COOKIE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CoIncrementMTAUsage$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoIncrementMTAUsage$MH,"CoIncrementMTAUsage");
    }
    public static int CoIncrementMTAUsage ( Addressable pCookie) {
        var mh$ = CoIncrementMTAUsage$MH();
        try {
            return (int)mh$.invokeExact(pCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDecrementMTAUsage$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoDecrementMTAUsage$MH,"CoDecrementMTAUsage");
    }
    public static int CoDecrementMTAUsage ( Addressable Cookie) {
        var mh$ = CoDecrementMTAUsage$MH();
        try {
            return (int)mh$.invokeExact(Cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoAllowUnmarshalerCLSID$MH() {
        return RuntimeHelper.requireNonNull(constants$988.CoAllowUnmarshalerCLSID$MH,"CoAllowUnmarshalerCLSID");
    }
    public static int CoAllowUnmarshalerCLSID ( Addressable clsid) {
        var mh$ = CoAllowUnmarshalerCLSID$MH();
        try {
            return (int)mh$.invokeExact(clsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetObjectContext$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoGetObjectContext$MH,"CoGetObjectContext");
    }
    public static int CoGetObjectContext ( Addressable riid,  Addressable ppv) {
        var mh$ = CoGetObjectContext$MH();
        try {
            return (int)mh$.invokeExact(riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoGetClassObject$MH,"CoGetClassObject");
    }
    public static int CoGetClassObject ( Addressable rclsid,  int dwClsContext,  Addressable pvReserved,  Addressable riid,  Addressable ppv) {
        var mh$ = CoGetClassObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, dwClsContext, pvReserved, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoRegisterClassObject$MH,"CoRegisterClassObject");
    }
    public static int CoRegisterClassObject ( Addressable rclsid,  Addressable pUnk,  int dwClsContext,  int flags,  Addressable lpdwRegister) {
        var mh$ = CoRegisterClassObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, pUnk, dwClsContext, flags, lpdwRegister);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRevokeClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoRevokeClassObject$MH,"CoRevokeClassObject");
    }
    public static int CoRevokeClassObject ( int dwRegister) {
        var mh$ = CoRevokeClassObject$MH();
        try {
            return (int)mh$.invokeExact(dwRegister);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoResumeClassObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoResumeClassObjects$MH,"CoResumeClassObjects");
    }
    public static int CoResumeClassObjects () {
        var mh$ = CoResumeClassObjects$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSuspendClassObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$989.CoSuspendClassObjects$MH,"CoSuspendClassObjects");
    }
    public static int CoSuspendClassObjects () {
        var mh$ = CoSuspendClassObjects$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoAddRefServerProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoAddRefServerProcess$MH,"CoAddRefServerProcess");
    }
    public static int CoAddRefServerProcess () {
        var mh$ = CoAddRefServerProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoReleaseServerProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoReleaseServerProcess$MH,"CoReleaseServerProcess");
    }
    public static int CoReleaseServerProcess () {
        var mh$ = CoReleaseServerProcess$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetPSClsid$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoGetPSClsid$MH,"CoGetPSClsid");
    }
    public static int CoGetPSClsid ( Addressable riid,  Addressable pClsid) {
        var mh$ = CoGetPSClsid$MH();
        try {
            return (int)mh$.invokeExact(riid, pClsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterPSClsid$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoRegisterPSClsid$MH,"CoRegisterPSClsid");
    }
    public static int CoRegisterPSClsid ( Addressable riid,  Addressable rclsid) {
        var mh$ = CoRegisterPSClsid$MH();
        try {
            return (int)mh$.invokeExact(riid, rclsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterSurrogate$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoRegisterSurrogate$MH,"CoRegisterSurrogate");
    }
    public static int CoRegisterSurrogate ( Addressable pSurrogate) {
        var mh$ = CoRegisterSurrogate$MH();
        try {
            return (int)mh$.invokeExact(pSurrogate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetMarshalSizeMax$MH() {
        return RuntimeHelper.requireNonNull(constants$990.CoGetMarshalSizeMax$MH,"CoGetMarshalSizeMax");
    }
    public static int CoGetMarshalSizeMax ( Addressable pulSize,  Addressable riid,  Addressable pUnk,  int dwDestContext,  Addressable pvDestContext,  int mshlflags) {
        var mh$ = CoGetMarshalSizeMax$MH();
        try {
            return (int)mh$.invokeExact(pulSize, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoMarshalInterface$MH,"CoMarshalInterface");
    }
    public static int CoMarshalInterface ( Addressable pStm,  Addressable riid,  Addressable pUnk,  int dwDestContext,  Addressable pvDestContext,  int mshlflags) {
        var mh$ = CoMarshalInterface$MH();
        try {
            return (int)mh$.invokeExact(pStm, riid, pUnk, dwDestContext, pvDestContext, mshlflags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUnmarshalInterface$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoUnmarshalInterface$MH,"CoUnmarshalInterface");
    }
    public static int CoUnmarshalInterface ( Addressable pStm,  Addressable riid,  Addressable ppv) {
        var mh$ = CoUnmarshalInterface$MH();
        try {
            return (int)mh$.invokeExact(pStm, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalHresult$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoMarshalHresult$MH,"CoMarshalHresult");
    }
    public static int CoMarshalHresult ( Addressable pstm,  int hresult) {
        var mh$ = CoMarshalHresult$MH();
        try {
            return (int)mh$.invokeExact(pstm, hresult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoUnmarshalHresult$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoUnmarshalHresult$MH,"CoUnmarshalHresult");
    }
    public static int CoUnmarshalHresult ( Addressable pstm,  Addressable phresult) {
        var mh$ = CoUnmarshalHresult$MH();
        try {
            return (int)mh$.invokeExact(pstm, phresult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoReleaseMarshalData$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoReleaseMarshalData$MH,"CoReleaseMarshalData");
    }
    public static int CoReleaseMarshalData ( Addressable pStm) {
        var mh$ = CoReleaseMarshalData$MH();
        try {
            return (int)mh$.invokeExact(pStm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDisconnectObject$MH() {
        return RuntimeHelper.requireNonNull(constants$991.CoDisconnectObject$MH,"CoDisconnectObject");
    }
    public static int CoDisconnectObject ( Addressable pUnk,  int dwReserved) {
        var mh$ = CoDisconnectObject$MH();
        try {
            return (int)mh$.invokeExact(pUnk, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoLockObjectExternal$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoLockObjectExternal$MH,"CoLockObjectExternal");
    }
    public static int CoLockObjectExternal ( Addressable pUnk,  int fLock,  int fLastUnlockReleases) {
        var mh$ = CoLockObjectExternal$MH();
        try {
            return (int)mh$.invokeExact(pUnk, fLock, fLastUnlockReleases);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetStandardMarshal$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoGetStandardMarshal$MH,"CoGetStandardMarshal");
    }
    public static int CoGetStandardMarshal ( Addressable riid,  Addressable pUnk,  int dwDestContext,  Addressable pvDestContext,  int mshlflags,  Addressable ppMarshal) {
        var mh$ = CoGetStandardMarshal$MH();
        try {
            return (int)mh$.invokeExact(riid, pUnk, dwDestContext, pvDestContext, mshlflags, ppMarshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetStdMarshalEx$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoGetStdMarshalEx$MH,"CoGetStdMarshalEx");
    }
    public static int CoGetStdMarshalEx ( Addressable pUnkOuter,  int smexflags,  Addressable ppUnkInner) {
        var mh$ = CoGetStdMarshalEx$MH();
        try {
            return (int)mh$.invokeExact(pUnkOuter, smexflags, ppUnkInner);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SMEXF_SERVER() {
        return (int)1L;
    }
    public static int SMEXF_HANDLER() {
        return (int)2L;
    }
    public static MethodHandle CoIsHandlerConnected$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoIsHandlerConnected$MH,"CoIsHandlerConnected");
    }
    public static int CoIsHandlerConnected ( Addressable pUnk) {
        var mh$ = CoIsHandlerConnected$MH();
        try {
            return (int)mh$.invokeExact(pUnk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoMarshalInterThreadInterfaceInStream$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoMarshalInterThreadInterfaceInStream$MH,"CoMarshalInterThreadInterfaceInStream");
    }
    public static int CoMarshalInterThreadInterfaceInStream ( Addressable riid,  Addressable pUnk,  Addressable ppStm) {
        var mh$ = CoMarshalInterThreadInterfaceInStream$MH();
        try {
            return (int)mh$.invokeExact(riid, pUnk, ppStm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetInterfaceAndReleaseStream$MH() {
        return RuntimeHelper.requireNonNull(constants$992.CoGetInterfaceAndReleaseStream$MH,"CoGetInterfaceAndReleaseStream");
    }
    public static int CoGetInterfaceAndReleaseStream ( Addressable pStm,  Addressable iid,  Addressable ppv) {
        var mh$ = CoGetInterfaceAndReleaseStream$MH();
        try {
            return (int)mh$.invokeExact(pStm, iid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateFreeThreadedMarshaler$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoCreateFreeThreadedMarshaler$MH,"CoCreateFreeThreadedMarshaler");
    }
    public static int CoCreateFreeThreadedMarshaler ( Addressable punkOuter,  Addressable ppunkMarshal) {
        var mh$ = CoCreateFreeThreadedMarshaler$MH();
        try {
            return (int)mh$.invokeExact(punkOuter, ppunkMarshal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoFreeUnusedLibraries$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoFreeUnusedLibraries$MH,"CoFreeUnusedLibraries");
    }
    public static void CoFreeUnusedLibraries () {
        var mh$ = CoFreeUnusedLibraries$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoFreeUnusedLibrariesEx$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoFreeUnusedLibrariesEx$MH,"CoFreeUnusedLibrariesEx");
    }
    public static void CoFreeUnusedLibrariesEx ( int dwUnloadDelay,  int dwReserved) {
        var mh$ = CoFreeUnusedLibrariesEx$MH();
        try {
            mh$.invokeExact(dwUnloadDelay, dwReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDisconnectContext$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoDisconnectContext$MH,"CoDisconnectContext");
    }
    public static int CoDisconnectContext ( int dwTimeout) {
        var mh$ = CoDisconnectContext$MH();
        try {
            return (int)mh$.invokeExact(dwTimeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInitializeSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoInitializeSecurity$MH,"CoInitializeSecurity");
    }
    public static int CoInitializeSecurity ( Addressable pSecDesc,  int cAuthSvc,  Addressable asAuthSvc,  Addressable pReserved1,  int dwAuthnLevel,  int dwImpLevel,  Addressable pAuthList,  int dwCapabilities,  Addressable pReserved3) {
        var mh$ = CoInitializeSecurity$MH();
        try {
            return (int)mh$.invokeExact(pSecDesc, cAuthSvc, asAuthSvc, pReserved1, dwAuthnLevel, dwImpLevel, pAuthList, dwCapabilities, pReserved3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCallContext$MH() {
        return RuntimeHelper.requireNonNull(constants$993.CoGetCallContext$MH,"CoGetCallContext");
    }
    public static int CoGetCallContext ( Addressable riid,  Addressable ppInterface) {
        var mh$ = CoGetCallContext$MH();
        try {
            return (int)mh$.invokeExact(riid, ppInterface);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryProxyBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoQueryProxyBlanket$MH,"CoQueryProxyBlanket");
    }
    public static int CoQueryProxyBlanket ( Addressable pProxy,  Addressable pwAuthnSvc,  Addressable pAuthzSvc,  Addressable pServerPrincName,  Addressable pAuthnLevel,  Addressable pImpLevel,  Addressable pAuthInfo,  Addressable pCapabilites) {
        var mh$ = CoQueryProxyBlanket$MH();
        try {
            return (int)mh$.invokeExact(pProxy, pwAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pAuthInfo, pCapabilites);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSetProxyBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoSetProxyBlanket$MH,"CoSetProxyBlanket");
    }
    public static int CoSetProxyBlanket ( Addressable pProxy,  int dwAuthnSvc,  int dwAuthzSvc,  Addressable pServerPrincName,  int dwAuthnLevel,  int dwImpLevel,  Addressable pAuthInfo,  int dwCapabilities) {
        var mh$ = CoSetProxyBlanket$MH();
        try {
            return (int)mh$.invokeExact(pProxy, dwAuthnSvc, dwAuthzSvc, pServerPrincName, dwAuthnLevel, dwImpLevel, pAuthInfo, dwCapabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCopyProxy$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoCopyProxy$MH,"CoCopyProxy");
    }
    public static int CoCopyProxy ( Addressable pProxy,  Addressable ppCopy) {
        var mh$ = CoCopyProxy$MH();
        try {
            return (int)mh$.invokeExact(pProxy, ppCopy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryClientBlanket$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoQueryClientBlanket$MH,"CoQueryClientBlanket");
    }
    public static int CoQueryClientBlanket ( Addressable pAuthnSvc,  Addressable pAuthzSvc,  Addressable pServerPrincName,  Addressable pAuthnLevel,  Addressable pImpLevel,  Addressable pPrivs,  Addressable pCapabilities) {
        var mh$ = CoQueryClientBlanket$MH();
        try {
            return (int)mh$.invokeExact(pAuthnSvc, pAuthzSvc, pServerPrincName, pAuthnLevel, pImpLevel, pPrivs, pCapabilities);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoImpersonateClient$MH,"CoImpersonateClient");
    }
    public static int CoImpersonateClient () {
        var mh$ = CoImpersonateClient$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRevertToSelf$MH() {
        return RuntimeHelper.requireNonNull(constants$994.CoRevertToSelf$MH,"CoRevertToSelf");
    }
    public static int CoRevertToSelf () {
        var mh$ = CoRevertToSelf$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoQueryAuthenticationServices$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoQueryAuthenticationServices$MH,"CoQueryAuthenticationServices");
    }
    public static int CoQueryAuthenticationServices ( Addressable pcAuthSvc,  Addressable asAuthSvc) {
        var mh$ = CoQueryAuthenticationServices$MH();
        try {
            return (int)mh$.invokeExact(pcAuthSvc, asAuthSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSwitchCallContext$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoSwitchCallContext$MH,"CoSwitchCallContext");
    }
    public static int CoSwitchCallContext ( Addressable pNewObject,  Addressable ppOldObject) {
        var mh$ = CoSwitchCallContext$MH();
        try {
            return (int)mh$.invokeExact(pNewObject, ppOldObject);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstance$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoCreateInstance$MH,"CoCreateInstance");
    }
    public static int CoCreateInstance ( Addressable rclsid,  Addressable pUnkOuter,  int dwClsContext,  Addressable riid,  Addressable ppv) {
        var mh$ = CoCreateInstance$MH();
        try {
            return (int)mh$.invokeExact(rclsid, pUnkOuter, dwClsContext, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstanceEx$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoCreateInstanceEx$MH,"CoCreateInstanceEx");
    }
    public static int CoCreateInstanceEx ( Addressable Clsid,  Addressable punkOuter,  int dwClsCtx,  Addressable pServerInfo,  int dwCount,  Addressable pResults) {
        var mh$ = CoCreateInstanceEx$MH();
        try {
            return (int)mh$.invokeExact(Clsid, punkOuter, dwClsCtx, pServerInfo, dwCount, pResults);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateInstanceFromApp$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoCreateInstanceFromApp$MH,"CoCreateInstanceFromApp");
    }
    public static int CoCreateInstanceFromApp ( Addressable Clsid,  Addressable punkOuter,  int dwClsCtx,  Addressable reserved,  int dwCount,  Addressable pResults) {
        var mh$ = CoCreateInstanceFromApp$MH();
        try {
            return (int)mh$.invokeExact(Clsid, punkOuter, dwClsCtx, reserved, dwCount, pResults);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRegisterActivationFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$995.CoRegisterActivationFilter$MH,"CoRegisterActivationFilter");
    }
    public static int CoRegisterActivationFilter ( Addressable pActivationFilter) {
        var mh$ = CoRegisterActivationFilter$MH();
        try {
            return (int)mh$.invokeExact(pActivationFilter);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetCancelObject$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoGetCancelObject$MH,"CoGetCancelObject");
    }
    public static int CoGetCancelObject ( int dwThreadId,  Addressable iid,  Addressable ppUnk) {
        var mh$ = CoGetCancelObject$MH();
        try {
            return (int)mh$.invokeExact(dwThreadId, iid, ppUnk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoSetCancelObject$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoSetCancelObject$MH,"CoSetCancelObject");
    }
    public static int CoSetCancelObject ( Addressable pUnk) {
        var mh$ = CoSetCancelObject$MH();
        try {
            return (int)mh$.invokeExact(pUnk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCancelCall$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoCancelCall$MH,"CoCancelCall");
    }
    public static int CoCancelCall ( int dwThreadId,  int ulTimeout) {
        var mh$ = CoCancelCall$MH();
        try {
            return (int)mh$.invokeExact(dwThreadId, ulTimeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoTestCancel$MH,"CoTestCancel");
    }
    public static int CoTestCancel () {
        var mh$ = CoTestCancel$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoEnableCallCancellation$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoEnableCallCancellation$MH,"CoEnableCallCancellation");
    }
    public static int CoEnableCallCancellation ( Addressable pReserved) {
        var mh$ = CoEnableCallCancellation$MH();
        try {
            return (int)mh$.invokeExact(pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoDisableCallCancellation$MH() {
        return RuntimeHelper.requireNonNull(constants$996.CoDisableCallCancellation$MH,"CoDisableCallCancellation");
    }
    public static int CoDisableCallCancellation ( Addressable pReserved) {
        var mh$ = CoDisableCallCancellation$MH();
        try {
            return (int)mh$.invokeExact(pReserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StringFromCLSID$MH() {
        return RuntimeHelper.requireNonNull(constants$997.StringFromCLSID$MH,"StringFromCLSID");
    }
    public static int StringFromCLSID ( Addressable rclsid,  Addressable lplpsz) {
        var mh$ = StringFromCLSID$MH();
        try {
            return (int)mh$.invokeExact(rclsid, lplpsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CLSIDFromString$MH() {
        return RuntimeHelper.requireNonNull(constants$997.CLSIDFromString$MH,"CLSIDFromString");
    }
    public static int CLSIDFromString ( Addressable lpsz,  Addressable pclsid) {
        var mh$ = CLSIDFromString$MH();
        try {
            return (int)mh$.invokeExact(lpsz, pclsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StringFromIID$MH() {
        return RuntimeHelper.requireNonNull(constants$997.StringFromIID$MH,"StringFromIID");
    }
    public static int StringFromIID ( Addressable rclsid,  Addressable lplpsz) {
        var mh$ = StringFromIID$MH();
        try {
            return (int)mh$.invokeExact(rclsid, lplpsz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IIDFromString$MH() {
        return RuntimeHelper.requireNonNull(constants$997.IIDFromString$MH,"IIDFromString");
    }
    public static int IIDFromString ( Addressable lpsz,  Addressable lpiid) {
        var mh$ = IIDFromString$MH();
        try {
            return (int)mh$.invokeExact(lpsz, lpiid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ProgIDFromCLSID$MH() {
        return RuntimeHelper.requireNonNull(constants$997.ProgIDFromCLSID$MH,"ProgIDFromCLSID");
    }
    public static int ProgIDFromCLSID ( Addressable clsid,  Addressable lplpszProgID) {
        var mh$ = ProgIDFromCLSID$MH();
        try {
            return (int)mh$.invokeExact(clsid, lplpszProgID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CLSIDFromProgID$MH() {
        return RuntimeHelper.requireNonNull(constants$997.CLSIDFromProgID$MH,"CLSIDFromProgID");
    }
    public static int CLSIDFromProgID ( Addressable lpszProgID,  Addressable lpclsid) {
        var mh$ = CLSIDFromProgID$MH();
        try {
            return (int)mh$.invokeExact(lpszProgID, lpclsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StringFromGUID2$MH() {
        return RuntimeHelper.requireNonNull(constants$998.StringFromGUID2$MH,"StringFromGUID2");
    }
    public static int StringFromGUID2 ( Addressable rguid,  Addressable lpsz,  int cchMax) {
        var mh$ = StringFromGUID2$MH();
        try {
            return (int)mh$.invokeExact(rguid, lpsz, cchMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoCreateGuid$MH() {
        return RuntimeHelper.requireNonNull(constants$998.CoCreateGuid$MH,"CoCreateGuid");
    }
    public static int CoCreateGuid ( Addressable pguid) {
        var mh$ = CoCreateGuid$MH();
        try {
            return (int)mh$.invokeExact(pguid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropVariantCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$998.PropVariantCopy$MH,"PropVariantCopy");
    }
    public static int PropVariantCopy ( Addressable pvarDest,  Addressable pvarSrc) {
        var mh$ = PropVariantCopy$MH();
        try {
            return (int)mh$.invokeExact(pvarDest, pvarSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropVariantClear$MH() {
        return RuntimeHelper.requireNonNull(constants$998.PropVariantClear$MH,"PropVariantClear");
    }
    public static int PropVariantClear ( Addressable pvar) {
        var mh$ = PropVariantClear$MH();
        try {
            return (int)mh$.invokeExact(pvar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePropVariantArray$MH() {
        return RuntimeHelper.requireNonNull(constants$998.FreePropVariantArray$MH,"FreePropVariantArray");
    }
    public static int FreePropVariantArray ( int cVariants,  Addressable rgvars) {
        var mh$ = FreePropVariantArray$MH();
        try {
            return (int)mh$.invokeExact(cVariants, rgvars);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoWaitForMultipleHandles$MH() {
        return RuntimeHelper.requireNonNull(constants$998.CoWaitForMultipleHandles$MH,"CoWaitForMultipleHandles");
    }
    public static int CoWaitForMultipleHandles ( int dwFlags,  int dwTimeout,  int cHandles,  Addressable pHandles,  Addressable lpdwindex) {
        var mh$ = CoWaitForMultipleHandles$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int COWAIT_DEFAULT() {
        return (int)0L;
    }
    public static int COWAIT_WAITALL() {
        return (int)1L;
    }
    public static int COWAIT_ALERTABLE() {
        return (int)2L;
    }
    public static int COWAIT_INPUTAVAILABLE() {
        return (int)4L;
    }
    public static int COWAIT_DISPATCH_CALLS() {
        return (int)8L;
    }
    public static int COWAIT_DISPATCH_WINDOW_MESSAGES() {
        return (int)16L;
    }
    public static int CWMO_DEFAULT() {
        return (int)0L;
    }
    public static int CWMO_DISPATCH_CALLS() {
        return (int)1L;
    }
    public static int CWMO_DISPATCH_WINDOW_MESSAGES() {
        return (int)2L;
    }
    public static MethodHandle CoWaitForMultipleObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$999.CoWaitForMultipleObjects$MH,"CoWaitForMultipleObjects");
    }
    public static int CoWaitForMultipleObjects ( int dwFlags,  int dwTimeout,  int cHandles,  Addressable pHandles,  Addressable lpdwindex) {
        var mh$ = CoWaitForMultipleObjects$MH();
        try {
            return (int)mh$.invokeExact(dwFlags, dwTimeout, cHandles, pHandles, lpdwindex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoGetTreatAsClass$MH() {
        return RuntimeHelper.requireNonNull(constants$999.CoGetTreatAsClass$MH,"CoGetTreatAsClass");
    }
    public static int CoGetTreatAsClass ( Addressable clsidOld,  Addressable pClsidNew) {
        var mh$ = CoGetTreatAsClass$MH();
        try {
            return (int)mh$.invokeExact(clsidOld, pClsidNew);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoInvalidateRemoteMachineBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$999.CoInvalidateRemoteMachineBindings$MH,"CoInvalidateRemoteMachineBindings");
    }
    public static int CoInvalidateRemoteMachineBindings ( Addressable pszMachineName) {
        var mh$ = CoInvalidateRemoteMachineBindings$MH();
        try {
            return (int)mh$.invokeExact(pszMachineName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int AGILEREFERENCE_DEFAULT() {
        return (int)0L;
    }
    public static int AGILEREFERENCE_DELAYEDMARSHAL() {
        return (int)1L;
    }
    public static MethodHandle RoGetAgileReference$MH() {
        return RuntimeHelper.requireNonNull(constants$999.RoGetAgileReference$MH,"RoGetAgileReference");
    }
    public static int RoGetAgileReference ( int options,  Addressable riid,  Addressable pUnk,  Addressable ppAgileReference) {
        var mh$ = RoGetAgileReference$MH();
        try {
            return (int)mh$.invokeExact(options, riid, pUnk, ppAgileReference);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DllGetClassObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.DllGetClassObject$MH,"DllGetClassObject");
    }
    public static int DllGetClassObject ( Addressable rclsid,  Addressable riid,  Addressable ppv) {
        var mh$ = DllGetClassObject$MH();
        try {
            return (int)mh$.invokeExact(rclsid, riid, ppv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DllCanUnloadNow$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.DllCanUnloadNow$MH,"DllCanUnloadNow");
    }
    public static int DllCanUnloadNow () {
        var mh$ = DllCanUnloadNow$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoTaskMemAlloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.CoTaskMemAlloc$MH,"CoTaskMemAlloc");
    }
    public static MemoryAddress CoTaskMemAlloc ( long cb) {
        var mh$ = CoTaskMemAlloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoTaskMemRealloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1000.CoTaskMemRealloc$MH,"CoTaskMemRealloc");
    }
    public static MemoryAddress CoTaskMemRealloc ( Addressable pv,  long cb) {
        var mh$ = CoTaskMemRealloc$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(pv, cb);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoTaskMemFree$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.CoTaskMemFree$MH,"CoTaskMemFree");
    }
    public static void CoTaskMemFree ( Addressable pv) {
        var mh$ = CoTaskMemFree$MH();
        try {
            mh$.invokeExact(pv);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoFileTimeNow$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.CoFileTimeNow$MH,"CoFileTimeNow");
    }
    public static int CoFileTimeNow ( Addressable lpFileTime) {
        var mh$ = CoFileTimeNow$MH();
        try {
            return (int)mh$.invokeExact(lpFileTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CLSIDFromProgIDEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.CLSIDFromProgIDEx$MH,"CLSIDFromProgIDEx");
    }
    public static int CLSIDFromProgIDEx ( Addressable lpszProgID,  Addressable lpclsid) {
        var mh$ = CLSIDFromProgIDEx$MH();
        try {
            return (int)mh$.invokeExact(lpszProgID, lpclsid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress CO_DEVICE_CATALOG_COOKIE = Constants$root.C_POINTER$LAYOUT;
    public static MethodHandle CoRegisterDeviceCatalog$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.CoRegisterDeviceCatalog$MH,"CoRegisterDeviceCatalog");
    }
    public static int CoRegisterDeviceCatalog ( Addressable deviceInstanceId,  Addressable cookie) {
        var mh$ = CoRegisterDeviceCatalog$MH();
        try {
            return (int)mh$.invokeExact(deviceInstanceId, cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CoRevokeDeviceCatalog$MH() {
        return RuntimeHelper.requireNonNull(constants$1001.CoRevokeDeviceCatalog$MH,"CoRevokeDeviceCatalog");
    }
    public static int CoRevokeDeviceCatalog ( Addressable cookie) {
        var mh$ = CoRevokeDeviceCatalog$MH();
        try {
            return (int)mh$.invokeExact(cookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$LAYOUT() {
        return constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$VH() {
        return constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1001.__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0000_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0000_v0_0_s_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0001_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0001_v0_0_s_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0002_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0002_v0_0_s_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$LAYOUT() {
        return constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$VH() {
        return constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1002.__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0003_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$LAYOUT() {
        return constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$VH() {
        return constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_unknwn_0000_0003_v0_0_s_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$LAYOUT() {
        return constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$VH() {
        return constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0053_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$LAYOUT() {
        return constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$VH() {
        return constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0053_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPMALLOCSPY = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IMallocSpy$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.IID_IMallocSpy$SEGMENT,"IID_IMallocSpy");
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$LAYOUT() {
        return constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$VH() {
        return constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0054_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$LAYOUT() {
        return constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$VH() {
        return constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1003.__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0054_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPBC = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBINDCTX = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIND_OPTS = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIND_OPTS2 = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPBIND_OPTS3 = Constants$root.C_POINTER$LAYOUT;
    public static int BIND_MAYBOTHERUSER() {
        return (int)1L;
    }
    public static int BIND_JUSTTESTEXISTENCE() {
        return (int)2L;
    }
    public static MemorySegment IID_IBindCtx$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1004.IID_IBindCtx$SEGMENT,"IID_IBindCtx");
    }
    public static MethodHandle IBindCtx_RemoteSetBindOptions_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.IBindCtx_RemoteSetBindOptions_Proxy$MH,"IBindCtx_RemoteSetBindOptions_Proxy");
    }
    public static int IBindCtx_RemoteSetBindOptions_Proxy ( Addressable This,  Addressable pbindopts) {
        var mh$ = IBindCtx_RemoteSetBindOptions_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pbindopts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindCtx_RemoteSetBindOptions_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.IBindCtx_RemoteSetBindOptions_Stub$MH,"IBindCtx_RemoteSetBindOptions_Stub");
    }
    public static void IBindCtx_RemoteSetBindOptions_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IBindCtx_RemoteSetBindOptions_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindCtx_RemoteGetBindOptions_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.IBindCtx_RemoteGetBindOptions_Proxy$MH,"IBindCtx_RemoteGetBindOptions_Proxy");
    }
    public static int IBindCtx_RemoteGetBindOptions_Proxy ( Addressable This,  Addressable pbindopts) {
        var mh$ = IBindCtx_RemoteGetBindOptions_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pbindopts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IBindCtx_RemoteGetBindOptions_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1004.IBindCtx_RemoteGetBindOptions_Stub$MH,"IBindCtx_RemoteGetBindOptions_Stub");
    }
    public static void IBindCtx_RemoteGetBindOptions_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IBindCtx_RemoteGetBindOptions_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPENUMMONIKER = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumMoniker$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1004.IID_IEnumMoniker$SEGMENT,"IID_IEnumMoniker");
    }
    public static MethodHandle IEnumMoniker_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.IEnumMoniker_RemoteNext_Proxy$MH,"IEnumMoniker_RemoteNext_Proxy");
    }
    public static int IEnumMoniker_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumMoniker_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumMoniker_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.IEnumMoniker_RemoteNext_Stub$MH,"IEnumMoniker_RemoteNext_Stub");
    }
    public static void IEnumMoniker_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumMoniker_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$LAYOUT() {
        return constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$VH() {
        return constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0056_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$LAYOUT() {
        return constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$VH() {
        return constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1005.__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0056_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPRUNNABLEOBJECT = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IRunnableObject$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1005.IID_IRunnableObject$SEGMENT,"IID_IRunnableObject");
    }
    public static MethodHandle IRunnableObject_RemoteIsRunning_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1005.IRunnableObject_RemoteIsRunning_Proxy$MH,"IRunnableObject_RemoteIsRunning_Proxy");
    }
    public static int IRunnableObject_RemoteIsRunning_Proxy ( Addressable This) {
        var mh$ = IRunnableObject_RemoteIsRunning_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IRunnableObject_RemoteIsRunning_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1006.IRunnableObject_RemoteIsRunning_Stub$MH,"IRunnableObject_RemoteIsRunning_Stub");
    }
    public static void IRunnableObject_RemoteIsRunning_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IRunnableObject_RemoteIsRunning_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPRUNNINGOBJECTTABLE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IRunningObjectTable$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1006.IID_IRunningObjectTable$SEGMENT,"IID_IRunningObjectTable");
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$LAYOUT() {
        return constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$VH() {
        return constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0058_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$LAYOUT() {
        return constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$VH() {
        return constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1006.__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0058_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPPERSIST = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IPersist$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1006.IID_IPersist$SEGMENT,"IID_IPersist");
    }
    public static OfAddress LPPERSISTSTREAM = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IPersistStream$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1006.IID_IPersistStream$SEGMENT,"IID_IPersistStream");
    }
    public static OfAddress LPMONIKER = Constants$root.C_POINTER$LAYOUT;
    public static int MKSYS_NONE() {
        return (int)0L;
    }
    public static int MKSYS_GENERICCOMPOSITE() {
        return (int)1L;
    }
    public static int MKSYS_FILEMONIKER() {
        return (int)2L;
    }
    public static int MKSYS_ANTIMONIKER() {
        return (int)3L;
    }
    public static int MKSYS_ITEMMONIKER() {
        return (int)4L;
    }
    public static int MKSYS_POINTERMONIKER() {
        return (int)5L;
    }
    public static int MKSYS_CLASSMONIKER() {
        return (int)7L;
    }
    public static int MKSYS_OBJREFMONIKER() {
        return (int)8L;
    }
    public static int MKSYS_SESSIONMONIKER() {
        return (int)9L;
    }
    public static int MKSYS_LUAMONIKER() {
        return (int)10L;
    }
    public static int MKRREDUCE_ONE() {
        return (int)196608L;
    }
    public static int MKRREDUCE_TOUSER() {
        return (int)131072L;
    }
    public static int MKRREDUCE_THROUGHUSER() {
        return (int)65536L;
    }
    public static int MKRREDUCE_ALL() {
        return (int)0L;
    }
    public static MemorySegment IID_IMoniker$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1007.IID_IMoniker$SEGMENT,"IID_IMoniker");
    }
    public static MethodHandle IMoniker_RemoteBindToObject_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.IMoniker_RemoteBindToObject_Proxy$MH,"IMoniker_RemoteBindToObject_Proxy");
    }
    public static int IMoniker_RemoteBindToObject_Proxy ( Addressable This,  Addressable pbc,  Addressable pmkToLeft,  Addressable riidResult,  Addressable ppvResult) {
        var mh$ = IMoniker_RemoteBindToObject_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pbc, pmkToLeft, riidResult, ppvResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IMoniker_RemoteBindToObject_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.IMoniker_RemoteBindToObject_Stub$MH,"IMoniker_RemoteBindToObject_Stub");
    }
    public static void IMoniker_RemoteBindToObject_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IMoniker_RemoteBindToObject_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IMoniker_RemoteBindToStorage_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.IMoniker_RemoteBindToStorage_Proxy$MH,"IMoniker_RemoteBindToStorage_Proxy");
    }
    public static int IMoniker_RemoteBindToStorage_Proxy ( Addressable This,  Addressable pbc,  Addressable pmkToLeft,  Addressable riid,  Addressable ppvObj) {
        var mh$ = IMoniker_RemoteBindToStorage_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pbc, pmkToLeft, riid, ppvObj);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IMoniker_RemoteBindToStorage_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1007.IMoniker_RemoteBindToStorage_Stub$MH,"IMoniker_RemoteBindToStorage_Stub");
    }
    public static void IMoniker_RemoteBindToStorage_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IMoniker_RemoteBindToStorage_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$LAYOUT() {
        return constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$VH() {
        return constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1007.__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0061_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$LAYOUT() {
        return constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$VH() {
        return constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0061_v0_0_s_ifspec"), x);
    }
    public static MemorySegment IID_IROTData$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1008.IID_IROTData$SEGMENT,"IID_IROTData");
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$LAYOUT() {
        return constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$VH() {
        return constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0062_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$LAYOUT() {
        return constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$VH() {
        return constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1008.__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0062_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPENUMSTATSTG = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumSTATSTG$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1008.IID_IEnumSTATSTG$SEGMENT,"IID_IEnumSTATSTG");
    }
    public static MethodHandle IEnumSTATSTG_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1008.IEnumSTATSTG_RemoteNext_Proxy$MH,"IEnumSTATSTG_RemoteNext_Proxy");
    }
    public static int IEnumSTATSTG_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumSTATSTG_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumSTATSTG_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.IEnumSTATSTG_RemoteNext_Stub$MH,"IEnumSTATSTG_RemoteNext_Stub");
    }
    public static void IEnumSTATSTG_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumSTATSTG_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPSTORAGE = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress wireSNB = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress SNB = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IStorage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1009.IID_IStorage$SEGMENT,"IID_IStorage");
    }
    public static MethodHandle IStorage_RemoteOpenStream_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.IStorage_RemoteOpenStream_Proxy$MH,"IStorage_RemoteOpenStream_Proxy");
    }
    public static int IStorage_RemoteOpenStream_Proxy ( Addressable This,  Addressable pwcsName,  int cbReserved1,  Addressable reserved1,  int grfMode,  int reserved2,  Addressable ppstm) {
        var mh$ = IStorage_RemoteOpenStream_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, pwcsName, cbReserved1, reserved1, grfMode, reserved2, ppstm);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStorage_RemoteOpenStream_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.IStorage_RemoteOpenStream_Stub$MH,"IStorage_RemoteOpenStream_Stub");
    }
    public static void IStorage_RemoteOpenStream_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IStorage_RemoteOpenStream_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStorage_RemoteCopyTo_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.IStorage_RemoteCopyTo_Proxy$MH,"IStorage_RemoteCopyTo_Proxy");
    }
    public static int IStorage_RemoteCopyTo_Proxy ( Addressable This,  int ciidExclude,  Addressable rgiidExclude,  Addressable snbExclude,  Addressable pstgDest) {
        var mh$ = IStorage_RemoteCopyTo_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, ciidExclude, rgiidExclude, snbExclude, pstgDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStorage_RemoteCopyTo_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1009.IStorage_RemoteCopyTo_Stub$MH,"IStorage_RemoteCopyTo_Stub");
    }
    public static void IStorage_RemoteCopyTo_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IStorage_RemoteCopyTo_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStorage_RemoteEnumElements_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.IStorage_RemoteEnumElements_Proxy$MH,"IStorage_RemoteEnumElements_Proxy");
    }
    public static int IStorage_RemoteEnumElements_Proxy ( Addressable This,  int reserved1,  int cbReserved2,  Addressable reserved2,  int reserved3,  Addressable ppenum) {
        var mh$ = IStorage_RemoteEnumElements_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, reserved1, cbReserved2, reserved2, reserved3, ppenum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IStorage_RemoteEnumElements_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1010.IStorage_RemoteEnumElements_Stub$MH,"IStorage_RemoteEnumElements_Stub");
    }
    public static void IStorage_RemoteEnumElements_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IStorage_RemoteEnumElements_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT() {
        return constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH() {
        return constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0064_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT() {
        return constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH() {
        return constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1010.__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0064_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPPERSISTFILE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IPersistFile$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1010.IID_IPersistFile$SEGMENT,"IID_IPersistFile");
    }
    public static OfAddress LPPERSISTSTORAGE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IPersistStorage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1010.IID_IPersistStorage$SEGMENT,"IID_IPersistStorage");
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT() {
        return constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH() {
        return constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$set( MemoryAddress x) {
        constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0066_v0_0_c_ifspec"), x);
    }
    public static MemoryLayout __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT() {
        return constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$LAYOUT;
    }
    public static VarHandle __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH() {
        return constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH;
    }
    public static MemorySegment __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT,"__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec");
    }
    public static MemoryAddress __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$get() {
        return (java.lang.foreign.MemoryAddress) constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH.get(RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec"));
    }
    public static void __MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$set( MemoryAddress x) {
        constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$VH.set(RuntimeHelper.requireNonNull(constants$1011.__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec$SEGMENT, "__MIDL_itf_objidl_0000_0066_v0_0_s_ifspec"), x);
    }
    public static OfAddress LPLOCKBYTES = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_ILockBytes$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1011.IID_ILockBytes$SEGMENT,"IID_ILockBytes");
    }
    public static MethodHandle ILockBytes_RemoteReadAt_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.ILockBytes_RemoteReadAt_Proxy$MH,"ILockBytes_RemoteReadAt_Proxy");
    }
    public static int ILockBytes_RemoteReadAt_Proxy ( Addressable This,  MemorySegment ulOffset,  Addressable pv,  int cb,  Addressable pcbRead) {
        var mh$ = ILockBytes_RemoteReadAt_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, ulOffset, pv, cb, pcbRead);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ILockBytes_RemoteReadAt_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.ILockBytes_RemoteReadAt_Stub$MH,"ILockBytes_RemoteReadAt_Stub");
    }
    public static void ILockBytes_RemoteReadAt_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = ILockBytes_RemoteReadAt_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ILockBytes_RemoteWriteAt_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1011.ILockBytes_RemoteWriteAt_Proxy$MH,"ILockBytes_RemoteWriteAt_Proxy");
    }
    public static int ILockBytes_RemoteWriteAt_Proxy ( Addressable This,  MemorySegment ulOffset,  Addressable pv,  int cb,  Addressable pcbWritten) {
        var mh$ = ILockBytes_RemoteWriteAt_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, ulOffset, pv, cb, pcbWritten);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ILockBytes_RemoteWriteAt_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.ILockBytes_RemoteWriteAt_Stub$MH,"ILockBytes_RemoteWriteAt_Stub");
    }
    public static void ILockBytes_RemoteWriteAt_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = ILockBytes_RemoteWriteAt_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPENUMFORMATETC = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPCLIPFORMAT = Constants$root.C_POINTER$LAYOUT;
    public static OfAddress LPFORMATETC = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumFORMATETC$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1012.IID_IEnumFORMATETC$SEGMENT,"IID_IEnumFORMATETC");
    }
    public static MethodHandle IEnumFORMATETC_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.IEnumFORMATETC_RemoteNext_Proxy$MH,"IEnumFORMATETC_RemoteNext_Proxy");
    }
    public static int IEnumFORMATETC_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumFORMATETC_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumFORMATETC_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.IEnumFORMATETC_RemoteNext_Stub$MH,"IEnumFORMATETC_RemoteNext_Stub");
    }
    public static void IEnumFORMATETC_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumFORMATETC_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPENUMSTATDATA = Constants$root.C_POINTER$LAYOUT;
    public static int ADVF_NODATA() {
        return (int)1L;
    }
    public static int ADVF_PRIMEFIRST() {
        return (int)2L;
    }
    public static int ADVF_ONLYONCE() {
        return (int)4L;
    }
    public static int ADVF_DATAONSTOP() {
        return (int)64L;
    }
    public static int ADVFCACHE_NOHANDLER() {
        return (int)8L;
    }
    public static int ADVFCACHE_FORCEBUILTIN() {
        return (int)16L;
    }
    public static int ADVFCACHE_ONSAVE() {
        return (int)32L;
    }
    public static OfAddress LPSTATDATA = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IEnumSTATDATA$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1012.IID_IEnumSTATDATA$SEGMENT,"IID_IEnumSTATDATA");
    }
    public static MethodHandle IEnumSTATDATA_RemoteNext_Proxy$MH() {
        return RuntimeHelper.requireNonNull(constants$1012.IEnumSTATDATA_RemoteNext_Proxy$MH,"IEnumSTATDATA_RemoteNext_Proxy");
    }
    public static int IEnumSTATDATA_RemoteNext_Proxy ( Addressable This,  int celt,  Addressable rgelt,  Addressable pceltFetched) {
        var mh$ = IEnumSTATDATA_RemoteNext_Proxy$MH();
        try {
            return (int)mh$.invokeExact(This, celt, rgelt, pceltFetched);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IEnumSTATDATA_RemoteNext_Stub$MH() {
        return RuntimeHelper.requireNonNull(constants$1013.IEnumSTATDATA_RemoteNext_Stub$MH,"IEnumSTATDATA_RemoteNext_Stub");
    }
    public static void IEnumSTATDATA_RemoteNext_Stub ( Addressable This,  Addressable _pRpcChannelBuffer,  Addressable _pRpcMessage,  Addressable _pdwStubPhase) {
        var mh$ = IEnumSTATDATA_RemoteNext_Stub$MH();
        try {
            mh$.invokeExact(This, _pRpcChannelBuffer, _pRpcMessage, _pdwStubPhase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static OfAddress LPROOTSTORAGE = Constants$root.C_POINTER$LAYOUT;
    public static MemorySegment IID_IRootStorage$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1013.IID_IRootStorage$SEGMENT,"IID_IRootStorage");
    }
    public static OfAddress LPADVISESINK = Constants$root.C_POINTER$LAYOUT;
    public static int TYMED_HGLOBAL() {
        return (int)1L;
    }
    public static int TYMED_FILE() {
        return (int)2L;
    }
    public static int TYMED_ISTREAM() {
        return (int)4L;
    }
    public static int TYMED_ISTORAGE() {
        return (int)8L;
    }
    public static int TYMED_GDI() {
        return (int)16L;
    }
}


