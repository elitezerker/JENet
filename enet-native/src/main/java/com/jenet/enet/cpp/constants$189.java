// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$189 {

    static final FunctionDescriptor RemoveDirectoryFromAppW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RemoveDirectoryFromAppW$MH = RuntimeHelper.downcallHandle(
        "RemoveDirectoryFromAppW",
        constants$189.RemoveDirectoryFromAppW$FUNC
    );
    static final FunctionDescriptor ReplaceFileFromAppW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReplaceFileFromAppW$MH = RuntimeHelper.downcallHandle(
        "ReplaceFileFromAppW",
        constants$189.ReplaceFileFromAppW$FUNC
    );
    static final FunctionDescriptor SetFileAttributesFromAppW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetFileAttributesFromAppW$MH = RuntimeHelper.downcallHandle(
        "SetFileAttributesFromAppW",
        constants$189.SetFileAttributesFromAppW$FUNC
    );
    static final FunctionDescriptor IsDebuggerPresent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle IsDebuggerPresent$MH = RuntimeHelper.downcallHandle(
        "IsDebuggerPresent",
        constants$189.IsDebuggerPresent$FUNC
    );
    static final FunctionDescriptor DebugBreak$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle DebugBreak$MH = RuntimeHelper.downcallHandle(
        "DebugBreak",
        constants$189.DebugBreak$FUNC
    );
    static final FunctionDescriptor OutputDebugStringA$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle OutputDebugStringA$MH = RuntimeHelper.downcallHandle(
        "OutputDebugStringA",
        constants$189.OutputDebugStringA$FUNC
    );
}


