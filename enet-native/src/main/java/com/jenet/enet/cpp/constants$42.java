// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$42 {

    static final FunctionDescriptor ultoa$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ultoa$MH = RuntimeHelper.downcallHandle(
        "ultoa",
        constants$42.ultoa$FUNC
    );
    static final FunctionDescriptor putenv$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle putenv$MH = RuntimeHelper.downcallHandle(
        "putenv",
        constants$42.putenv$FUNC
    );
    static final FunctionDescriptor onexit$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle onexit$MH = RuntimeHelper.downcallHandle(
        "onexit",
        constants$42.onexit$FUNC
    );
    static final FunctionDescriptor __C_specific_handler$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle __C_specific_handler$MH = RuntimeHelper.downcallHandle(
        "__C_specific_handler",
        constants$42.__C_specific_handler$FUNC
    );
    static final FunctionDescriptor _exception_code$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle _exception_code$MH = RuntimeHelper.downcallHandle(
        "_exception_code",
        constants$42._exception_code$FUNC
    );
    static final FunctionDescriptor _exception_info$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle _exception_info$MH = RuntimeHelper.downcallHandle(
        "_exception_info",
        constants$42._exception_info$FUNC
    );
}


