// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$500 {

    static final FunctionDescriptor InjectSyntheticPointerInput$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle InjectSyntheticPointerInput$MH = RuntimeHelper.downcallHandle(
        "InjectSyntheticPointerInput",
        constants$500.InjectSyntheticPointerInput$FUNC
    );
    static final FunctionDescriptor DestroySyntheticPointerDevice$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle DestroySyntheticPointerDevice$MH = RuntimeHelper.downcallHandle(
        "DestroySyntheticPointerDevice",
        constants$500.DestroySyntheticPointerDevice$FUNC
    );
    static final FunctionDescriptor EnableMouseInPointer$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle EnableMouseInPointer$MH = RuntimeHelper.downcallHandle(
        "EnableMouseInPointer",
        constants$500.EnableMouseInPointer$FUNC
    );
    static final FunctionDescriptor IsMouseInPointerEnabled$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle IsMouseInPointerEnabled$MH = RuntimeHelper.downcallHandle(
        "IsMouseInPointerEnabled",
        constants$500.IsMouseInPointerEnabled$FUNC
    );
    static final FunctionDescriptor EnableMouseInPointerForThread$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle EnableMouseInPointerForThread$MH = RuntimeHelper.downcallHandle(
        "EnableMouseInPointerForThread",
        constants$500.EnableMouseInPointerForThread$FUNC
    );
    static final FunctionDescriptor RegisterTouchHitTestingWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle RegisterTouchHitTestingWindow$MH = RuntimeHelper.downcallHandle(
        "RegisterTouchHitTestingWindow",
        constants$500.RegisterTouchHitTestingWindow$FUNC
    );
}


