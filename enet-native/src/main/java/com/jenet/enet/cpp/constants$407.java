// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$407 {

    static final FunctionDescriptor GetViewportExtEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetViewportExtEx$MH = RuntimeHelper.downcallHandle(
        "GetViewportExtEx",
        constants$407.GetViewportExtEx$FUNC
    );
    static final FunctionDescriptor GetViewportOrgEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetViewportOrgEx$MH = RuntimeHelper.downcallHandle(
        "GetViewportOrgEx",
        constants$407.GetViewportOrgEx$FUNC
    );
    static final FunctionDescriptor GetWindowExtEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowExtEx$MH = RuntimeHelper.downcallHandle(
        "GetWindowExtEx",
        constants$407.GetWindowExtEx$FUNC
    );
    static final FunctionDescriptor GetWindowOrgEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowOrgEx$MH = RuntimeHelper.downcallHandle(
        "GetWindowOrgEx",
        constants$407.GetWindowOrgEx$FUNC
    );
    static final FunctionDescriptor IntersectClipRect$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle IntersectClipRect$MH = RuntimeHelper.downcallHandle(
        "IntersectClipRect",
        constants$407.IntersectClipRect$FUNC
    );
    static final FunctionDescriptor InvertRgn$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle InvertRgn$MH = RuntimeHelper.downcallHandle(
        "InvertRgn",
        constants$407.InvertRgn$FUNC
    );
}


