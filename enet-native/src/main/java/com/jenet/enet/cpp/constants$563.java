// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$563 {

    static final FunctionDescriptor GetDpiAwarenessContextForProcess$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetDpiAwarenessContextForProcess$MH = RuntimeHelper.downcallHandle(
        "GetDpiAwarenessContextForProcess",
        constants$563.GetDpiAwarenessContextForProcess$FUNC
    );
    static final FunctionDescriptor SetThreadDpiHostingBehavior$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetThreadDpiHostingBehavior$MH = RuntimeHelper.downcallHandle(
        "SetThreadDpiHostingBehavior",
        constants$563.SetThreadDpiHostingBehavior$FUNC
    );
    static final FunctionDescriptor GetThreadDpiHostingBehavior$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetThreadDpiHostingBehavior$MH = RuntimeHelper.downcallHandle(
        "GetThreadDpiHostingBehavior",
        constants$563.GetThreadDpiHostingBehavior$FUNC
    );
    static final FunctionDescriptor GetWindowDpiHostingBehavior$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetWindowDpiHostingBehavior$MH = RuntimeHelper.downcallHandle(
        "GetWindowDpiHostingBehavior",
        constants$563.GetWindowDpiHostingBehavior$FUNC
    );
    static final FunctionDescriptor GetWindowModuleFileNameA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetWindowModuleFileNameA$MH = RuntimeHelper.downcallHandle(
        "GetWindowModuleFileNameA",
        constants$563.GetWindowModuleFileNameA$FUNC
    );
    static final FunctionDescriptor GetWindowModuleFileNameW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetWindowModuleFileNameW$MH = RuntimeHelper.downcallHandle(
        "GetWindowModuleFileNameW",
        constants$563.GetWindowModuleFileNameW$FUNC
    );
}


