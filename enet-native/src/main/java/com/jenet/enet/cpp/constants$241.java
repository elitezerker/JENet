// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$241 {

    static final FunctionDescriptor UnmapViewOfFile$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle UnmapViewOfFile$MH = RuntimeHelper.downcallHandle(
        "UnmapViewOfFile",
        constants$241.UnmapViewOfFile$FUNC
    );
    static final FunctionDescriptor GetLargePageMinimum$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT);
    static final MethodHandle GetLargePageMinimum$MH = RuntimeHelper.downcallHandle(
        "GetLargePageMinimum",
        constants$241.GetLargePageMinimum$FUNC
    );
    static final FunctionDescriptor GetProcessWorkingSetSizeEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetProcessWorkingSetSizeEx$MH = RuntimeHelper.downcallHandle(
        "GetProcessWorkingSetSizeEx",
        constants$241.GetProcessWorkingSetSizeEx$FUNC
    );
    static final FunctionDescriptor SetProcessWorkingSetSizeEx$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetProcessWorkingSetSizeEx$MH = RuntimeHelper.downcallHandle(
        "SetProcessWorkingSetSizeEx",
        constants$241.SetProcessWorkingSetSizeEx$FUNC
    );
    static final FunctionDescriptor VirtualLock$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle VirtualLock$MH = RuntimeHelper.downcallHandle(
        "VirtualLock",
        constants$241.VirtualLock$FUNC
    );
    static final FunctionDescriptor VirtualUnlock$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle VirtualUnlock$MH = RuntimeHelper.downcallHandle(
        "VirtualUnlock",
        constants$241.VirtualUnlock$FUNC
    );
}


