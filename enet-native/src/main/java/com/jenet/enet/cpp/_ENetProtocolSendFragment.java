// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _ENetProtocolSendFragment {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            Constants$root.C_CHAR$LAYOUT.withName("command"),
            Constants$root.C_CHAR$LAYOUT.withName("channelID"),
            Constants$root.C_SHORT$LAYOUT.withName("reliableSequenceNumber")
        ).withName("header"),
        Constants$root.C_SHORT$LAYOUT.withName("startSequenceNumber"),
        Constants$root.C_SHORT$LAYOUT.withName("dataLength"),
        Constants$root.C_LONG$LAYOUT.withName("fragmentCount"),
        Constants$root.C_LONG$LAYOUT.withName("fragmentNumber"),
        Constants$root.C_LONG$LAYOUT.withName("totalLength"),
        Constants$root.C_LONG$LAYOUT.withName("fragmentOffset")
    ).withName("_ENetProtocolSendFragment");
    public static MemoryLayout $LAYOUT() {
        return _ENetProtocolSendFragment.$struct$LAYOUT;
    }
    public static MemorySegment header$slice(MemorySegment seg) {
        return seg.asSlice(0, 4);
    }
    static final VarHandle startSequenceNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("startSequenceNumber"));
    public static VarHandle startSequenceNumber$VH() {
        return _ENetProtocolSendFragment.startSequenceNumber$VH;
    }
    public static short startSequenceNumber$get(MemorySegment seg) {
        return (short)_ENetProtocolSendFragment.startSequenceNumber$VH.get(seg);
    }
    public static void startSequenceNumber$set( MemorySegment seg, short x) {
        _ENetProtocolSendFragment.startSequenceNumber$VH.set(seg, x);
    }
    public static short startSequenceNumber$get(MemorySegment seg, long index) {
        return (short)_ENetProtocolSendFragment.startSequenceNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void startSequenceNumber$set(MemorySegment seg, long index, short x) {
        _ENetProtocolSendFragment.startSequenceNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dataLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dataLength"));
    public static VarHandle dataLength$VH() {
        return _ENetProtocolSendFragment.dataLength$VH;
    }
    public static short dataLength$get(MemorySegment seg) {
        return (short)_ENetProtocolSendFragment.dataLength$VH.get(seg);
    }
    public static void dataLength$set( MemorySegment seg, short x) {
        _ENetProtocolSendFragment.dataLength$VH.set(seg, x);
    }
    public static short dataLength$get(MemorySegment seg, long index) {
        return (short)_ENetProtocolSendFragment.dataLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dataLength$set(MemorySegment seg, long index, short x) {
        _ENetProtocolSendFragment.dataLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle fragmentCount$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("fragmentCount"));
    public static VarHandle fragmentCount$VH() {
        return _ENetProtocolSendFragment.fragmentCount$VH;
    }
    public static int fragmentCount$get(MemorySegment seg) {
        return (int)_ENetProtocolSendFragment.fragmentCount$VH.get(seg);
    }
    public static void fragmentCount$set( MemorySegment seg, int x) {
        _ENetProtocolSendFragment.fragmentCount$VH.set(seg, x);
    }
    public static int fragmentCount$get(MemorySegment seg, long index) {
        return (int)_ENetProtocolSendFragment.fragmentCount$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fragmentCount$set(MemorySegment seg, long index, int x) {
        _ENetProtocolSendFragment.fragmentCount$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle fragmentNumber$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("fragmentNumber"));
    public static VarHandle fragmentNumber$VH() {
        return _ENetProtocolSendFragment.fragmentNumber$VH;
    }
    public static int fragmentNumber$get(MemorySegment seg) {
        return (int)_ENetProtocolSendFragment.fragmentNumber$VH.get(seg);
    }
    public static void fragmentNumber$set( MemorySegment seg, int x) {
        _ENetProtocolSendFragment.fragmentNumber$VH.set(seg, x);
    }
    public static int fragmentNumber$get(MemorySegment seg, long index) {
        return (int)_ENetProtocolSendFragment.fragmentNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fragmentNumber$set(MemorySegment seg, long index, int x) {
        _ENetProtocolSendFragment.fragmentNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle totalLength$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("totalLength"));
    public static VarHandle totalLength$VH() {
        return _ENetProtocolSendFragment.totalLength$VH;
    }
    public static int totalLength$get(MemorySegment seg) {
        return (int)_ENetProtocolSendFragment.totalLength$VH.get(seg);
    }
    public static void totalLength$set( MemorySegment seg, int x) {
        _ENetProtocolSendFragment.totalLength$VH.set(seg, x);
    }
    public static int totalLength$get(MemorySegment seg, long index) {
        return (int)_ENetProtocolSendFragment.totalLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void totalLength$set(MemorySegment seg, long index, int x) {
        _ENetProtocolSendFragment.totalLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle fragmentOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("fragmentOffset"));
    public static VarHandle fragmentOffset$VH() {
        return _ENetProtocolSendFragment.fragmentOffset$VH;
    }
    public static int fragmentOffset$get(MemorySegment seg) {
        return (int)_ENetProtocolSendFragment.fragmentOffset$VH.get(seg);
    }
    public static void fragmentOffset$set( MemorySegment seg, int x) {
        _ENetProtocolSendFragment.fragmentOffset$VH.set(seg, x);
    }
    public static int fragmentOffset$get(MemorySegment seg, long index) {
        return (int)_ENetProtocolSendFragment.fragmentOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fragmentOffset$set(MemorySegment seg, long index, int x) {
        _ENetProtocolSendFragment.fragmentOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


