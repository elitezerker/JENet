// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$608 {

    static final FunctionDescriptor SetConsoleTextAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_SHORT$LAYOUT
    );
    static final MethodHandle SetConsoleTextAttribute$MH = RuntimeHelper.downcallHandle(
        "SetConsoleTextAttribute",
        constants$608.SetConsoleTextAttribute$FUNC
    );
    static final FunctionDescriptor SetConsoleWindowInfo$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SetConsoleWindowInfo$MH = RuntimeHelper.downcallHandle(
        "SetConsoleWindowInfo",
        constants$608.SetConsoleWindowInfo$FUNC
    );
    static final FunctionDescriptor WriteConsoleOutputCharacterA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputCharacterA$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputCharacterA",
        constants$608.WriteConsoleOutputCharacterA$FUNC
    );
    static final FunctionDescriptor WriteConsoleOutputCharacterW$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputCharacterW$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputCharacterW",
        constants$608.WriteConsoleOutputCharacterW$FUNC
    );
    static final FunctionDescriptor WriteConsoleOutputAttribute$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WriteConsoleOutputAttribute$MH = RuntimeHelper.downcallHandle(
        "WriteConsoleOutputAttribute",
        constants$608.WriteConsoleOutputAttribute$FUNC
    );
    static final FunctionDescriptor ReadConsoleOutputCharacterA$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_SHORT$LAYOUT.withName("X"),
            Constants$root.C_SHORT$LAYOUT.withName("Y")
        ).withName("_COORD"),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ReadConsoleOutputCharacterA$MH = RuntimeHelper.downcallHandle(
        "ReadConsoleOutputCharacterA",
        constants$608.ReadConsoleOutputCharacterA$FUNC
    );
}


