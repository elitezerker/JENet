// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$193 {

    static final FunctionDescriptor SetHandleInformation$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SetHandleInformation$MH = RuntimeHelper.downcallHandle(
        "SetHandleInformation",
        constants$193.SetHandleInformation$FUNC
    );
    static final FunctionDescriptor PTOP_LEVEL_EXCEPTION_FILTER$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PTOP_LEVEL_EXCEPTION_FILTER$MH = RuntimeHelper.downcallHandle(
        constants$193.PTOP_LEVEL_EXCEPTION_FILTER$FUNC
    );
    static final FunctionDescriptor LPTOP_LEVEL_EXCEPTION_FILTER$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle LPTOP_LEVEL_EXCEPTION_FILTER$MH = RuntimeHelper.downcallHandle(
        constants$193.LPTOP_LEVEL_EXCEPTION_FILTER$FUNC
    );
    static final FunctionDescriptor RaiseException$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RaiseException$MH = RuntimeHelper.downcallHandle(
        "RaiseException",
        constants$193.RaiseException$FUNC
    );
}


