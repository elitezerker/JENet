// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$533 {

    static final FunctionDescriptor WindowFromPhysicalPoint$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("x"),
            Constants$root.C_LONG$LAYOUT.withName("y")
        ).withName("tagPOINT")
    );
    static final MethodHandle WindowFromPhysicalPoint$MH = RuntimeHelper.downcallHandle(
        "WindowFromPhysicalPoint",
        constants$533.WindowFromPhysicalPoint$FUNC
    );
    static final FunctionDescriptor ChildWindowFromPoint$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("x"),
            Constants$root.C_LONG$LAYOUT.withName("y")
        ).withName("tagPOINT")
    );
    static final MethodHandle ChildWindowFromPoint$MH = RuntimeHelper.downcallHandle(
        "ChildWindowFromPoint",
        constants$533.ChildWindowFromPoint$FUNC
    );
    static final FunctionDescriptor ClipCursor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle ClipCursor$MH = RuntimeHelper.downcallHandle(
        "ClipCursor",
        constants$533.ClipCursor$FUNC
    );
    static final FunctionDescriptor ChildWindowFromPointEx$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("x"),
            Constants$root.C_LONG$LAYOUT.withName("y")
        ).withName("tagPOINT"),
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle ChildWindowFromPointEx$MH = RuntimeHelper.downcallHandle(
        "ChildWindowFromPointEx",
        constants$533.ChildWindowFromPointEx$FUNC
    );
    static final FunctionDescriptor GetSysColor$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetSysColor$MH = RuntimeHelper.downcallHandle(
        "GetSysColor",
        constants$533.GetSysColor$FUNC
    );
    static final FunctionDescriptor GetSysColorBrush$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle GetSysColorBrush$MH = RuntimeHelper.downcallHandle(
        "GetSysColorBrush",
        constants$533.GetSysColorBrush$FUNC
    );
}


