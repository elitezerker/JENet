// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$226 {

    static final FunctionDescriptor FlushInstructionCache$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle FlushInstructionCache$MH = RuntimeHelper.downcallHandle(
        "FlushInstructionCache",
        constants$226.FlushInstructionCache$FUNC
    );
    static final FunctionDescriptor GetThreadTimes$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetThreadTimes$MH = RuntimeHelper.downcallHandle(
        "GetThreadTimes",
        constants$226.GetThreadTimes$FUNC
    );
    static final FunctionDescriptor OpenProcess$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle OpenProcess$MH = RuntimeHelper.downcallHandle(
        "OpenProcess",
        constants$226.OpenProcess$FUNC
    );
    static final FunctionDescriptor IsProcessorFeaturePresent$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle IsProcessorFeaturePresent$MH = RuntimeHelper.downcallHandle(
        "IsProcessorFeaturePresent",
        constants$226.IsProcessorFeaturePresent$FUNC
    );
    static final FunctionDescriptor GetProcessHandleCount$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle GetProcessHandleCount$MH = RuntimeHelper.downcallHandle(
        "GetProcessHandleCount",
        constants$226.GetProcessHandleCount$FUNC
    );
    static final FunctionDescriptor GetCurrentProcessorNumber$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT);
    static final MethodHandle GetCurrentProcessorNumber$MH = RuntimeHelper.downcallHandle(
        "GetCurrentProcessorNumber",
        constants$226.GetCurrentProcessorNumber$FUNC
    );
}


