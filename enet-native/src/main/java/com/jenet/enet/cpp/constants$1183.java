// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$1183 {

    static final FunctionDescriptor SafeArrayCreateVector$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle SafeArrayCreateVector$MH = RuntimeHelper.downcallHandle(
        "SafeArrayCreateVector",
        constants$1183.SafeArrayCreateVector$FUNC
    );
    static final FunctionDescriptor SafeArrayCreateVectorEx$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_SHORT$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle SafeArrayCreateVectorEx$MH = RuntimeHelper.downcallHandle(
        "SafeArrayCreateVectorEx",
        constants$1183.SafeArrayCreateVectorEx$FUNC
    );
    static final FunctionDescriptor VariantInit$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VariantInit$MH = RuntimeHelper.downcallHandle(
        "VariantInit",
        constants$1183.VariantInit$FUNC
    );
    static final FunctionDescriptor VariantClear$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VariantClear$MH = RuntimeHelper.downcallHandle(
        "VariantClear",
        constants$1183.VariantClear$FUNC
    );
    static final FunctionDescriptor VariantCopy$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VariantCopy$MH = RuntimeHelper.downcallHandle(
        "VariantCopy",
        constants$1183.VariantCopy$FUNC
    );
    static final FunctionDescriptor VariantCopyInd$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle VariantCopyInd$MH = RuntimeHelper.downcallHandle(
        "VariantCopyInd",
        constants$1183.VariantCopyInd$FUNC
    );
}


