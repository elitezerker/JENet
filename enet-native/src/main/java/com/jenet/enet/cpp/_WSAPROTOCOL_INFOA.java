// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class _WSAPROTOCOL_INFOA {

    static final  GroupLayout $struct$LAYOUT = MemoryLayout.structLayout(
        Constants$root.C_LONG$LAYOUT.withName("dwServiceFlags1"),
        Constants$root.C_LONG$LAYOUT.withName("dwServiceFlags2"),
        Constants$root.C_LONG$LAYOUT.withName("dwServiceFlags3"),
        Constants$root.C_LONG$LAYOUT.withName("dwServiceFlags4"),
        Constants$root.C_LONG$LAYOUT.withName("dwProviderFlags"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("Data1"),
            Constants$root.C_SHORT$LAYOUT.withName("Data2"),
            Constants$root.C_SHORT$LAYOUT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, Constants$root.C_CHAR$LAYOUT).withName("Data4")
        ).withName("ProviderId"),
        Constants$root.C_LONG$LAYOUT.withName("dwCatalogEntryId"),
        MemoryLayout.structLayout(
            Constants$root.C_LONG$LAYOUT.withName("ChainLen"),
            MemoryLayout.sequenceLayout(7, Constants$root.C_LONG$LAYOUT).withName("ChainEntries")
        ).withName("ProtocolChain"),
        Constants$root.C_LONG$LAYOUT.withName("iVersion"),
        Constants$root.C_LONG$LAYOUT.withName("iAddressFamily"),
        Constants$root.C_LONG$LAYOUT.withName("iMaxSockAddr"),
        Constants$root.C_LONG$LAYOUT.withName("iMinSockAddr"),
        Constants$root.C_LONG$LAYOUT.withName("iSocketType"),
        Constants$root.C_LONG$LAYOUT.withName("iProtocol"),
        Constants$root.C_LONG$LAYOUT.withName("iProtocolMaxOffset"),
        Constants$root.C_LONG$LAYOUT.withName("iNetworkByteOrder"),
        Constants$root.C_LONG$LAYOUT.withName("iSecurityScheme"),
        Constants$root.C_LONG$LAYOUT.withName("dwMessageSize"),
        Constants$root.C_LONG$LAYOUT.withName("dwProviderReserved"),
        MemoryLayout.sequenceLayout(256, Constants$root.C_CHAR$LAYOUT).withName("szProtocol")
    ).withName("_WSAPROTOCOL_INFOA");
    public static MemoryLayout $LAYOUT() {
        return _WSAPROTOCOL_INFOA.$struct$LAYOUT;
    }
    static final VarHandle dwServiceFlags1$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwServiceFlags1"));
    public static VarHandle dwServiceFlags1$VH() {
        return _WSAPROTOCOL_INFOA.dwServiceFlags1$VH;
    }
    public static int dwServiceFlags1$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags1$VH.get(seg);
    }
    public static void dwServiceFlags1$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags1$VH.set(seg, x);
    }
    public static int dwServiceFlags1$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags1$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceFlags1$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags1$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwServiceFlags2$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwServiceFlags2"));
    public static VarHandle dwServiceFlags2$VH() {
        return _WSAPROTOCOL_INFOA.dwServiceFlags2$VH;
    }
    public static int dwServiceFlags2$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags2$VH.get(seg);
    }
    public static void dwServiceFlags2$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags2$VH.set(seg, x);
    }
    public static int dwServiceFlags2$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceFlags2$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwServiceFlags3$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwServiceFlags3"));
    public static VarHandle dwServiceFlags3$VH() {
        return _WSAPROTOCOL_INFOA.dwServiceFlags3$VH;
    }
    public static int dwServiceFlags3$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags3$VH.get(seg);
    }
    public static void dwServiceFlags3$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags3$VH.set(seg, x);
    }
    public static int dwServiceFlags3$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags3$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceFlags3$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags3$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwServiceFlags4$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwServiceFlags4"));
    public static VarHandle dwServiceFlags4$VH() {
        return _WSAPROTOCOL_INFOA.dwServiceFlags4$VH;
    }
    public static int dwServiceFlags4$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags4$VH.get(seg);
    }
    public static void dwServiceFlags4$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags4$VH.set(seg, x);
    }
    public static int dwServiceFlags4$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwServiceFlags4$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwServiceFlags4$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwServiceFlags4$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwProviderFlags$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwProviderFlags"));
    public static VarHandle dwProviderFlags$VH() {
        return _WSAPROTOCOL_INFOA.dwProviderFlags$VH;
    }
    public static int dwProviderFlags$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwProviderFlags$VH.get(seg);
    }
    public static void dwProviderFlags$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwProviderFlags$VH.set(seg, x);
    }
    public static int dwProviderFlags$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwProviderFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProviderFlags$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwProviderFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ProviderId$slice(MemorySegment seg) {
        return seg.asSlice(20, 16);
    }
    static final VarHandle dwCatalogEntryId$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwCatalogEntryId"));
    public static VarHandle dwCatalogEntryId$VH() {
        return _WSAPROTOCOL_INFOA.dwCatalogEntryId$VH;
    }
    public static int dwCatalogEntryId$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwCatalogEntryId$VH.get(seg);
    }
    public static void dwCatalogEntryId$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwCatalogEntryId$VH.set(seg, x);
    }
    public static int dwCatalogEntryId$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwCatalogEntryId$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwCatalogEntryId$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwCatalogEntryId$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment ProtocolChain$slice(MemorySegment seg) {
        return seg.asSlice(40, 32);
    }
    static final VarHandle iVersion$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iVersion"));
    public static VarHandle iVersion$VH() {
        return _WSAPROTOCOL_INFOA.iVersion$VH;
    }
    public static int iVersion$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iVersion$VH.get(seg);
    }
    public static void iVersion$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iVersion$VH.set(seg, x);
    }
    public static int iVersion$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iVersion$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iVersion$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iVersion$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iAddressFamily$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iAddressFamily"));
    public static VarHandle iAddressFamily$VH() {
        return _WSAPROTOCOL_INFOA.iAddressFamily$VH;
    }
    public static int iAddressFamily$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iAddressFamily$VH.get(seg);
    }
    public static void iAddressFamily$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iAddressFamily$VH.set(seg, x);
    }
    public static int iAddressFamily$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iAddressFamily$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iAddressFamily$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iAddressFamily$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iMaxSockAddr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iMaxSockAddr"));
    public static VarHandle iMaxSockAddr$VH() {
        return _WSAPROTOCOL_INFOA.iMaxSockAddr$VH;
    }
    public static int iMaxSockAddr$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iMaxSockAddr$VH.get(seg);
    }
    public static void iMaxSockAddr$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iMaxSockAddr$VH.set(seg, x);
    }
    public static int iMaxSockAddr$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iMaxSockAddr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iMaxSockAddr$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iMaxSockAddr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iMinSockAddr$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iMinSockAddr"));
    public static VarHandle iMinSockAddr$VH() {
        return _WSAPROTOCOL_INFOA.iMinSockAddr$VH;
    }
    public static int iMinSockAddr$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iMinSockAddr$VH.get(seg);
    }
    public static void iMinSockAddr$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iMinSockAddr$VH.set(seg, x);
    }
    public static int iMinSockAddr$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iMinSockAddr$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iMinSockAddr$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iMinSockAddr$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iSocketType$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iSocketType"));
    public static VarHandle iSocketType$VH() {
        return _WSAPROTOCOL_INFOA.iSocketType$VH;
    }
    public static int iSocketType$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iSocketType$VH.get(seg);
    }
    public static void iSocketType$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iSocketType$VH.set(seg, x);
    }
    public static int iSocketType$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iSocketType$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iSocketType$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iSocketType$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iProtocol$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iProtocol"));
    public static VarHandle iProtocol$VH() {
        return _WSAPROTOCOL_INFOA.iProtocol$VH;
    }
    public static int iProtocol$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iProtocol$VH.get(seg);
    }
    public static void iProtocol$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iProtocol$VH.set(seg, x);
    }
    public static int iProtocol$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iProtocol$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iProtocol$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iProtocol$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iProtocolMaxOffset$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iProtocolMaxOffset"));
    public static VarHandle iProtocolMaxOffset$VH() {
        return _WSAPROTOCOL_INFOA.iProtocolMaxOffset$VH;
    }
    public static int iProtocolMaxOffset$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iProtocolMaxOffset$VH.get(seg);
    }
    public static void iProtocolMaxOffset$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iProtocolMaxOffset$VH.set(seg, x);
    }
    public static int iProtocolMaxOffset$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iProtocolMaxOffset$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iProtocolMaxOffset$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iProtocolMaxOffset$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iNetworkByteOrder$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iNetworkByteOrder"));
    public static VarHandle iNetworkByteOrder$VH() {
        return _WSAPROTOCOL_INFOA.iNetworkByteOrder$VH;
    }
    public static int iNetworkByteOrder$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iNetworkByteOrder$VH.get(seg);
    }
    public static void iNetworkByteOrder$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iNetworkByteOrder$VH.set(seg, x);
    }
    public static int iNetworkByteOrder$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iNetworkByteOrder$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iNetworkByteOrder$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iNetworkByteOrder$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle iSecurityScheme$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("iSecurityScheme"));
    public static VarHandle iSecurityScheme$VH() {
        return _WSAPROTOCOL_INFOA.iSecurityScheme$VH;
    }
    public static int iSecurityScheme$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.iSecurityScheme$VH.get(seg);
    }
    public static void iSecurityScheme$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.iSecurityScheme$VH.set(seg, x);
    }
    public static int iSecurityScheme$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.iSecurityScheme$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void iSecurityScheme$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.iSecurityScheme$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwMessageSize$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwMessageSize"));
    public static VarHandle dwMessageSize$VH() {
        return _WSAPROTOCOL_INFOA.dwMessageSize$VH;
    }
    public static int dwMessageSize$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwMessageSize$VH.get(seg);
    }
    public static void dwMessageSize$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwMessageSize$VH.set(seg, x);
    }
    public static int dwMessageSize$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwMessageSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwMessageSize$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwMessageSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle dwProviderReserved$VH = $struct$LAYOUT.varHandle(MemoryLayout.PathElement.groupElement("dwProviderReserved"));
    public static VarHandle dwProviderReserved$VH() {
        return _WSAPROTOCOL_INFOA.dwProviderReserved$VH;
    }
    public static int dwProviderReserved$get(MemorySegment seg) {
        return (int)_WSAPROTOCOL_INFOA.dwProviderReserved$VH.get(seg);
    }
    public static void dwProviderReserved$set( MemorySegment seg, int x) {
        _WSAPROTOCOL_INFOA.dwProviderReserved$VH.set(seg, x);
    }
    public static int dwProviderReserved$get(MemorySegment seg, long index) {
        return (int)_WSAPROTOCOL_INFOA.dwProviderReserved$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void dwProviderReserved$set(MemorySegment seg, long index, int x) {
        _WSAPROTOCOL_INFOA.dwProviderReserved$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment szProtocol$slice(MemorySegment seg) {
        return seg.asSlice(116, 256);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, MemorySession session) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, session); }
}


