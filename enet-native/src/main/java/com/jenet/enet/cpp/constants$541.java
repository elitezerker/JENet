// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$541 {

    static final FunctionDescriptor FindWindowA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindWindowA$MH = RuntimeHelper.downcallHandle(
        "FindWindowA",
        constants$541.FindWindowA$FUNC
    );
    static final FunctionDescriptor FindWindowW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindWindowW$MH = RuntimeHelper.downcallHandle(
        "FindWindowW",
        constants$541.FindWindowW$FUNC
    );
    static final FunctionDescriptor FindWindowExA$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindWindowExA$MH = RuntimeHelper.downcallHandle(
        "FindWindowExA",
        constants$541.FindWindowExA$FUNC
    );
    static final FunctionDescriptor FindWindowExW$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle FindWindowExW$MH = RuntimeHelper.downcallHandle(
        "FindWindowExW",
        constants$541.FindWindowExW$FUNC
    );
    static final FunctionDescriptor GetShellWindow$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT);
    static final MethodHandle GetShellWindow$MH = RuntimeHelper.downcallHandle(
        "GetShellWindow",
        constants$541.GetShellWindow$FUNC
    );
    static final FunctionDescriptor RegisterShellHookWindow$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle RegisterShellHookWindow$MH = RuntimeHelper.downcallHandle(
        "RegisterShellHookWindow",
        constants$541.RegisterShellHookWindow$FUNC
    );
}


