// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$792 {

    static final FunctionDescriptor PFN_CMSG_FREE$FUNC = FunctionDescriptor.ofVoid(
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CMSG_FREE$MH = RuntimeHelper.downcallHandle(
        constants$792.PFN_CMSG_FREE$FUNC
    );
    static final FunctionDescriptor PFN_CMSG_GEN_ENCRYPT_KEY$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CMSG_GEN_ENCRYPT_KEY$MH = RuntimeHelper.downcallHandle(
        constants$792.PFN_CMSG_GEN_ENCRYPT_KEY$FUNC
    );
    static final FunctionDescriptor PFN_CMSG_EXPORT_ENCRYPT_KEY$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle PFN_CMSG_EXPORT_ENCRYPT_KEY$MH = RuntimeHelper.downcallHandle(
        constants$792.PFN_CMSG_EXPORT_ENCRYPT_KEY$FUNC
    );
}


