// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$53 {

    static final FunctionDescriptor _isalnum_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _isalnum_l$MH = RuntimeHelper.downcallHandle(
        "_isalnum_l",
        constants$53._isalnum_l$FUNC
    );
    static final FunctionDescriptor isprint$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle isprint$MH = RuntimeHelper.downcallHandle(
        "isprint",
        constants$53.isprint$FUNC
    );
    static final FunctionDescriptor _isprint_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _isprint_l$MH = RuntimeHelper.downcallHandle(
        "_isprint_l",
        constants$53._isprint_l$FUNC
    );
    static final FunctionDescriptor isgraph$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle isgraph$MH = RuntimeHelper.downcallHandle(
        "isgraph",
        constants$53.isgraph$FUNC
    );
    static final FunctionDescriptor _isgraph_l$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle _isgraph_l$MH = RuntimeHelper.downcallHandle(
        "_isgraph_l",
        constants$53._isgraph_l$FUNC
    );
    static final FunctionDescriptor iscntrl$FUNC = FunctionDescriptor.of(Constants$root.C_LONG$LAYOUT,
        Constants$root.C_LONG$LAYOUT
    );
    static final MethodHandle iscntrl$MH = RuntimeHelper.downcallHandle(
        "iscntrl",
        constants$53.iscntrl$FUNC
    );
}


