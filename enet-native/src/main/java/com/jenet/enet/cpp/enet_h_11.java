// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class enet_h_11 extends enet_h_10 {

    public static int URLMON_OPTION_USERAGENT() {
        return (int)268435457L;
    }
    public static int URLMON_OPTION_USERAGENT_REFRESH() {
        return (int)268435458L;
    }
    public static int URLMON_OPTION_URL_ENCODING() {
        return (int)268435460L;
    }
    public static int URLMON_OPTION_USE_BINDSTRINGCREDS() {
        return (int)268435464L;
    }
    public static int URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS() {
        return (int)268435472L;
    }
    public static int CF_NULL() {
        return (int)0L;
    }
    public static int Uri_CREATE_ALLOW_RELATIVE() {
        return (int)1L;
    }
    public static int Uri_CREATE_ALLOW_IMPLICIT_WILDCARD_SCHEME() {
        return (int)2L;
    }
    public static int Uri_CREATE_ALLOW_IMPLICIT_FILE_SCHEME() {
        return (int)4L;
    }
    public static int Uri_CREATE_NOFRAG() {
        return (int)8L;
    }
    public static int Uri_CREATE_NO_CANONICALIZE() {
        return (int)16L;
    }
    public static int Uri_CREATE_CANONICALIZE() {
        return (int)256L;
    }
    public static int Uri_CREATE_FILE_USE_DOS_PATH() {
        return (int)32L;
    }
    public static int Uri_CREATE_DECODE_EXTRA_INFO() {
        return (int)64L;
    }
    public static int Uri_CREATE_NO_DECODE_EXTRA_INFO() {
        return (int)128L;
    }
    public static int Uri_CREATE_CRACK_UNKNOWN_SCHEMES() {
        return (int)512L;
    }
    public static int Uri_CREATE_NO_CRACK_UNKNOWN_SCHEMES() {
        return (int)1024L;
    }
    public static int Uri_CREATE_PRE_PROCESS_HTML_URI() {
        return (int)2048L;
    }
    public static int Uri_CREATE_NO_PRE_PROCESS_HTML_URI() {
        return (int)4096L;
    }
    public static int Uri_CREATE_IE_SETTINGS() {
        return (int)8192L;
    }
    public static int Uri_CREATE_NO_IE_SETTINGS() {
        return (int)16384L;
    }
    public static int Uri_CREATE_NO_ENCODE_FORBIDDEN_CHARACTERS() {
        return (int)32768L;
    }
    public static int Uri_CREATE_NORMALIZE_INTL_CHARACTERS() {
        return (int)65536L;
    }
    public static int Uri_CREATE_CANONICALIZE_ABSOLUTE() {
        return (int)131072L;
    }
    public static int Uri_DISPLAY_NO_FRAGMENT() {
        return (int)1L;
    }
    public static int Uri_PUNYCODE_IDN_HOST() {
        return (int)2L;
    }
    public static int Uri_DISPLAY_IDN_HOST() {
        return (int)4L;
    }
    public static int Uri_DISPLAY_NO_PUNYCODE() {
        return (int)8L;
    }
    public static int Uri_ENCODING_USER_INFO_AND_PATH_IS_PERCENT_ENCODED_UTF8() {
        return (int)1L;
    }
    public static int Uri_ENCODING_USER_INFO_AND_PATH_IS_CP() {
        return (int)2L;
    }
    public static int Uri_ENCODING_HOST_IS_IDN() {
        return (int)4L;
    }
    public static int Uri_ENCODING_HOST_IS_PERCENT_ENCODED_UTF8() {
        return (int)8L;
    }
    public static int Uri_ENCODING_HOST_IS_PERCENT_ENCODED_CP() {
        return (int)16L;
    }
    public static int Uri_ENCODING_QUERY_AND_FRAGMENT_IS_PERCENT_ENCODED_UTF8() {
        return (int)32L;
    }
    public static int Uri_ENCODING_QUERY_AND_FRAGMENT_IS_CP() {
        return (int)64L;
    }
    public static int UriBuilder_USE_ORIGINAL_FLAGS() {
        return (int)1L;
    }
    public static int WININETINFO_OPTION_LOCK_HANDLE() {
        return (int)65534L;
    }
    public static int URLOSTRM_USECACHEDCOPY_ONLY() {
        return (int)1L;
    }
    public static int URLOSTRM_USECACHEDCOPY() {
        return (int)2L;
    }
    public static int URLOSTRM_GETNEWESTVERSION() {
        return (int)3L;
    }
    public static int SET_FEATURE_ON_THREAD() {
        return (int)1L;
    }
    public static int SET_FEATURE_ON_PROCESS() {
        return (int)2L;
    }
    public static int SET_FEATURE_IN_REGISTRY() {
        return (int)4L;
    }
    public static int SET_FEATURE_ON_THREAD_LOCALMACHINE() {
        return (int)8L;
    }
    public static int SET_FEATURE_ON_THREAD_INTRANET() {
        return (int)16L;
    }
    public static int SET_FEATURE_ON_THREAD_TRUSTED() {
        return (int)32L;
    }
    public static int SET_FEATURE_ON_THREAD_INTERNET() {
        return (int)64L;
    }
    public static int SET_FEATURE_ON_THREAD_RESTRICTED() {
        return (int)128L;
    }
    public static int GET_FEATURE_FROM_THREAD() {
        return (int)1L;
    }
    public static int GET_FEATURE_FROM_PROCESS() {
        return (int)2L;
    }
    public static int GET_FEATURE_FROM_REGISTRY() {
        return (int)4L;
    }
    public static int GET_FEATURE_FROM_THREAD_LOCALMACHINE() {
        return (int)8L;
    }
    public static int GET_FEATURE_FROM_THREAD_INTRANET() {
        return (int)16L;
    }
    public static int GET_FEATURE_FROM_THREAD_TRUSTED() {
        return (int)32L;
    }
    public static int GET_FEATURE_FROM_THREAD_INTERNET() {
        return (int)64L;
    }
    public static int GET_FEATURE_FROM_THREAD_RESTRICTED() {
        return (int)128L;
    }
    public static int PROTOCOLFLAG_NO_PICS_CHECK() {
        return (int)1L;
    }
    public static int MUTZ_NOSAVEDFILECHECK() {
        return (int)1L;
    }
    public static int MUTZ_ISFILE() {
        return (int)2L;
    }
    public static int MUTZ_ACCEPT_WILDCARD_SCHEME() {
        return (int)128L;
    }
    public static int MUTZ_ENFORCERESTRICTED() {
        return (int)256L;
    }
    public static int MUTZ_RESERVED() {
        return (int)512L;
    }
    public static int MUTZ_REQUIRESAVEDFILECHECK() {
        return (int)1024L;
    }
    public static int MUTZ_DONT_UNESCAPE() {
        return (int)2048L;
    }
    public static int MUTZ_DONT_USE_CACHE() {
        return (int)4096L;
    }
    public static int MUTZ_FORCE_INTRANET_FLAGS() {
        return (int)8192L;
    }
    public static int MUTZ_IGNORE_ZONE_MAPPINGS() {
        return (int)16384L;
    }
    public static int MAX_SIZE_SECURITY_ID() {
        return (int)512L;
    }
    public static int URLACTION_MIN() {
        return (int)4096L;
    }
    public static int URLACTION_DOWNLOAD_MIN() {
        return (int)4096L;
    }
    public static int URLACTION_DOWNLOAD_SIGNED_ACTIVEX() {
        return (int)4097L;
    }
    public static int URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX() {
        return (int)4100L;
    }
    public static int URLACTION_DOWNLOAD_CURR_MAX() {
        return (int)4100L;
    }
    public static int URLACTION_DOWNLOAD_MAX() {
        return (int)4607L;
    }
    public static int URLACTION_ACTIVEX_MIN() {
        return (int)4608L;
    }
    public static int URLACTION_ACTIVEX_RUN() {
        return (int)4608L;
    }
    public static int URLPOLICY_ACTIVEX_CHECK_LIST() {
        return (int)65536L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY() {
        return (int)4609L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY() {
        return (int)4610L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY() {
        return (int)4611L;
    }
    public static int URLACTION_SCRIPT_OVERRIDE_SAFETY() {
        return (int)5121L;
    }
    public static int URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY() {
        return (int)4612L;
    }
    public static int URLACTION_ACTIVEX_TREATASUNTRUSTED() {
        return (int)4613L;
    }
    public static int URLACTION_ACTIVEX_NO_WEBOC_SCRIPT() {
        return (int)4614L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION() {
        return (int)4615L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_OPTIN() {
        return (int)4616L;
    }
    public static int URLACTION_ACTIVEX_SCRIPTLET_RUN() {
        return (int)4617L;
    }
    public static int URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION() {
        return (int)4618L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST() {
        return (int)4619L;
    }
    public static int URLACTION_ACTIVEX_ALLOW_TDC() {
        return (int)4620L;
    }
    public static int URLACTION_ACTIVEX_CURR_MAX() {
        return (int)4620L;
    }
    public static int URLACTION_ACTIVEX_MAX() {
        return (int)5119L;
    }
    public static int URLACTION_SCRIPT_MIN() {
        return (int)5120L;
    }
    public static int URLACTION_SCRIPT_RUN() {
        return (int)5120L;
    }
    public static int URLACTION_SCRIPT_JAVA_USE() {
        return (int)5122L;
    }
    public static int URLACTION_SCRIPT_SAFE_ACTIVEX() {
        return (int)5125L;
    }
    public static int URLACTION_CROSS_DOMAIN_DATA() {
        return (int)5126L;
    }
    public static int URLACTION_SCRIPT_PASTE() {
        return (int)5127L;
    }
    public static int URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE() {
        return (int)5128L;
    }
    public static int URLACTION_SCRIPT_XSSFILTER() {
        return (int)5129L;
    }
    public static int URLACTION_SCRIPT_NAVIGATE() {
        return (int)5130L;
    }
    public static int URLACTION_PLUGGABLE_PROTOCOL_XHR() {
        return (int)5131L;
    }
    public static int URLACTION_ALLOW_VBSCRIPT_IE() {
        return (int)5132L;
    }
    public static int URLACTION_ALLOW_JSCRIPT_IE() {
        return (int)5133L;
    }
    public static int URLACTION_SCRIPT_CURR_MAX() {
        return (int)5133L;
    }
    public static int URLACTION_SCRIPT_MAX() {
        return (int)5631L;
    }
    public static int URLACTION_HTML_MIN() {
        return (int)5632L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS() {
        return (int)5633L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS_FROM() {
        return (int)5634L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS_TO() {
        return (int)5635L;
    }
    public static int URLACTION_HTML_FONT_DOWNLOAD() {
        return (int)5636L;
    }
    public static int URLACTION_HTML_JAVA_RUN() {
        return (int)5637L;
    }
    public static int URLACTION_HTML_USERDATA_SAVE() {
        return (int)5638L;
    }
    public static int URLACTION_HTML_SUBFRAME_NAVIGATE() {
        return (int)5639L;
    }
    public static int URLACTION_HTML_META_REFRESH() {
        return (int)5640L;
    }
    public static int URLACTION_HTML_MIXED_CONTENT() {
        return (int)5641L;
    }
    public static int URLACTION_HTML_INCLUDE_FILE_PATH() {
        return (int)5642L;
    }
    public static int URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML() {
        return (int)5643L;
    }
    public static int URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE() {
        return (int)5644L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS() {
        return (int)5645L;
    }
    public static int URLACTION_HTML_ALLOW_WINDOW_CLOSE() {
        return (int)5646L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER() {
        return (int)5647L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK() {
        return (int)5648L;
    }
    public static int URLACTION_HTML_ALLOW_INDEXEDDB() {
        return (int)5649L;
    }
    public static int URLACTION_HTML_MAX() {
        return (int)6143L;
    }
    public static int URLACTION_SHELL_MIN() {
        return (int)6144L;
    }
    public static int URLACTION_SHELL_INSTALL_DTITEMS() {
        return (int)6144L;
    }
    public static int URLACTION_SHELL_MOVE_OR_COPY() {
        return (int)6146L;
    }
    public static int URLACTION_SHELL_FILE_DOWNLOAD() {
        return (int)6147L;
    }
    public static int URLACTION_SHELL_VERB() {
        return (int)6148L;
    }
    public static int URLACTION_SHELL_WEBVIEW_VERB() {
        return (int)6149L;
    }
    public static int URLACTION_SHELL_SHELLEXECUTE() {
        return (int)6150L;
    }
    public static int URLACTION_SHELL_EXECUTE_HIGHRISK() {
        return (int)6150L;
    }
    public static int URLACTION_SHELL_EXECUTE_MODRISK() {
        return (int)6151L;
    }
    public static int URLACTION_SHELL_EXECUTE_LOWRISK() {
        return (int)6152L;
    }
    public static int URLACTION_SHELL_POPUPMGR() {
        return (int)6153L;
    }
    public static int URLACTION_SHELL_RTF_OBJECTS_LOAD() {
        return (int)6154L;
    }
    public static int URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY() {
        return (int)6155L;
    }
    public static int URLACTION_SHELL_EXTENSIONSECURITY() {
        return (int)6156L;
    }
    public static int URLACTION_SHELL_SECURE_DRAGSOURCE() {
        return (int)6157L;
    }
    public static int URLACTION_SHELL_REMOTEQUERY() {
        return (int)6158L;
    }
    public static int URLACTION_SHELL_PREVIEW() {
        return (int)6159L;
    }
    public static int URLACTION_SHELL_SHARE() {
        return (int)6160L;
    }
    public static int URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE() {
        return (int)6161L;
    }
    public static int URLACTION_SHELL_TOCTOU_RISK() {
        return (int)6162L;
    }
    public static int URLACTION_SHELL_CURR_MAX() {
        return (int)6162L;
    }
    public static int URLACTION_SHELL_MAX() {
        return (int)6655L;
    }
    public static int URLACTION_NETWORK_MIN() {
        return (int)6656L;
    }
    public static int URLACTION_CREDENTIALS_USE() {
        return (int)6656L;
    }
    public static int URLPOLICY_CREDENTIALS_SILENT_LOGON_OK() {
        return (int)0L;
    }
    public static int URLPOLICY_CREDENTIALS_MUST_PROMPT_USER() {
        return (int)65536L;
    }
    public static int URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT() {
        return (int)131072L;
    }
    public static int URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY() {
        return (int)196608L;
    }
    public static int URLACTION_AUTHENTICATE_CLIENT() {
        return (int)6657L;
    }
    public static int URLPOLICY_AUTHENTICATE_CLEARTEXT_OK() {
        return (int)0L;
    }
    public static int URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE() {
        return (int)65536L;
    }
    public static int URLPOLICY_AUTHENTICATE_MUTUAL_ONLY() {
        return (int)196608L;
    }
    public static int URLACTION_COOKIES() {
        return (int)6658L;
    }
    public static int URLACTION_COOKIES_SESSION() {
        return (int)6659L;
    }
    public static int URLACTION_CLIENT_CERT_PROMPT() {
        return (int)6660L;
    }
    public static int URLACTION_COOKIES_THIRD_PARTY() {
        return (int)6661L;
    }
    public static int URLACTION_COOKIES_SESSION_THIRD_PARTY() {
        return (int)6662L;
    }
    public static int URLACTION_COOKIES_ENABLED() {
        return (int)6672L;
    }
    public static int URLACTION_NETWORK_CURR_MAX() {
        return (int)6672L;
    }
    public static int URLACTION_NETWORK_MAX() {
        return (int)7167L;
    }
    public static int URLACTION_JAVA_MIN() {
        return (int)7168L;
    }
    public static int URLACTION_JAVA_PERMISSIONS() {
        return (int)7168L;
    }
    public static int URLPOLICY_JAVA_PROHIBIT() {
        return (int)0L;
    }
    public static int URLPOLICY_JAVA_HIGH() {
        return (int)65536L;
    }
    public static int URLPOLICY_JAVA_MEDIUM() {
        return (int)131072L;
    }
    public static int URLPOLICY_JAVA_LOW() {
        return (int)196608L;
    }
    public static int URLPOLICY_JAVA_CUSTOM() {
        return (int)8388608L;
    }
    public static int URLACTION_JAVA_CURR_MAX() {
        return (int)7168L;
    }
    public static int URLACTION_JAVA_MAX() {
        return (int)7423L;
    }
    public static int URLACTION_INFODELIVERY_MIN() {
        return (int)7424L;
    }
    public static int URLACTION_INFODELIVERY_NO_ADDING_CHANNELS() {
        return (int)7424L;
    }
    public static int URLACTION_INFODELIVERY_NO_EDITING_CHANNELS() {
        return (int)7425L;
    }
    public static int URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS() {
        return (int)7426L;
    }
    public static int URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS() {
        return (int)7427L;
    }
    public static int URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS() {
        return (int)7428L;
    }
    public static int URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS() {
        return (int)7429L;
    }
    public static int URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING() {
        return (int)7430L;
    }
    public static int URLACTION_INFODELIVERY_CURR_MAX() {
        return (int)7430L;
    }
    public static int URLACTION_INFODELIVERY_MAX() {
        return (int)7679L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_MIN() {
        return (int)7680L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_PERMISSIONS() {
        return (int)7685L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT() {
        return (int)65536L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_PRECACHE() {
        return (int)131072L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL() {
        return (int)196608L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_MAX() {
        return (int)7935L;
    }
    public static int URLACTION_DOTNET_USERCONTROLS() {
        return (int)8197L;
    }
    public static int URLACTION_BEHAVIOR_MIN() {
        return (int)8192L;
    }
    public static int URLACTION_BEHAVIOR_RUN() {
        return (int)8192L;
    }
    public static int URLPOLICY_BEHAVIOR_CHECK_LIST() {
        return (int)65536L;
    }
    public static int URLACTION_FEATURE_MIN() {
        return (int)8448L;
    }
    public static int URLACTION_FEATURE_MIME_SNIFFING() {
        return (int)8448L;
    }
    public static int URLACTION_FEATURE_ZONE_ELEVATION() {
        return (int)8449L;
    }
    public static int URLACTION_FEATURE_WINDOW_RESTRICTIONS() {
        return (int)8450L;
    }
    public static int URLACTION_FEATURE_SCRIPT_STATUS_BAR() {
        return (int)8451L;
    }
    public static int URLACTION_FEATURE_FORCE_ADDR_AND_STATUS() {
        return (int)8452L;
    }
    public static int URLACTION_FEATURE_BLOCK_INPUT_PROMPTS() {
        return (int)8453L;
    }
    public static int URLACTION_FEATURE_DATA_BINDING() {
        return (int)8454L;
    }
    public static int URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE() {
        return (int)8455L;
    }
    public static int URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN() {
        return (int)8704L;
    }
    public static int URLACTION_AUTOMATIC_DOWNLOAD_UI() {
        return (int)8704L;
    }
    public static int URLACTION_AUTOMATIC_ACTIVEX_UI() {
        return (int)8705L;
    }
    public static int URLACTION_ALLOW_RESTRICTEDPROTOCOLS() {
        return (int)8960L;
    }
    public static int URLACTION_ALLOW_APEVALUATION() {
        return (int)8961L;
    }
    public static int URLACTION_ALLOW_XHR_EVALUATION() {
        return (int)8962L;
    }
    public static int URLACTION_WINDOWS_BROWSER_APPLICATIONS() {
        return (int)9216L;
    }
    public static int URLACTION_XPS_DOCUMENTS() {
        return (int)9217L;
    }
    public static int URLACTION_LOOSE_XAML() {
        return (int)9218L;
    }
    public static int URLACTION_LOWRIGHTS() {
        return (int)9472L;
    }
    public static int URLACTION_WINFX_SETUP() {
        return (int)9728L;
    }
    public static int URLACTION_INPRIVATE_BLOCKING() {
        return (int)9984L;
    }
    public static int URLACTION_ALLOW_AUDIO_VIDEO() {
        return (int)9985L;
    }
    public static int URLACTION_ALLOW_ACTIVEX_FILTERING() {
        return (int)9986L;
    }
    public static int URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING() {
        return (int)9987L;
    }
    public static int URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS() {
        return (int)9988L;
    }
    public static int URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT() {
        return (int)9989L;
    }
    public static int URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION() {
        return (int)9990L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW() {
        return (int)9992L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS() {
        return (int)9993L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST() {
        return (int)9994L;
    }
    public static int URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS() {
        return (int)9995L;
    }
    public static int URLACTION_ALLOW_ANTIMALWARE_SCANNING_OF_ACTIVEX() {
        return (int)9996L;
    }
    public static int URLACTION_ALLOW_CSS_EXPRESSIONS() {
        return (int)9997L;
    }
    public static int URLPOLICY_ALLOW() {
        return (int)0L;
    }
    public static int URLPOLICY_QUERY() {
        return (int)1L;
    }
    public static int URLPOLICY_DISALLOW() {
        return (int)3L;
    }
    public static int URLPOLICY_NOTIFY_ON_ALLOW() {
        return (int)16L;
    }
    public static int URLPOLICY_NOTIFY_ON_DISALLOW() {
        return (int)32L;
    }
    public static int URLPOLICY_LOG_ON_ALLOW() {
        return (int)64L;
    }
    public static int URLPOLICY_LOG_ON_DISALLOW() {
        return (int)128L;
    }
    public static int URLPOLICY_MASK_PERMISSIONS() {
        return (int)15L;
    }
    public static int URLPOLICY_DONTCHECKDLGBOX() {
        return (int)256L;
    }
    public static int URLZONE_ESC_FLAG() {
        return (int)256L;
    }
    public static int SECURITY_IE_STATE_GREEN() {
        return (int)0L;
    }
    public static int SECURITY_IE_STATE_RED() {
        return (int)1L;
    }
    public static int SOFTDIST_FLAG_USAGE_EMAIL() {
        return (int)1L;
    }
    public static int SOFTDIST_FLAG_USAGE_PRECACHE() {
        return (int)2L;
    }
    public static int SOFTDIST_FLAG_USAGE_AUTOINSTALL() {
        return (int)4L;
    }
    public static int SOFTDIST_FLAG_DELETE_SUBSCRIPTION() {
        return (int)8L;
    }
    public static int SOFTDIST_ADSTATE_NONE() {
        return (int)0L;
    }
    public static int SOFTDIST_ADSTATE_AVAILABLE() {
        return (int)1L;
    }
    public static int SOFTDIST_ADSTATE_DOWNLOADED() {
        return (int)2L;
    }
    public static int SOFTDIST_ADSTATE_INSTALLED() {
        return (int)3L;
    }
    public static int CONFIRMSAFETYACTION_LOADOBJECT() {
        return (int)1L;
    }
    public static int PIDDSI_CATEGORY() {
        return (int)2L;
    }
    public static int PIDDSI_PRESFORMAT() {
        return (int)3L;
    }
    public static int PIDDSI_BYTECOUNT() {
        return (int)4L;
    }
    public static int PIDDSI_LINECOUNT() {
        return (int)5L;
    }
    public static int PIDDSI_PARCOUNT() {
        return (int)6L;
    }
    public static int PIDDSI_SLIDECOUNT() {
        return (int)7L;
    }
    public static int PIDDSI_NOTECOUNT() {
        return (int)8L;
    }
    public static int PIDDSI_HIDDENCOUNT() {
        return (int)9L;
    }
    public static int PIDDSI_MMCLIPCOUNT() {
        return (int)10L;
    }
    public static int PIDDSI_SCALE() {
        return (int)11L;
    }
    public static int PIDDSI_HEADINGPAIR() {
        return (int)12L;
    }
    public static int PIDDSI_DOCPARTS() {
        return (int)13L;
    }
    public static int PIDDSI_MANAGER() {
        return (int)14L;
    }
    public static int PIDDSI_COMPANY() {
        return (int)15L;
    }
    public static int PIDDSI_LINKSDIRTY() {
        return (int)16L;
    }
    public static int STDOLE_MAJORVERNUM() {
        return (int)1L;
    }
    public static int STDOLE_MINORVERNUM() {
        return (int)0L;
    }
    public static int STDOLE_LCID() {
        return (int)0L;
    }
    public static int STDOLE2_MAJORVERNUM() {
        return (int)2L;
    }
    public static int STDOLE2_MINORVERNUM() {
        return (int)0L;
    }
    public static int STDOLE2_LCID() {
        return (int)0L;
    }
    public static int VARIANT_NOVALUEPROP() {
        return (int)1L;
    }
    public static int VARIANT_ALPHABOOL() {
        return (int)2L;
    }
    public static int VARIANT_NOUSEROVERRIDE() {
        return (int)4L;
    }
    public static int VARIANT_CALENDAR_HIJRI() {
        return (int)8L;
    }
    public static int VARIANT_LOCALBOOL() {
        return (int)16L;
    }
    public static int VARIANT_CALENDAR_THAI() {
        return (int)32L;
    }
    public static int VARIANT_CALENDAR_GREGORIAN() {
        return (int)64L;
    }
    public static int VARIANT_USE_NLS() {
        return (int)128L;
    }
    public static int LOCALE_USE_NLS() {
        return (int)268435456L;
    }
    public static int VTDATEGRE_MAX() {
        return (int)2958465L;
    }
    public static int NUMPRS_LEADING_WHITE() {
        return (int)1L;
    }
    public static int NUMPRS_TRAILING_WHITE() {
        return (int)2L;
    }
    public static int NUMPRS_LEADING_PLUS() {
        return (int)4L;
    }
    public static int NUMPRS_TRAILING_PLUS() {
        return (int)8L;
    }
    public static int NUMPRS_LEADING_MINUS() {
        return (int)16L;
    }
    public static int NUMPRS_TRAILING_MINUS() {
        return (int)32L;
    }
    public static int NUMPRS_HEX_OCT() {
        return (int)64L;
    }
    public static int NUMPRS_PARENS() {
        return (int)128L;
    }
    public static int NUMPRS_DECIMAL() {
        return (int)256L;
    }
    public static int NUMPRS_THOUSANDS() {
        return (int)512L;
    }
    public static int NUMPRS_CURRENCY() {
        return (int)1024L;
    }
    public static int NUMPRS_EXPONENT() {
        return (int)2048L;
    }
    public static int NUMPRS_USE_ALL() {
        return (int)4096L;
    }
    public static int NUMPRS_STD() {
        return (int)8191L;
    }
    public static int NUMPRS_NEG() {
        return (int)65536L;
    }
    public static int NUMPRS_INEXACT() {
        return (int)131072L;
    }
    public static int VARCMP_LT() {
        return (int)0L;
    }
    public static int VARCMP_EQ() {
        return (int)1L;
    }
    public static int VARCMP_GT() {
        return (int)2L;
    }
    public static int VARCMP_NULL() {
        return (int)3L;
    }
    public static int DISPATCH_METHOD() {
        return (int)1L;
    }
    public static int DISPATCH_PROPERTYGET() {
        return (int)2L;
    }
    public static int DISPATCH_PROPERTYPUT() {
        return (int)4L;
    }
    public static int DISPATCH_PROPERTYPUTREF() {
        return (int)8L;
    }
    public static int LOAD_TLB_AS_32BIT() {
        return (int)32L;
    }
    public static int LOAD_TLB_AS_64BIT() {
        return (int)64L;
    }
    public static int ACTIVEOBJECT_STRONG() {
        return (int)0L;
    }
    public static int ACTIVEOBJECT_WEAK() {
        return (int)1L;
    }
    public static int OLECREATE_LEAVERUNNING() {
        return (int)1L;
    }
    public static int OFN_READONLY() {
        return (int)1L;
    }
    public static int OFN_OVERWRITEPROMPT() {
        return (int)2L;
    }
    public static int OFN_HIDEREADONLY() {
        return (int)4L;
    }
    public static int OFN_NOCHANGEDIR() {
        return (int)8L;
    }
    public static int OFN_SHOWHELP() {
        return (int)16L;
    }
    public static int OFN_ENABLEHOOK() {
        return (int)32L;
    }
    public static int OFN_ENABLETEMPLATE() {
        return (int)64L;
    }
    public static int OFN_ENABLETEMPLATEHANDLE() {
        return (int)128L;
    }
    public static int OFN_NOVALIDATE() {
        return (int)256L;
    }
    public static int OFN_ALLOWMULTISELECT() {
        return (int)512L;
    }
    public static int OFN_EXTENSIONDIFFERENT() {
        return (int)1024L;
    }
    public static int OFN_PATHMUSTEXIST() {
        return (int)2048L;
    }
    public static int OFN_FILEMUSTEXIST() {
        return (int)4096L;
    }
    public static int OFN_CREATEPROMPT() {
        return (int)8192L;
    }
    public static int OFN_SHAREAWARE() {
        return (int)16384L;
    }
    public static int OFN_NOREADONLYRETURN() {
        return (int)32768L;
    }
    public static int OFN_NOTESTFILECREATE() {
        return (int)65536L;
    }
    public static int OFN_NONETWORKBUTTON() {
        return (int)131072L;
    }
    public static int OFN_NOLONGNAMES() {
        return (int)262144L;
    }
    public static int OFN_EXPLORER() {
        return (int)524288L;
    }
    public static int OFN_NODEREFERENCELINKS() {
        return (int)1048576L;
    }
    public static int OFN_LONGNAMES() {
        return (int)2097152L;
    }
    public static int OFN_ENABLEINCLUDENOTIFY() {
        return (int)4194304L;
    }
    public static int OFN_ENABLESIZING() {
        return (int)8388608L;
    }
    public static int OFN_DONTADDTORECENT() {
        return (int)33554432L;
    }
    public static int OFN_FORCESHOWHIDDEN() {
        return (int)268435456L;
    }
    public static int OFN_EX_NOPLACESBAR() {
        return (int)1L;
    }
    public static int OFN_SHAREFALLTHROUGH() {
        return (int)2L;
    }
    public static int OFN_SHARENOWARN() {
        return (int)1L;
    }
    public static int OFN_SHAREWARN() {
        return (int)0L;
    }
    public static int CC_RGBINIT() {
        return (int)1L;
    }
    public static int CC_FULLOPEN() {
        return (int)2L;
    }
    public static int CC_PREVENTFULLOPEN() {
        return (int)4L;
    }
    public static int CC_SHOWHELP() {
        return (int)8L;
    }
    public static int CC_ENABLEHOOK() {
        return (int)16L;
    }
    public static int CC_ENABLETEMPLATE() {
        return (int)32L;
    }
    public static int CC_ENABLETEMPLATEHANDLE() {
        return (int)64L;
    }
    public static int CC_SOLIDCOLOR() {
        return (int)128L;
    }
    public static int CC_ANYCOLOR() {
        return (int)256L;
    }
    public static int FR_DOWN() {
        return (int)1L;
    }
    public static int FR_WHOLEWORD() {
        return (int)2L;
    }
    public static int FR_MATCHCASE() {
        return (int)4L;
    }
    public static int FR_FINDNEXT() {
        return (int)8L;
    }
    public static int FR_REPLACE() {
        return (int)16L;
    }
    public static int FR_REPLACEALL() {
        return (int)32L;
    }
    public static int FR_DIALOGTERM() {
        return (int)64L;
    }
    public static int FR_SHOWHELP() {
        return (int)128L;
    }
    public static int FR_ENABLEHOOK() {
        return (int)256L;
    }
    public static int FR_ENABLETEMPLATE() {
        return (int)512L;
    }
    public static int FR_NOUPDOWN() {
        return (int)1024L;
    }
    public static int FR_NOMATCHCASE() {
        return (int)2048L;
    }
    public static int FR_NOWHOLEWORD() {
        return (int)4096L;
    }
    public static int FR_ENABLETEMPLATEHANDLE() {
        return (int)8192L;
    }
    public static int FR_HIDEUPDOWN() {
        return (int)16384L;
    }
    public static int FR_HIDEMATCHCASE() {
        return (int)32768L;
    }
    public static int FR_HIDEWHOLEWORD() {
        return (int)65536L;
    }
    public static int FR_RAW() {
        return (int)131072L;
    }
    public static int FR_SHOWWRAPAROUND() {
        return (int)262144L;
    }
    public static int FR_NOWRAPAROUND() {
        return (int)524288L;
    }
    public static int FR_WRAPAROUND() {
        return (int)1048576L;
    }
    public static int FR_MATCHDIAC() {
        return (int)536870912L;
    }
    public static int FR_MATCHKASHIDA() {
        return (int)1073741824L;
    }
    public static int CF_SCREENFONTS() {
        return (int)1L;
    }
    public static int CF_PRINTERFONTS() {
        return (int)2L;
    }
    public static int SIMULATED_FONTTYPE() {
        return (int)32768L;
    }
    public static int PRINTER_FONTTYPE() {
        return (int)16384L;
    }
    public static int SCREEN_FONTTYPE() {
        return (int)8192L;
    }
    public static int BOLD_FONTTYPE() {
        return (int)256L;
    }
    public static int ITALIC_FONTTYPE() {
        return (int)512L;
    }
    public static int REGULAR_FONTTYPE() {
        return (int)1024L;
    }
    public static int PS_OPENTYPE_FONTTYPE() {
        return (int)65536L;
    }
    public static int TT_OPENTYPE_FONTTYPE() {
        return (int)131072L;
    }
    public static int TYPE1_FONTTYPE() {
        return (int)262144L;
    }
    public static int SYMBOL_FONTTYPE() {
        return (int)524288L;
    }
    public static int CD_LBSELCHANGE() {
        return (int)0L;
    }
    public static int CD_LBSELSUB() {
        return (int)1L;
    }
    public static int CD_LBSELADD() {
        return (int)2L;
    }
    public static int PD_ALLPAGES() {
        return (int)0L;
    }
    public static int PD_SELECTION() {
        return (int)1L;
    }
    public static int PD_PAGENUMS() {
        return (int)2L;
    }
    public static int PD_NOSELECTION() {
        return (int)4L;
    }
    public static int PD_NOPAGENUMS() {
        return (int)8L;
    }
    public static int PD_COLLATE() {
        return (int)16L;
    }
    public static int PD_PRINTTOFILE() {
        return (int)32L;
    }
    public static int PD_PRINTSETUP() {
        return (int)64L;
    }
    public static int PD_NOWARNING() {
        return (int)128L;
    }
    public static int PD_RETURNDC() {
        return (int)256L;
    }
    public static int PD_RETURNIC() {
        return (int)512L;
    }
    public static int PD_RETURNDEFAULT() {
        return (int)1024L;
    }
    public static int PD_SHOWHELP() {
        return (int)2048L;
    }
    public static int PD_ENABLEPRINTHOOK() {
        return (int)4096L;
    }
    public static int PD_ENABLESETUPHOOK() {
        return (int)8192L;
    }
    public static int PD_ENABLEPRINTTEMPLATE() {
        return (int)16384L;
    }
    public static int PD_ENABLESETUPTEMPLATE() {
        return (int)32768L;
    }
    public static int PD_ENABLEPRINTTEMPLATEHANDLE() {
        return (int)65536L;
    }
    public static int PD_ENABLESETUPTEMPLATEHANDLE() {
        return (int)131072L;
    }
    public static int PD_USEDEVMODECOPIES() {
        return (int)262144L;
    }
    public static int PD_USEDEVMODECOPIESANDCOLLATE() {
        return (int)262144L;
    }
    public static int PD_DISABLEPRINTTOFILE() {
        return (int)524288L;
    }
    public static int PD_HIDEPRINTTOFILE() {
        return (int)1048576L;
    }
    public static int PD_NONETWORKBUTTON() {
        return (int)2097152L;
    }
    public static int PD_CURRENTPAGE() {
        return (int)4194304L;
    }
    public static int PD_NOCURRENTPAGE() {
        return (int)8388608L;
    }
    public static int PD_EXCLUSIONFLAGS() {
        return (int)16777216L;
    }
    public static int PD_USELARGETEMPLATE() {
        return (int)268435456L;
    }
    public static int PD_RESULT_CANCEL() {
        return (int)0L;
    }
    public static int PD_RESULT_PRINT() {
        return (int)1L;
    }
    public static int PD_RESULT_APPLY() {
        return (int)2L;
    }
    public static int DN_DEFAULTPRN() {
        return (int)1L;
    }
    public static int PSD_DEFAULTMINMARGINS() {
        return (int)0L;
    }
    public static int PSD_INWININIINTLMEASURE() {
        return (int)0L;
    }
    public static int PSD_MINMARGINS() {
        return (int)1L;
    }
    public static int PSD_MARGINS() {
        return (int)2L;
    }
    public static int PSD_INTHOUSANDTHSOFINCHES() {
        return (int)4L;
    }
    public static int PSD_INHUNDREDTHSOFMILLIMETERS() {
        return (int)8L;
    }
    public static int PSD_DISABLEMARGINS() {
        return (int)16L;
    }
    public static int PSD_DISABLEPRINTER() {
        return (int)32L;
    }
    public static int PSD_NOWARNING() {
        return (int)128L;
    }
    public static int PSD_DISABLEORIENTATION() {
        return (int)256L;
    }
    public static int PSD_RETURNDEFAULT() {
        return (int)1024L;
    }
    public static int PSD_DISABLEPAPER() {
        return (int)512L;
    }
    public static int PSD_SHOWHELP() {
        return (int)2048L;
    }
    public static int PSD_ENABLEPAGESETUPHOOK() {
        return (int)8192L;
    }
    public static int PSD_ENABLEPAGESETUPTEMPLATE() {
        return (int)32768L;
    }
    public static int PSD_ENABLEPAGESETUPTEMPLATEHANDLE() {
        return (int)131072L;
    }
    public static int PSD_ENABLEPAGEPAINTHOOK() {
        return (int)262144L;
    }
    public static int PSD_DISABLEPAGEPAINTING() {
        return (int)524288L;
    }
    public static int PSD_NONETWORKBUTTON() {
        return (int)2097152L;
    }
    public static int _STRALIGN_USE_SECURE_CRT() {
        return (int)1L;
    }
    public static int SERVICE_ACTIVE() {
        return (int)1L;
    }
    public static int SERVICE_INACTIVE() {
        return (int)2L;
    }
    public static int SERVICE_CONTROL_STOP() {
        return (int)1L;
    }
    public static int SERVICE_CONTROL_PAUSE() {
        return (int)2L;
    }
    public static int SERVICE_CONTROL_CONTINUE() {
        return (int)3L;
    }
    public static int SERVICE_CONTROL_INTERROGATE() {
        return (int)4L;
    }
    public static int SERVICE_CONTROL_SHUTDOWN() {
        return (int)5L;
    }
    public static int SERVICE_CONTROL_PARAMCHANGE() {
        return (int)6L;
    }
    public static int SERVICE_CONTROL_NETBINDADD() {
        return (int)7L;
    }
    public static int SERVICE_CONTROL_NETBINDREMOVE() {
        return (int)8L;
    }
    public static int SERVICE_CONTROL_NETBINDENABLE() {
        return (int)9L;
    }
    public static int SERVICE_CONTROL_NETBINDDISABLE() {
        return (int)10L;
    }
    public static int SERVICE_CONTROL_DEVICEEVENT() {
        return (int)11L;
    }
    public static int SERVICE_CONTROL_HARDWAREPROFILECHANGE() {
        return (int)12L;
    }
    public static int SERVICE_CONTROL_POWEREVENT() {
        return (int)13L;
    }
    public static int SERVICE_CONTROL_SESSIONCHANGE() {
        return (int)14L;
    }
    public static int SERVICE_CONTROL_PRESHUTDOWN() {
        return (int)15L;
    }
    public static int SERVICE_CONTROL_TIMECHANGE() {
        return (int)16L;
    }
    public static int SERVICE_CONTROL_TRIGGEREVENT() {
        return (int)32L;
    }
    public static int SERVICE_CONTROL_LOWRESOURCES() {
        return (int)96L;
    }
    public static int SERVICE_CONTROL_SYSTEMLOWRESOURCES() {
        return (int)97L;
    }
    public static int SERVICE_STOPPED() {
        return (int)1L;
    }
    public static int SERVICE_START_PENDING() {
        return (int)2L;
    }
    public static int SERVICE_STOP_PENDING() {
        return (int)3L;
    }
    public static int SERVICE_RUNNING() {
        return (int)4L;
    }
    public static int SERVICE_CONTINUE_PENDING() {
        return (int)5L;
    }
    public static int SERVICE_PAUSE_PENDING() {
        return (int)6L;
    }
    public static int SERVICE_PAUSED() {
        return (int)7L;
    }
    public static int SERVICE_ACCEPT_STOP() {
        return (int)1L;
    }
    public static int SERVICE_ACCEPT_PAUSE_CONTINUE() {
        return (int)2L;
    }
    public static int SERVICE_ACCEPT_SHUTDOWN() {
        return (int)4L;
    }
    public static int SERVICE_ACCEPT_PARAMCHANGE() {
        return (int)8L;
    }
    public static int SERVICE_ACCEPT_NETBINDCHANGE() {
        return (int)16L;
    }
    public static int SERVICE_ACCEPT_HARDWAREPROFILECHANGE() {
        return (int)32L;
    }
    public static int SERVICE_ACCEPT_POWEREVENT() {
        return (int)64L;
    }
    public static int SERVICE_ACCEPT_SESSIONCHANGE() {
        return (int)128L;
    }
    public static int SERVICE_ACCEPT_PRESHUTDOWN() {
        return (int)256L;
    }
    public static int SERVICE_ACCEPT_TIMECHANGE() {
        return (int)512L;
    }
    public static int SERVICE_ACCEPT_TRIGGEREVENT() {
        return (int)1024L;
    }
    public static int SERVICE_ACCEPT_USER_LOGOFF() {
        return (int)2048L;
    }
    public static int SERVICE_ACCEPT_LOWRESOURCES() {
        return (int)8192L;
    }
    public static int SERVICE_ACCEPT_SYSTEMLOWRESOURCES() {
        return (int)16384L;
    }
    public static int SC_MANAGER_CONNECT() {
        return (int)1L;
    }
    public static int SC_MANAGER_CREATE_SERVICE() {
        return (int)2L;
    }
    public static int SC_MANAGER_ENUMERATE_SERVICE() {
        return (int)4L;
    }
    public static int SC_MANAGER_LOCK() {
        return (int)8L;
    }
    public static int SC_MANAGER_QUERY_LOCK_STATUS() {
        return (int)16L;
    }
    public static int SC_MANAGER_MODIFY_BOOT_CONFIG() {
        return (int)32L;
    }
    public static int SERVICE_QUERY_CONFIG() {
        return (int)1L;
    }
    public static int SERVICE_CHANGE_CONFIG() {
        return (int)2L;
    }
    public static int SERVICE_QUERY_STATUS() {
        return (int)4L;
    }
    public static int SERVICE_ENUMERATE_DEPENDENTS() {
        return (int)8L;
    }
    public static int SERVICE_START() {
        return (int)16L;
    }
    public static int SERVICE_STOP() {
        return (int)32L;
    }
    public static int SERVICE_PAUSE_CONTINUE() {
        return (int)64L;
    }
    public static int SERVICE_INTERROGATE() {
        return (int)128L;
    }
    public static int SERVICE_USER_DEFINED_CONTROL() {
        return (int)256L;
    }
    public static int SERVICE_RUNS_IN_SYSTEM_PROCESS() {
        return (int)1L;
    }
    public static int SERVICE_CONFIG_DESCRIPTION() {
        return (int)1L;
    }
    public static int SERVICE_CONFIG_FAILURE_ACTIONS() {
        return (int)2L;
    }
    public static int SERVICE_CONFIG_DELAYED_AUTO_START_INFO() {
        return (int)3L;
    }
    public static int SERVICE_CONFIG_FAILURE_ACTIONS_FLAG() {
        return (int)4L;
    }
    public static int SERVICE_CONFIG_SERVICE_SID_INFO() {
        return (int)5L;
    }
    public static int SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO() {
        return (int)6L;
    }
    public static int SERVICE_CONFIG_PRESHUTDOWN_INFO() {
        return (int)7L;
    }
    public static int SERVICE_CONFIG_TRIGGER_INFO() {
        return (int)8L;
    }
    public static int SERVICE_CONFIG_PREFERRED_NODE() {
        return (int)9L;
    }
    public static int SERVICE_CONFIG_LAUNCH_PROTECTED() {
        return (int)12L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE_1() {
        return (int)1L;
    }
    public static int SERVICE_NOTIFY_STATUS_CHANGE_2() {
        return (int)2L;
    }
    public static int SERVICE_NOTIFY_STOPPED() {
        return (int)1L;
    }
    public static int SERVICE_NOTIFY_START_PENDING() {
        return (int)2L;
    }
    public static int SERVICE_NOTIFY_STOP_PENDING() {
        return (int)4L;
    }
    public static int SERVICE_NOTIFY_RUNNING() {
        return (int)8L;
    }
    public static int SERVICE_NOTIFY_CONTINUE_PENDING() {
        return (int)16L;
    }
    public static int SERVICE_NOTIFY_PAUSE_PENDING() {
        return (int)32L;
    }
    public static int SERVICE_NOTIFY_PAUSED() {
        return (int)64L;
    }
    public static int SERVICE_NOTIFY_CREATED() {
        return (int)128L;
    }
    public static int SERVICE_NOTIFY_DELETED() {
        return (int)256L;
    }
    public static int SERVICE_NOTIFY_DELETE_PENDING() {
        return (int)512L;
    }
    public static int SERVICE_STOP_REASON_FLAG_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_FLAG_UNPLANNED() {
        return (int)268435456L;
    }
    public static int SERVICE_STOP_REASON_FLAG_CUSTOM() {
        return (int)536870912L;
    }
    public static int SERVICE_STOP_REASON_FLAG_PLANNED() {
        return (int)1073741824L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_OTHER() {
        return (int)65536L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_HARDWARE() {
        return (int)131072L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM() {
        return (int)196608L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_SOFTWARE() {
        return (int)262144L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_APPLICATION() {
        return (int)327680L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_NONE() {
        return (int)393216L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MAX() {
        return (int)458752L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM() {
        return (int)4194304L;
    }
    public static int SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM() {
        return (int)16711680L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MIN() {
        return (int)0L;
    }
    public static int SERVICE_STOP_REASON_MINOR_OTHER() {
        return (int)1L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAINTENANCE() {
        return (int)2L;
    }
    public static int SERVICE_STOP_REASON_MINOR_INSTALLATION() {
        return (int)3L;
    }
    public static int SERVICE_STOP_REASON_MINOR_UPGRADE() {
        return (int)4L;
    }
    public static int SERVICE_STOP_REASON_MINOR_RECONFIG() {
        return (int)5L;
    }
    public static int SERVICE_STOP_REASON_MINOR_HUNG() {
        return (int)6L;
    }
    public static int SERVICE_STOP_REASON_MINOR_UNSTABLE() {
        return (int)7L;
    }
    public static int SERVICE_STOP_REASON_MINOR_DISK() {
        return (int)8L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NETWORKCARD() {
        return (int)9L;
    }
    public static int SERVICE_STOP_REASON_MINOR_ENVIRONMENT() {
        return (int)10L;
    }
    public static int SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER() {
        return (int)11L;
    }
    public static int SERVICE_STOP_REASON_MINOR_OTHERDRIVER() {
        return (int)12L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SERVICEPACK() {
        return (int)13L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE() {
        return (int)14L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITYFIX() {
        return (int)15L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITY() {
        return (int)16L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY() {
        return (int)17L;
    }
    public static int SERVICE_STOP_REASON_MINOR_WMI() {
        return (int)18L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL() {
        return (int)19L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL() {
        return (int)20L;
    }
    public static int SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL() {
        return (int)21L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MMC() {
        return (int)22L;
    }
    public static int SERVICE_STOP_REASON_MINOR_NONE() {
        return (int)23L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT() {
        return (int)24L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAX() {
        return (int)25L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MIN_CUSTOM() {
        return (int)256L;
    }
    public static int SERVICE_STOP_REASON_MINOR_MAX_CUSTOM() {
        return (int)65535L;
    }
    public static int SERVICE_CONTROL_STATUS_REASON_INFO() {
        return (int)1L;
    }
    public static int SERVICE_SID_TYPE_NONE() {
        return (int)0L;
    }
    public static int SERVICE_SID_TYPE_UNRESTRICTED() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY() {
        return (int)2L;
    }
    public static int SERVICE_TRIGGER_TYPE_DOMAIN_JOIN() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT() {
        return (int)4L;
    }
    public static int SERVICE_TRIGGER_TYPE_GROUP_POLICY() {
        return (int)5L;
    }
    public static int SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT() {
        return (int)6L;
    }
    public static int SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE() {
        return (int)7L;
    }
    public static int SERVICE_TRIGGER_TYPE_CUSTOM() {
        return (int)20L;
    }
    public static int SERVICE_TRIGGER_TYPE_AGGREGATE() {
        return (int)30L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_BINARY() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_STRING() {
        return (int)2L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_LEVEL() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY() {
        return (int)4L;
    }
    public static int SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL() {
        return (int)5L;
    }
    public static int SERVICE_START_REASON_DEMAND() {
        return (int)1L;
    }
    public static int SERVICE_START_REASON_AUTO() {
        return (int)2L;
    }
    public static int SERVICE_START_REASON_TRIGGER() {
        return (int)4L;
    }
    public static int SERVICE_START_REASON_RESTART_ON_FAILURE() {
        return (int)8L;
    }
    public static int SERVICE_START_REASON_DELAYEDAUTO() {
        return (int)16L;
    }
    public static int SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON() {
        return (int)1L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_NONE() {
        return (int)0L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_WINDOWS() {
        return (int)1L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT() {
        return (int)2L;
    }
    public static int SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT() {
        return (int)3L;
    }
    public static int SERVICE_TRIGGER_ACTION_SERVICE_START() {
        return (int)1L;
    }
    public static int SERVICE_TRIGGER_ACTION_SERVICE_STOP() {
        return (int)2L;
    }
    public static int DIALOPTION_BILLING() {
        return (int)64L;
    }
    public static int DIALOPTION_QUIET() {
        return (int)128L;
    }
    public static int DIALOPTION_DIALTONE() {
        return (int)256L;
    }
    public static int MDMVOLFLAG_LOW() {
        return (int)1L;
    }
    public static int MDMVOLFLAG_MEDIUM() {
        return (int)2L;
    }
    public static int MDMVOLFLAG_HIGH() {
        return (int)4L;
    }
    public static int MDMVOL_LOW() {
        return (int)0L;
    }
    public static int MDMVOL_MEDIUM() {
        return (int)1L;
    }
    public static int MDMVOL_HIGH() {
        return (int)2L;
    }
    public static int MDMSPKRFLAG_OFF() {
        return (int)1L;
    }
    public static int MDMSPKRFLAG_DIAL() {
        return (int)2L;
    }
    public static int MDMSPKRFLAG_ON() {
        return (int)4L;
    }
    public static int MDMSPKRFLAG_CALLSETUP() {
        return (int)8L;
    }
    public static int MDMSPKR_OFF() {
        return (int)0L;
    }
    public static int MDMSPKR_DIAL() {
        return (int)1L;
    }
    public static int MDMSPKR_ON() {
        return (int)2L;
    }
    public static int MDMSPKR_CALLSETUP() {
        return (int)3L;
    }
    public static int MDM_COMPRESSION() {
        return (int)1L;
    }
    public static int MDM_ERROR_CONTROL() {
        return (int)2L;
    }
    public static int MDM_FORCED_EC() {
        return (int)4L;
    }
    public static int MDM_CELLULAR() {
        return (int)8L;
    }
    public static int MDM_FLOWCONTROL_HARD() {
        return (int)16L;
    }
    public static int MDM_FLOWCONTROL_SOFT() {
        return (int)32L;
    }
    public static int MDM_CCITT_OVERRIDE() {
        return (int)64L;
    }
    public static int MDM_SPEED_ADJUST() {
        return (int)128L;
    }
    public static int MDM_TONE_DIAL() {
        return (int)256L;
    }
    public static int MDM_BLIND_DIAL() {
        return (int)512L;
    }
    public static int MDM_V23_OVERRIDE() {
        return (int)1024L;
    }
    public static int MDM_DIAGNOSTICS() {
        return (int)2048L;
    }
    public static int MDM_MASK_BEARERMODE() {
        return (int)61440L;
    }
    public static int MDM_SHIFT_BEARERMODE() {
        return (int)12L;
    }
    public static int MDM_MASK_PROTOCOLID() {
        return (int)983040L;
    }
    public static int MDM_SHIFT_PROTOCOLID() {
        return (int)16L;
    }
    public static int MDM_MASK_PROTOCOLDATA() {
        return (int)267386880L;
    }
    public static int MDM_SHIFT_PROTOCOLDATA() {
        return (int)20L;
    }
    public static int MDM_BEARERMODE_ANALOG() {
        return (int)0L;
    }
    public static int MDM_BEARERMODE_ISDN() {
        return (int)1L;
    }
    public static int MDM_BEARERMODE_GSM() {
        return (int)2L;
    }
    public static int MDM_PROTOCOLID_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_PROTOCOLID_HDLCPPP() {
        return (int)1L;
    }
    public static int MDM_PROTOCOLID_V128() {
        return (int)2L;
    }
    public static int MDM_PROTOCOLID_X75() {
        return (int)3L;
    }
    public static int MDM_PROTOCOLID_V110() {
        return (int)4L;
    }
    public static int MDM_PROTOCOLID_V120() {
        return (int)5L;
    }
    public static int MDM_PROTOCOLID_AUTO() {
        return (int)6L;
    }
    public static int MDM_PROTOCOLID_ANALOG() {
        return (int)7L;
    }
    public static int MDM_PROTOCOLID_GPRS() {
        return (int)8L;
    }
    public static int MDM_PROTOCOLID_PIAFS() {
        return (int)9L;
    }
    public static int MDM_SHIFT_HDLCPPP_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_HDLCPPP_SPEED() {
        return (int)7L;
    }
    public static int MDM_HDLCPPP_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_SPEED_64K() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_SPEED_56K() {
        return (int)2L;
    }
    public static int MDM_SHIFT_HDLCPPP_AUTH() {
        return (int)3L;
    }
    public static int MDM_HDLCPPP_AUTH_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_AUTH_NONE() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_AUTH_PAP() {
        return (int)2L;
    }
    public static int MDM_HDLCPPP_AUTH_CHAP() {
        return (int)3L;
    }
    public static int MDM_HDLCPPP_AUTH_MSCHAP() {
        return (int)4L;
    }
    public static int MDM_SHIFT_HDLCPPP_ML() {
        return (int)6L;
    }
    public static int MDM_HDLCPPP_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_HDLCPPP_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_HDLCPPP_ML_2() {
        return (int)2L;
    }
    public static int MDM_SHIFT_V120_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_V120_SPEED() {
        return (int)7L;
    }
    public static int MDM_V120_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V120_SPEED_64K() {
        return (int)1L;
    }
    public static int MDM_V120_SPEED_56K() {
        return (int)2L;
    }
    public static int MDM_SHIFT_V120_ML() {
        return (int)6L;
    }
    public static int MDM_V120_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V120_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_V120_ML_2() {
        return (int)2L;
    }
    public static int MDM_SHIFT_X75_DATA() {
        return (int)0L;
    }
    public static int MDM_MASK_X75_DATA() {
        return (int)7L;
    }
    public static int MDM_X75_DATA_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_X75_DATA_64K() {
        return (int)1L;
    }
    public static int MDM_X75_DATA_128K() {
        return (int)2L;
    }
    public static int MDM_X75_DATA_T_70() {
        return (int)3L;
    }
    public static int MDM_X75_DATA_BTX() {
        return (int)4L;
    }
    public static int MDM_SHIFT_V110_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_V110_SPEED() {
        return (int)15L;
    }
    public static int MDM_V110_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_V110_SPEED_1DOT2K() {
        return (int)1L;
    }
    public static int MDM_V110_SPEED_2DOT4K() {
        return (int)2L;
    }
    public static int MDM_V110_SPEED_4DOT8K() {
        return (int)3L;
    }
    public static int MDM_V110_SPEED_9DOT6K() {
        return (int)4L;
    }
    public static int MDM_V110_SPEED_12DOT0K() {
        return (int)5L;
    }
    public static int MDM_V110_SPEED_14DOT4K() {
        return (int)6L;
    }
    public static int MDM_V110_SPEED_19DOT2K() {
        return (int)7L;
    }
    public static int MDM_V110_SPEED_28DOT8K() {
        return (int)8L;
    }
    public static int MDM_V110_SPEED_38DOT4K() {
        return (int)9L;
    }
    public static int MDM_V110_SPEED_57DOT6K() {
        return (int)10L;
    }
    public static int MDM_SHIFT_AUTO_SPEED() {
        return (int)0L;
    }
    public static int MDM_MASK_AUTO_SPEED() {
        return (int)7L;
    }
    public static int MDM_AUTO_SPEED_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_SHIFT_AUTO_ML() {
        return (int)6L;
    }
    public static int MDM_AUTO_ML_DEFAULT() {
        return (int)0L;
    }
    public static int MDM_AUTO_ML_NONE() {
        return (int)1L;
    }
    public static int MDM_AUTO_ML_2() {
        return (int)2L;
    }
    public static int MDM_ANALOG_RLP_ON() {
        return (int)0L;
    }
    public static int MDM_ANALOG_RLP_OFF() {
        return (int)1L;
    }
    public static int MDM_ANALOG_V34() {
        return (int)2L;
    }
    public static int MDM_PIAFS_INCOMING() {
        return (int)0L;
    }
    public static int MDM_PIAFS_OUTGOING() {
        return (int)1L;
    }
    public static int STYLE_DESCRIPTION_SIZE() {
        return (int)32L;
    }
    public static int IMEMENUITEM_STRING_SIZE() {
        return (int)80L;
    }
    public static int IMC_GETCANDIDATEPOS() {
        return (int)7L;
    }
    public static int IMC_SETCANDIDATEPOS() {
        return (int)8L;
    }
    public static int IMC_GETCOMPOSITIONFONT() {
        return (int)9L;
    }
    public static int IMC_SETCOMPOSITIONFONT() {
        return (int)10L;
    }
    public static int IMC_GETCOMPOSITIONWINDOW() {
        return (int)11L;
    }
    public static int IMC_SETCOMPOSITIONWINDOW() {
        return (int)12L;
    }
    public static int IMC_GETSTATUSWINDOWPOS() {
        return (int)15L;
    }
    public static int IMC_SETSTATUSWINDOWPOS() {
        return (int)16L;
    }
    public static int IMC_CLOSESTATUSWINDOW() {
        return (int)33L;
    }
    public static int IMC_OPENSTATUSWINDOW() {
        return (int)34L;
    }
    public static int NI_OPENCANDIDATE() {
        return (int)16L;
    }
    public static int NI_CLOSECANDIDATE() {
        return (int)17L;
    }
    public static int NI_SELECTCANDIDATESTR() {
        return (int)18L;
    }
    public static int NI_CHANGECANDIDATELIST() {
        return (int)19L;
    }
    public static int NI_FINALIZECONVERSIONRESULT() {
        return (int)20L;
    }
    public static int NI_COMPOSITIONSTR() {
        return (int)21L;
    }
    public static int NI_SETCANDIDATE_PAGESTART() {
        return (int)22L;
    }
    public static int NI_SETCANDIDATE_PAGESIZE() {
        return (int)23L;
    }
    public static int NI_IMEMENUSELECTED() {
        return (int)24L;
    }
    public static int ISC_SHOWUICANDIDATEWINDOW() {
        return (int)1L;
    }
    public static int ISC_SHOWUIGUIDELINE() {
        return (int)1073741824L;
    }
    public static int ISC_SHOWUIALLCANDIDATEWINDOW() {
        return (int)15L;
    }
    public static int CPS_COMPLETE() {
        return (int)1L;
    }
    public static int CPS_CONVERT() {
        return (int)2L;
    }
    public static int CPS_REVERT() {
        return (int)3L;
    }
    public static int CPS_CANCEL() {
        return (int)4L;
    }
    public static int MOD_LEFT() {
        return (int)32768L;
    }
    public static int MOD_RIGHT() {
        return (int)16384L;
    }
    public static int MOD_ON_KEYUP() {
        return (int)2048L;
    }
    public static int MOD_IGNORE_ALL_MODIFIER() {
        return (int)1024L;
    }
    public static int IME_CHOTKEY_IME_NONIME_TOGGLE() {
        return (int)16L;
    }
    public static int IME_CHOTKEY_SHAPE_TOGGLE() {
        return (int)17L;
    }
    public static int IME_CHOTKEY_SYMBOL_TOGGLE() {
        return (int)18L;
    }
    public static int IME_JHOTKEY_CLOSE_OPEN() {
        return (int)48L;
    }
    public static int IME_KHOTKEY_SHAPE_TOGGLE() {
        return (int)80L;
    }
    public static int IME_KHOTKEY_HANJACONVERT() {
        return (int)81L;
    }
    public static int IME_KHOTKEY_ENGLISH() {
        return (int)82L;
    }
    public static int IME_THOTKEY_IME_NONIME_TOGGLE() {
        return (int)112L;
    }
    public static int IME_THOTKEY_SHAPE_TOGGLE() {
        return (int)113L;
    }
    public static int IME_THOTKEY_SYMBOL_TOGGLE() {
        return (int)114L;
    }
    public static int IME_HOTKEY_DSWITCH_FIRST() {
        return (int)256L;
    }
    public static int IME_HOTKEY_DSWITCH_LAST() {
        return (int)287L;
    }
    public static int IME_HOTKEY_PRIVATE_FIRST() {
        return (int)512L;
    }
    public static int IME_ITHOTKEY_RESEND_RESULTSTR() {
        return (int)512L;
    }
    public static int IME_ITHOTKEY_PREVIOUS_COMPOSITION() {
        return (int)513L;
    }
    public static int IME_ITHOTKEY_UISTYLE_TOGGLE() {
        return (int)514L;
    }
    public static int IME_ITHOTKEY_RECONVERTSTRING() {
        return (int)515L;
    }
    public static int IME_HOTKEY_PRIVATE_LAST() {
        return (int)543L;
    }
    public static int GCS_COMPREADSTR() {
        return (int)1L;
    }
    public static int GCS_COMPREADATTR() {
        return (int)2L;
    }
    public static int GCS_COMPREADCLAUSE() {
        return (int)4L;
    }
    public static int GCS_COMPSTR() {
        return (int)8L;
    }
    public static int GCS_COMPATTR() {
        return (int)16L;
    }
    public static int GCS_COMPCLAUSE() {
        return (int)32L;
    }
    public static int GCS_CURSORPOS() {
        return (int)128L;
    }
    public static int GCS_DELTASTART() {
        return (int)256L;
    }
    public static int GCS_RESULTREADSTR() {
        return (int)512L;
    }
    public static int GCS_RESULTREADCLAUSE() {
        return (int)1024L;
    }
    public static int GCS_RESULTSTR() {
        return (int)2048L;
    }
    public static int GCS_RESULTCLAUSE() {
        return (int)4096L;
    }
    public static int CS_INSERTCHAR() {
        return (int)8192L;
    }
    public static int CS_NOMOVECARET() {
        return (int)16384L;
    }
    public static int IMEVER_0310() {
        return (int)196618L;
    }
    public static int IMEVER_0400() {
        return (int)262144L;
    }
    public static int IME_PROP_AT_CARET() {
        return (int)65536L;
    }
    public static int IME_PROP_SPECIAL_UI() {
        return (int)131072L;
    }
    public static int IME_PROP_CANDLIST_START_FROM_1() {
        return (int)262144L;
    }
    public static int IME_PROP_UNICODE() {
        return (int)524288L;
    }
    public static int IME_PROP_COMPLETE_ON_UNSELECT() {
        return (int)1048576L;
    }
    public static int UI_CAP_2700() {
        return (int)1L;
    }
    public static int UI_CAP_ROT90() {
        return (int)2L;
    }
    public static int UI_CAP_ROTANY() {
        return (int)4L;
    }
    public static int SCS_CAP_COMPSTR() {
        return (int)1L;
    }
    public static int SCS_CAP_MAKEREAD() {
        return (int)2L;
    }
    public static int SCS_CAP_SETRECONVERTSTRING() {
        return (int)4L;
    }
    public static int SELECT_CAP_CONVERSION() {
        return (int)1L;
    }
    public static int SELECT_CAP_SENTENCE() {
        return (int)2L;
    }
    public static int GGL_LEVEL() {
        return (int)1L;
    }
    public static int GGL_INDEX() {
        return (int)2L;
    }
    public static int GGL_STRING() {
        return (int)3L;
    }
    public static int GGL_PRIVATE() {
        return (int)4L;
    }
    public static int GL_LEVEL_NOGUIDELINE() {
        return (int)0L;
    }
    public static int GL_LEVEL_FATAL() {
        return (int)1L;
    }
    public static int GL_LEVEL_ERROR() {
        return (int)2L;
    }
    public static int GL_LEVEL_WARNING() {
        return (int)3L;
    }
    public static int GL_LEVEL_INFORMATION() {
        return (int)4L;
    }
    public static int GL_ID_UNKNOWN() {
        return (int)0L;
    }
    public static int GL_ID_NOMODULE() {
        return (int)1L;
    }
    public static int GL_ID_NODICTIONARY() {
        return (int)16L;
    }
    public static int GL_ID_CANNOTSAVE() {
        return (int)17L;
    }
    public static int GL_ID_NOCONVERT() {
        return (int)32L;
    }
    public static int GL_ID_TYPINGERROR() {
        return (int)33L;
    }
    public static int GL_ID_TOOMANYSTROKE() {
        return (int)34L;
    }
    public static int GL_ID_READINGCONFLICT() {
        return (int)35L;
    }
    public static int GL_ID_INPUTREADING() {
        return (int)36L;
    }
    public static int GL_ID_INPUTRADICAL() {
        return (int)37L;
    }
    public static int GL_ID_INPUTCODE() {
        return (int)38L;
    }
    public static int GL_ID_INPUTSYMBOL() {
        return (int)39L;
    }
    public static int GL_ID_CHOOSECANDIDATE() {
        return (int)40L;
    }
    public static int GL_ID_REVERSECONVERSION() {
        return (int)41L;
    }
    public static int GL_ID_PRIVATE_FIRST() {
        return (int)32768L;
    }
    public static int GL_ID_PRIVATE_LAST() {
        return (int)65535L;
    }
    public static int IGP_PROPERTY() {
        return (int)4L;
    }
    public static int IGP_CONVERSION() {
        return (int)8L;
    }
    public static int IGP_SENTENCE() {
        return (int)12L;
    }
    public static int IGP_UI() {
        return (int)16L;
    }
    public static int IGP_SETCOMPSTR() {
        return (int)20L;
    }
    public static int IGP_SELECT() {
        return (int)24L;
    }
    public static int SCS_SETRECONVERTSTRING() {
        return (int)65536L;
    }
    public static int SCS_QUERYRECONVERTSTRING() {
        return (int)131072L;
    }
    public static int ATTR_INPUT() {
        return (int)0L;
    }
    public static int ATTR_TARGET_CONVERTED() {
        return (int)1L;
    }
    public static int ATTR_CONVERTED() {
        return (int)2L;
    }
    public static int ATTR_TARGET_NOTCONVERTED() {
        return (int)3L;
    }
    public static int ATTR_INPUT_ERROR() {
        return (int)4L;
    }
    public static int ATTR_FIXEDCONVERTED() {
        return (int)5L;
    }
    public static int CFS_DEFAULT() {
        return (int)0L;
    }
    public static int CFS_RECT() {
        return (int)1L;
    }
    public static int CFS_POINT() {
        return (int)2L;
    }
    public static int CFS_FORCE_POSITION() {
        return (int)32L;
    }
    public static int CFS_CANDIDATEPOS() {
        return (int)64L;
    }
    public static int CFS_EXCLUDE() {
        return (int)128L;
    }
    public static int GCL_CONVERSION() {
        return (int)1L;
    }
    public static int GCL_REVERSECONVERSION() {
        return (int)2L;
    }
    public static int GCL_REVERSE_LENGTH() {
        return (int)3L;
    }
    public static int IME_CMODE_ALPHANUMERIC() {
        return (int)0L;
    }
    public static int IME_CMODE_NATIVE() {
        return (int)1L;
    }
    public static int IME_CMODE_KATAKANA() {
        return (int)2L;
    }
    public static int IME_CMODE_LANGUAGE() {
        return (int)3L;
    }
    public static int IME_CMODE_FULLSHAPE() {
        return (int)8L;
    }
    public static int IME_CMODE_ROMAN() {
        return (int)16L;
    }
    public static int IME_CMODE_CHARCODE() {
        return (int)32L;
    }
    public static int IME_CMODE_HANJACONVERT() {
        return (int)64L;
    }
    public static int IME_CMODE_NATIVESYMBOL() {
        return (int)128L;
    }
    public static int IME_CMODE_SOFTKBD() {
        return (int)128L;
    }
    public static int IME_CMODE_NOCONVERSION() {
        return (int)256L;
    }
    public static int IME_CMODE_EUDC() {
        return (int)512L;
    }
    public static int IME_CMODE_SYMBOL() {
        return (int)1024L;
    }
    public static int IME_CMODE_FIXED() {
        return (int)2048L;
    }
    public static int IME_SMODE_NONE() {
        return (int)0L;
    }
    public static int IME_SMODE_PLAURALCLAUSE() {
        return (int)1L;
    }
    public static int IME_SMODE_SINGLECONVERT() {
        return (int)2L;
    }
    public static int IME_SMODE_AUTOMATIC() {
        return (int)4L;
    }
    public static int IME_SMODE_PHRASEPREDICT() {
        return (int)8L;
    }
    public static int IME_SMODE_CONVERSATION() {
        return (int)16L;
    }
    public static int IME_SMODE_RESERVED() {
        return (int)61440L;
    }
    public static int IME_CAND_UNKNOWN() {
        return (int)0L;
    }
    public static int IME_CAND_READ() {
        return (int)1L;
    }
    public static int IME_CAND_CODE() {
        return (int)2L;
    }
    public static int IME_CAND_MEANING() {
        return (int)3L;
    }
    public static int IME_CAND_RADICAL() {
        return (int)4L;
    }
    public static int IME_CAND_STROKE() {
        return (int)5L;
    }
    public static int IMN_CLOSESTATUSWINDOW() {
        return (int)1L;
    }
    public static int IMN_OPENSTATUSWINDOW() {
        return (int)2L;
    }
    public static int IMN_CHANGECANDIDATE() {
        return (int)3L;
    }
    public static int IMN_CLOSECANDIDATE() {
        return (int)4L;
    }
    public static int IMN_OPENCANDIDATE() {
        return (int)5L;
    }
    public static int IMN_SETCONVERSIONMODE() {
        return (int)6L;
    }
    public static int IMN_SETSENTENCEMODE() {
        return (int)7L;
    }
    public static int IMN_SETOPENSTATUS() {
        return (int)8L;
    }
    public static int IMN_SETCANDIDATEPOS() {
        return (int)9L;
    }
    public static int IMN_SETCOMPOSITIONFONT() {
        return (int)10L;
    }
    public static int IMN_SETCOMPOSITIONWINDOW() {
        return (int)11L;
    }
    public static int IMN_SETSTATUSWINDOWPOS() {
        return (int)12L;
    }
    public static int IMN_GUIDELINE() {
        return (int)13L;
    }
    public static int IMN_PRIVATE() {
        return (int)14L;
    }
    public static int IMR_COMPOSITIONWINDOW() {
        return (int)1L;
    }
    public static int IMR_CANDIDATEWINDOW() {
        return (int)2L;
    }
    public static int IMR_COMPOSITIONFONT() {
        return (int)3L;
    }
    public static int IMR_RECONVERTSTRING() {
        return (int)4L;
    }
    public static int IMR_CONFIRMRECONVERTSTRING() {
        return (int)5L;
    }
    public static int IMR_QUERYCHARPOSITION() {
        return (int)6L;
    }
    public static int IMR_DOCUMENTFEED() {
        return (int)7L;
    }
    public static int IME_CONFIG_GENERAL() {
        return (int)1L;
    }
    public static int IME_CONFIG_REGISTERWORD() {
        return (int)2L;
    }
    public static int IME_CONFIG_SELECTDICTIONARY() {
        return (int)3L;
    }
    public static int IME_ESC_QUERY_SUPPORT() {
        return (int)3L;
    }
    public static int IME_ESC_RESERVED_FIRST() {
        return (int)4L;
    }
    public static int IME_ESC_RESERVED_LAST() {
        return (int)2047L;
    }
    public static int IME_ESC_PRIVATE_FIRST() {
        return (int)2048L;
    }
    public static int IME_ESC_PRIVATE_LAST() {
        return (int)4095L;
    }
    public static int IME_ESC_SEQUENCE_TO_INTERNAL() {
        return (int)4097L;
    }
    public static int IME_ESC_GET_EUDC_DICTIONARY() {
        return (int)4099L;
    }
    public static int IME_ESC_SET_EUDC_DICTIONARY() {
        return (int)4100L;
    }
    public static int IME_ESC_MAX_KEY() {
        return (int)4101L;
    }
    public static int IME_ESC_IME_NAME() {
        return (int)4102L;
    }
    public static int IME_ESC_SYNC_HOTKEY() {
        return (int)4103L;
    }
    public static int IME_ESC_HANJA_MODE() {
        return (int)4104L;
    }
    public static int IME_ESC_AUTOMATA() {
        return (int)4105L;
    }
    public static int IME_ESC_PRIVATE_HOTKEY() {
        return (int)4106L;
    }
    public static int IME_ESC_GETHELPFILENAME() {
        return (int)4107L;
    }
    public static int IME_REGWORD_STYLE_EUDC() {
        return (int)1L;
    }
    public static int IACE_CHILDREN() {
        return (int)1L;
    }
    public static int IACE_DEFAULT() {
        return (int)16L;
    }
    public static int IACE_IGNORENOCONTEXT() {
        return (int)32L;
    }
    public static int IGIMIF_RIGHTMENU() {
        return (int)1L;
    }
    public static int IGIMII_CMODE() {
        return (int)1L;
    }
    public static int IGIMII_SMODE() {
        return (int)2L;
    }
    public static int IGIMII_CONFIGURE() {
        return (int)4L;
    }
    public static int IGIMII_TOOLS() {
        return (int)8L;
    }
    public static int IGIMII_HELP() {
        return (int)16L;
    }
    public static int IGIMII_OTHER() {
        return (int)32L;
    }
    public static int IGIMII_INPUTTOOLS() {
        return (int)64L;
    }
    public static int IMFT_RADIOCHECK() {
        return (int)1L;
    }
    public static int IMFT_SEPARATOR() {
        return (int)2L;
    }
    public static int IMFT_SUBMENU() {
        return (int)4L;
    }
    public static int SOFTKEYBOARD_TYPE_T1() {
        return (int)1L;
    }
    public static int SOFTKEYBOARD_TYPE_C1() {
        return (int)2L;
    }
    public static int AF_UNSPEC() {
        return (int)0L;
    }
    public static int AF_UNIX() {
        return (int)1L;
    }
    public static int AF_INET() {
        return (int)2L;
    }
    public static int AF_IMPLINK() {
        return (int)3L;
    }
    public static int AF_PUP() {
        return (int)4L;
    }
    public static int AF_CHAOS() {
        return (int)5L;
    }
    public static int AF_NS() {
        return (int)6L;
    }
    public static int AF_ISO() {
        return (int)7L;
    }
    public static int AF_ECMA() {
        return (int)8L;
    }
    public static int AF_DATAKIT() {
        return (int)9L;
    }
    public static int AF_CCITT() {
        return (int)10L;
    }
    public static int AF_SNA() {
        return (int)11L;
    }
    public static int AF_DECnet() {
        return (int)12L;
    }
    public static int AF_DLI() {
        return (int)13L;
    }
    public static int AF_LAT() {
        return (int)14L;
    }
    public static int AF_HYLINK() {
        return (int)15L;
    }
    public static int AF_APPLETALK() {
        return (int)16L;
    }
    public static int AF_NETBIOS() {
        return (int)17L;
    }
    public static int AF_VOICEVIEW() {
        return (int)18L;
    }
    public static int AF_FIREFOX() {
        return (int)19L;
    }
    public static int AF_UNKNOWN1() {
        return (int)20L;
    }
    public static int AF_BAN() {
        return (int)21L;
    }
    public static int AF_ATM() {
        return (int)22L;
    }
    public static int AF_INET6() {
        return (int)23L;
    }
    public static int AF_CLUSTER() {
        return (int)24L;
    }
    public static int AF_12844() {
        return (int)25L;
    }
    public static int AF_IRDA() {
        return (int)26L;
    }
    public static int AF_NETDES() {
        return (int)28L;
    }
    public static int AF_TCNPROCESS() {
        return (int)29L;
    }
    public static int AF_TCNMESSAGE() {
        return (int)30L;
    }
    public static int AF_ICLFXBM() {
        return (int)31L;
    }
    public static int AF_BTH() {
        return (int)32L;
    }
    public static int AF_LINK() {
        return (int)33L;
    }
    public static int AF_HYPERV() {
        return (int)34L;
    }
    public static int AF_MAX() {
        return (int)35L;
    }
    public static int SOCK_STREAM() {
        return (int)1L;
    }
    public static int SOCK_DGRAM() {
        return (int)2L;
    }
    public static int SOCK_RAW() {
        return (int)3L;
    }
    public static int SOCK_RDM() {
        return (int)4L;
    }
    public static int SOCK_SEQPACKET() {
        return (int)5L;
    }
    public static int SOL_SOCKET() {
        return (int)65535L;
    }
    public static int SO_DEBUG() {
        return (int)1L;
    }
    public static int SO_ACCEPTCONN() {
        return (int)2L;
    }
    public static int SO_REUSEADDR() {
        return (int)4L;
    }
    public static int SO_KEEPALIVE() {
        return (int)8L;
    }
    public static int SO_DONTROUTE() {
        return (int)16L;
    }
    public static int SO_BROADCAST() {
        return (int)32L;
    }
    public static int SO_USELOOPBACK() {
        return (int)64L;
    }
    public static int SO_LINGER() {
        return (int)128L;
    }
    public static int SO_OOBINLINE() {
        return (int)256L;
    }
    public static int SO_SNDBUF() {
        return (int)4097L;
    }
    public static int SO_RCVBUF() {
        return (int)4098L;
    }
    public static int SO_SNDLOWAT() {
        return (int)4099L;
    }
    public static int SO_RCVLOWAT() {
        return (int)4100L;
    }
    public static int SO_SNDTIMEO() {
        return (int)4101L;
    }
    public static int SO_RCVTIMEO() {
        return (int)4102L;
    }
    public static int SO_ERROR() {
        return (int)4103L;
    }
    public static int SO_TYPE() {
        return (int)4104L;
    }
    public static int SO_BSP_STATE() {
        return (int)4105L;
    }
    public static int SO_GROUP_ID() {
        return (int)8193L;
    }
    public static int SO_GROUP_PRIORITY() {
        return (int)8194L;
    }
    public static int SO_MAX_MSG_SIZE() {
        return (int)8195L;
    }
    public static int SO_CONDITIONAL_ACCEPT() {
        return (int)12290L;
    }
    public static int SO_PAUSE_ACCEPT() {
        return (int)12291L;
    }
    public static int SO_COMPARTMENT_ID() {
        return (int)12292L;
    }
    public static int SO_RANDOMIZE_PORT() {
        return (int)12293L;
    }
    public static int SO_PORT_SCALABILITY() {
        return (int)12294L;
    }
    public static int SO_REUSE_UNICASTPORT() {
        return (int)12295L;
    }
    public static int SO_REUSE_MULTICASTPORT() {
        return (int)12296L;
    }
    public static int SO_ORIGINAL_DST() {
        return (int)12303L;
    }
    public static int WSK_SO_BASE() {
        return (int)16384L;
    }
    public static int TCP_NODELAY() {
        return (int)1L;
    }
    public static int _SS_MAXSIZE() {
        return (int)128L;
    }
    public static int IOC_UNIX() {
        return (int)0L;
    }
    public static int IOC_WS2() {
        return (int)134217728L;
    }
    public static int IOC_PROTOCOL() {
        return (int)268435456L;
    }
    public static int IOC_VENDOR() {
        return (int)402653184L;
    }
    public static int IPPROTO_IP() {
        return (int)0L;
    }
    public static int IPPORT_TCPMUX() {
        return (int)1L;
    }
    public static int IPPORT_ECHO() {
        return (int)7L;
    }
    public static int IPPORT_DISCARD() {
        return (int)9L;
    }
    public static int IPPORT_SYSTAT() {
        return (int)11L;
    }
    public static int IPPORT_DAYTIME() {
        return (int)13L;
    }
    public static int IPPORT_NETSTAT() {
        return (int)15L;
    }
    public static int IPPORT_QOTD() {
        return (int)17L;
    }
    public static int IPPORT_MSP() {
        return (int)18L;
    }
    public static int IPPORT_CHARGEN() {
        return (int)19L;
    }
    public static int IPPORT_FTP_DATA() {
        return (int)20L;
    }
    public static int IPPORT_FTP() {
        return (int)21L;
    }
    public static int IPPORT_TELNET() {
        return (int)23L;
    }
    public static int IPPORT_SMTP() {
        return (int)25L;
    }
    public static int IPPORT_TIMESERVER() {
        return (int)37L;
    }
    public static int IPPORT_NAMESERVER() {
        return (int)42L;
    }
    public static int IPPORT_WHOIS() {
        return (int)43L;
    }
    public static int IPPORT_MTP() {
        return (int)57L;
    }
    public static int IPPORT_TFTP() {
        return (int)69L;
    }
    public static int IPPORT_RJE() {
        return (int)77L;
    }
    public static int IPPORT_FINGER() {
        return (int)79L;
    }
}


