// Generated by jextract

package com.jenet.enet.cpp;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
 class enet_h_36 extends enet_h_35 {

    public static int RPC_S_BUFFER_TOO_SMALL() {
        return (int)122L;
    }
    public static int RPC_S_INVALID_SECURITY_DESC() {
        return (int)1338L;
    }
    public static int RPC_S_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int RPC_S_SERVER_OUT_OF_MEMORY() {
        return (int)1130L;
    }
    public static int RPC_S_ASYNC_CALL_PENDING() {
        return (int)997L;
    }
    public static int RPC_S_UNKNOWN_PRINCIPAL() {
        return (int)1332L;
    }
    public static int RPC_S_TIMEOUT() {
        return (int)1460L;
    }
    public static int RPC_S_NOT_ENOUGH_QUOTA() {
        return (int)1816L;
    }
    public static int RPC_X_NO_MEMORY() {
        return (int)14L;
    }
    public static int RPC_X_INVALID_BOUND() {
        return (int)1734L;
    }
    public static int RPC_X_INVALID_TAG() {
        return (int)1733L;
    }
    public static int RPC_X_ENUM_VALUE_TOO_LARGE() {
        return (int)1781L;
    }
    public static int RPC_X_SS_CONTEXT_MISMATCH() {
        return (int)6L;
    }
    public static int RPC_X_INVALID_BUFFER() {
        return (int)1784L;
    }
    public static int RPC_X_PIPE_APP_MEMORY() {
        return (int)14L;
    }
    public static int RPC_X_INVALID_PIPE_OPERATION() {
        return (int)1831L;
    }
    public static long RPC_ASYNC_VERSION_1_0() {
        return 112L;
    }
    public static int RPC_C_INFINITE_TIMEOUT() {
        return (int)4294967295L;
    }
    public static int RPC_QUERY_SERVER_PRINCIPAL_NAME() {
        return (int)2L;
    }
    public static int RPC_QUERY_CLIENT_PRINCIPAL_NAME() {
        return (int)4L;
    }
    public static int RPC_QUERY_CALL_LOCAL_ADDRESS() {
        return (int)8L;
    }
    public static int RPC_QUERY_CLIENT_PID() {
        return (int)16L;
    }
    public static int RPC_QUERY_IS_CLIENT_LOCAL() {
        return (int)32L;
    }
    public static int RPC_QUERY_NO_AUTH_REQUIRED() {
        return (int)64L;
    }
    public static int RPC_CALL_ATTRIBUTES_VERSION() {
        return (int)3L;
    }
    public static int RPC_QUERY_CLIENT_ID() {
        return (int)128L;
    }
    public static int RpcNotificationCallStatusChange() {
        return (int)1L;
    }
    public static int FOF_NO_UI() {
        return (int)1556L;
    }
    public static int SEE_MASK_FLAG_DDEWAIT() {
        return (int)256L;
    }
    public static int NOTIFYICONDATAA_V1_SIZE() {
        return (int)104L;
    }
    public static int NOTIFYICONDATAW_V1_SIZE() {
        return (int)168L;
    }
    public static int NOTIFYICONDATA_V1_SIZE() {
        return (int)104L;
    }
    public static int NOTIFYICONDATAA_V2_SIZE() {
        return (int)504L;
    }
    public static int NOTIFYICONDATAW_V2_SIZE() {
        return (int)952L;
    }
    public static int NOTIFYICONDATA_V2_SIZE() {
        return (int)504L;
    }
    public static int NOTIFYICONDATAA_V3_SIZE() {
        return (int)520L;
    }
    public static int NOTIFYICONDATAW_V3_SIZE() {
        return (int)968L;
    }
    public static int NOTIFYICONDATA_V3_SIZE() {
        return (int)520L;
    }
    public static int NIN_SELECT() {
        return (int)1024L;
    }
    public static int NIN_KEYSELECT() {
        return (int)1025L;
    }
    public static int NIN_BALLOONSHOW() {
        return (int)1026L;
    }
    public static int NIN_BALLOONHIDE() {
        return (int)1027L;
    }
    public static int NIN_BALLOONTIMEOUT() {
        return (int)1028L;
    }
    public static int NIN_BALLOONUSERCLICK() {
        return (int)1029L;
    }
    public static int NIN_POPUPOPEN() {
        return (int)1030L;
    }
    public static int NIN_POPUPCLOSE() {
        return (int)1031L;
    }
    public static int SHGSI_ICON() {
        return (int)256L;
    }
    public static int SHGSI_SYSICONINDEX() {
        return (int)16384L;
    }
    public static int SHGSI_LINKOVERLAY() {
        return (int)32768L;
    }
    public static int SHGSI_SELECTED() {
        return (int)65536L;
    }
    public static int SHGSI_LARGEICON() {
        return (int)0L;
    }
    public static int SHGSI_SMALLICON() {
        return (int)1L;
    }
    public static int SHGSI_SHELLICONSIZE() {
        return (int)4L;
    }
    public static int SIID_INVALID() {
        return (int)-1L;
    }
    public static int SHIL_LAST() {
        return (int)4L;
    }
    public static MemorySegment WC_NETADDRESS() {
        return constants$1347.WC_NETADDRESS$SEGMENT;
    }
    public static int NCM_GETADDRESS() {
        return (int)1025L;
    }
    public static int NCM_SETALLOWTYPE() {
        return (int)1026L;
    }
    public static int NCM_GETALLOWTYPE() {
        return (int)1027L;
    }
    public static int NCM_DISPLAYERRORTIP() {
        return (int)1028L;
    }
    public static int PERF_NO_INSTANCES() {
        return (int)-1L;
    }
    public static int PERF_COUNTER_COUNTER() {
        return (int)272696320L;
    }
    public static int PERF_COUNTER_TIMER() {
        return (int)541132032L;
    }
    public static int PERF_COUNTER_QUEUELEN_TYPE() {
        return (int)4523008L;
    }
    public static int PERF_COUNTER_LARGE_QUEUELEN_TYPE() {
        return (int)4523264L;
    }
    public static int PERF_COUNTER_100NS_QUEUELEN_TYPE() {
        return (int)5571840L;
    }
    public static int PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE() {
        return (int)6620416L;
    }
    public static int PERF_COUNTER_BULK_COUNT() {
        return (int)272696576L;
    }
    public static int PERF_COUNTER_TEXT() {
        return (int)2816L;
    }
    public static int PERF_COUNTER_RAWCOUNT() {
        return (int)65536L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT() {
        return (int)65792L;
    }
    public static int PERF_COUNTER_RAWCOUNT_HEX() {
        return (int)0L;
    }
    public static int PERF_COUNTER_LARGE_RAWCOUNT_HEX() {
        return (int)256L;
    }
    public static int PERF_SAMPLE_FRACTION() {
        return (int)549585920L;
    }
    public static int PERF_SAMPLE_COUNTER() {
        return (int)4260864L;
    }
    public static int PERF_COUNTER_NODATA() {
        return (int)1073742336L;
    }
    public static int PERF_COUNTER_TIMER_INV() {
        return (int)557909248L;
    }
    public static int PERF_SAMPLE_BASE() {
        return (int)1073939457L;
    }
    public static int PERF_AVERAGE_TIMER() {
        return (int)805438464L;
    }
    public static int PERF_AVERAGE_BASE() {
        return (int)1073939458L;
    }
    public static int PERF_AVERAGE_BULK() {
        return (int)1073874176L;
    }
    public static int PERF_OBJ_TIME_TIMER() {
        return (int)543229184L;
    }
    public static int PERF_100NSEC_TIMER() {
        return (int)542180608L;
    }
    public static int PERF_100NSEC_TIMER_INV() {
        return (int)558957824L;
    }
    public static int PERF_COUNTER_MULTI_TIMER() {
        return (int)574686464L;
    }
    public static int PERF_COUNTER_MULTI_TIMER_INV() {
        return (int)591463680L;
    }
    public static int PERF_COUNTER_MULTI_BASE() {
        return (int)1107494144L;
    }
    public static int PERF_100NSEC_MULTI_TIMER() {
        return (int)575735040L;
    }
    public static int PERF_100NSEC_MULTI_TIMER_INV() {
        return (int)592512256L;
    }
    public static int PERF_RAW_FRACTION() {
        return (int)537003008L;
    }
    public static int PERF_LARGE_RAW_FRACTION() {
        return (int)537003264L;
    }
    public static int PERF_RAW_BASE() {
        return (int)1073939459L;
    }
    public static int PERF_LARGE_RAW_BASE() {
        return (int)1073939712L;
    }
    public static int PERF_ELAPSED_TIME() {
        return (int)807666944L;
    }
    public static int PERF_COUNTER_HISTOGRAM_TYPE() {
        return (int)2147483648L;
    }
    public static int PERF_COUNTER_DELTA() {
        return (int)4195328L;
    }
    public static int PERF_COUNTER_LARGE_DELTA() {
        return (int)4195584L;
    }
    public static int PERF_PRECISION_SYSTEM_TIMER() {
        return (int)541525248L;
    }
    public static int PERF_PRECISION_100NS_TIMER() {
        return (int)542573824L;
    }
    public static int PERF_PRECISION_OBJECT_TIMER() {
        return (int)543622400L;
    }
    public static int PERF_PRECISION_TIMESTAMP() {
        return (int)1073939712L;
    }
    public static int PERF_NO_UNIQUE_ID() {
        return (int)-1L;
    }
    public static int PERF_QUERY_OBJECTS() {
        return (int)-2147483648L;
    }
    public static int PERF_QUERY_GLOBAL() {
        return (int)-2147483647L;
    }
    public static int PERF_QUERY_COSTLY() {
        return (int)-2147483646L;
    }
    public static int MAX_PERF_OBJECTS_IN_QUERY_FUNCTION() {
        return (int)64L;
    }
    public static int ALG_CLASS_ANY() {
        return (int)0L;
    }
    public static int ALG_CLASS_SIGNATURE() {
        return (int)8192L;
    }
    public static int ALG_CLASS_MSG_ENCRYPT() {
        return (int)16384L;
    }
    public static int ALG_CLASS_DATA_ENCRYPT() {
        return (int)24576L;
    }
    public static int ALG_CLASS_HASH() {
        return (int)32768L;
    }
    public static int ALG_CLASS_KEY_EXCHANGE() {
        return (int)40960L;
    }
    public static int ALG_CLASS_ALL() {
        return (int)57344L;
    }
    public static int ALG_TYPE_ANY() {
        return (int)0L;
    }
    public static int ALG_TYPE_DSS() {
        return (int)512L;
    }
    public static int ALG_TYPE_RSA() {
        return (int)1024L;
    }
    public static int ALG_TYPE_BLOCK() {
        return (int)1536L;
    }
    public static int ALG_TYPE_STREAM() {
        return (int)2048L;
    }
    public static int ALG_TYPE_DH() {
        return (int)2560L;
    }
    public static int ALG_TYPE_SECURECHANNEL() {
        return (int)3072L;
    }
    public static int ALG_TYPE_ECDH() {
        return (int)3584L;
    }
    public static int ALG_TYPE_THIRDPARTY() {
        return (int)4096L;
    }
    public static int ALG_SID_ANY() {
        return (int)0L;
    }
    public static int ALG_SID_THIRDPARTY_ANY() {
        return (int)0L;
    }
    public static int CALG_MD2() {
        return (int)32769L;
    }
    public static int CALG_MD4() {
        return (int)32770L;
    }
    public static int CALG_MD5() {
        return (int)32771L;
    }
    public static int CALG_SHA() {
        return (int)32772L;
    }
    public static int CALG_SHA1() {
        return (int)32772L;
    }
    public static int CALG_MAC() {
        return (int)32773L;
    }
    public static int CALG_RSA_SIGN() {
        return (int)9216L;
    }
    public static int CALG_DSS_SIGN() {
        return (int)8704L;
    }
    public static int CALG_NO_SIGN() {
        return (int)8192L;
    }
    public static int CALG_RSA_KEYX() {
        return (int)41984L;
    }
    public static int CALG_DES() {
        return (int)26113L;
    }
    public static int CALG_3DES_112() {
        return (int)26121L;
    }
    public static int CALG_3DES() {
        return (int)26115L;
    }
    public static int CALG_DESX() {
        return (int)26116L;
    }
    public static int CALG_RC2() {
        return (int)26114L;
    }
    public static int CALG_RC4() {
        return (int)26625L;
    }
    public static int CALG_SEAL() {
        return (int)26626L;
    }
    public static int CALG_DH_SF() {
        return (int)43521L;
    }
    public static int CALG_DH_EPHEM() {
        return (int)43522L;
    }
    public static int CALG_AGREEDKEY_ANY() {
        return (int)43523L;
    }
    public static int CALG_KEA_KEYX() {
        return (int)43524L;
    }
    public static int CALG_HUGHES_MD5() {
        return (int)40963L;
    }
    public static int CALG_SKIPJACK() {
        return (int)26122L;
    }
    public static int CALG_TEK() {
        return (int)26123L;
    }
    public static int CALG_CYLINK_MEK() {
        return (int)26124L;
    }
    public static int CALG_SSL3_SHAMD5() {
        return (int)32776L;
    }
    public static int CALG_SSL3_MASTER() {
        return (int)19457L;
    }
    public static int CALG_SCHANNEL_MASTER_HASH() {
        return (int)19458L;
    }
    public static int CALG_SCHANNEL_MAC_KEY() {
        return (int)19459L;
    }
    public static int CALG_SCHANNEL_ENC_KEY() {
        return (int)19463L;
    }
    public static int CALG_PCT1_MASTER() {
        return (int)19460L;
    }
    public static int CALG_SSL2_MASTER() {
        return (int)19461L;
    }
    public static int CALG_TLS1_MASTER() {
        return (int)19462L;
    }
    public static int CALG_RC5() {
        return (int)26125L;
    }
    public static int CALG_HMAC() {
        return (int)32777L;
    }
    public static int CALG_TLS1PRF() {
        return (int)32778L;
    }
    public static int CALG_HASH_REPLACE_OWF() {
        return (int)32779L;
    }
    public static int CALG_AES_128() {
        return (int)26126L;
    }
    public static int CALG_AES_192() {
        return (int)26127L;
    }
    public static int CALG_AES_256() {
        return (int)26128L;
    }
    public static int CALG_AES() {
        return (int)26129L;
    }
    public static int CALG_SHA_256() {
        return (int)32780L;
    }
    public static int CALG_SHA_384() {
        return (int)32781L;
    }
    public static int CALG_SHA_512() {
        return (int)32782L;
    }
    public static int CALG_ECDH() {
        return (int)43525L;
    }
    public static int CALG_ECDH_EPHEM() {
        return (int)44550L;
    }
    public static int CALG_ECMQV() {
        return (int)40961L;
    }
    public static int CALG_ECDSA() {
        return (int)8707L;
    }
    public static int CALG_NULLCIPHER() {
        return (int)24576L;
    }
    public static int CALG_THIRDPARTY_KEY_EXCHANGE() {
        return (int)45056L;
    }
    public static int CALG_THIRDPARTY_SIGNATURE() {
        return (int)12288L;
    }
    public static int CALG_THIRDPARTY_CIPHER() {
        return (int)28672L;
    }
    public static int CALG_THIRDPARTY_HASH() {
        return (int)36864L;
    }
    public static int CRYPT_VERIFYCONTEXT() {
        return (int)4026531840L;
    }
    public static int KEY_LENGTH_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FAILED() {
        return (int)0L;
    }
    public static int CRYPT_SUCCEED() {
        return (int)1L;
    }
    public static MemorySegment MS_DEF_PROV_A() {
        return constants$1347.MS_DEF_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV_W() {
        return constants$1347.MS_DEF_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_PROV() {
        return constants$1347.MS_DEF_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_A() {
        return constants$1348.MS_ENHANCED_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV_W() {
        return constants$1348.MS_ENHANCED_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENHANCED_PROV() {
        return constants$1348.MS_ENHANCED_PROV$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_A() {
        return constants$1348.MS_STRONG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV_W() {
        return constants$1348.MS_STRONG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_STRONG_PROV() {
        return constants$1348.MS_STRONG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_A() {
        return constants$1349.MS_DEF_RSA_SIG_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV_W() {
        return constants$1349.MS_DEF_RSA_SIG_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SIG_PROV() {
        return constants$1349.MS_DEF_RSA_SIG_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_A() {
        return constants$1349.MS_DEF_RSA_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV_W() {
        return constants$1349.MS_DEF_RSA_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_RSA_SCHANNEL_PROV() {
        return constants$1349.MS_DEF_RSA_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_A() {
        return constants$1350.MS_DEF_DSS_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV_W() {
        return constants$1350.MS_DEF_DSS_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_PROV() {
        return constants$1350.MS_DEF_DSS_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_A() {
        return constants$1350.MS_DEF_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV_W() {
        return constants$1350.MS_DEF_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DSS_DH_PROV() {
        return constants$1350.MS_DEF_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_A() {
        return constants$1351.MS_ENH_DSS_DH_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV_W() {
        return constants$1351.MS_ENH_DSS_DH_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_DSS_DH_PROV() {
        return constants$1351.MS_ENH_DSS_DH_PROV$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_A() {
        return constants$1351.MS_DEF_DH_SCHANNEL_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV_W() {
        return constants$1351.MS_DEF_DH_SCHANNEL_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_DEF_DH_SCHANNEL_PROV() {
        return constants$1351.MS_DEF_DH_SCHANNEL_PROV$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_A() {
        return constants$1352.MS_SCARD_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV_W() {
        return constants$1352.MS_SCARD_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_SCARD_PROV() {
        return constants$1352.MS_SCARD_PROV$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_A() {
        return constants$1352.MS_ENH_RSA_AES_PROV_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_W() {
        return constants$1352.MS_ENH_RSA_AES_PROV_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_A() {
        return constants$1352.MS_ENH_RSA_AES_PROV_XP_A$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP_W() {
        return constants$1353.MS_ENH_RSA_AES_PROV_XP_W$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV_XP() {
        return constants$1353.MS_ENH_RSA_AES_PROV_XP$SEGMENT;
    }
    public static MemorySegment MS_ENH_RSA_AES_PROV() {
        return constants$1353.MS_ENH_RSA_AES_PROV$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_REG_VALUE() {
        return constants$1353.EXPO_OFFLOAD_REG_VALUE$SEGMENT;
    }
    public static MemorySegment EXPO_OFFLOAD_FUNC_NAME() {
        return constants$1353.EXPO_OFFLOAD_FUNC_NAME$SEGMENT;
    }
    public static MemorySegment szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS() {
        return constants$1353.szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_ENABLED() {
        return constants$1354.szKEY_CACHE_ENABLED$SEGMENT;
    }
    public static MemorySegment szKEY_CACHE_SECONDS() {
        return constants$1354.szKEY_CACHE_SECONDS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_MAX_ITEMS() {
        return constants$1354.szPRIV_KEY_CACHE_MAX_ITEMS$SEGMENT;
    }
    public static MemorySegment szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS() {
        return constants$1354.szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HASH() {
        return constants$1354.BCRYPT_KDF_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HMAC() {
        return constants$1354.BCRYPT_KDF_HMAC$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_TLS_PRF() {
        return constants$1355.BCRYPT_KDF_TLS_PRF$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_SP80056A_CONCAT() {
        return constants$1355.BCRYPT_KDF_SP80056A_CONCAT$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_RAW_SECRET() {
        return constants$1355.BCRYPT_KDF_RAW_SECRET$SEGMENT;
    }
    public static MemorySegment BCRYPT_KDF_HKDF() {
        return constants$1355.BCRYPT_KDF_HKDF$SEGMENT;
    }
    public static MemorySegment BCRYPT_OPAQUE_KEY_BLOB() {
        return constants$1355.BCRYPT_OPAQUE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_DATA_BLOB() {
        return constants$1355.BCRYPT_KEY_DATA_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_WRAP_KEY_BLOB() {
        return constants$1356.BCRYPT_AES_WRAP_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_OBJECT_LENGTH() {
        return constants$1356.BCRYPT_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_ALGORITHM_NAME() {
        return constants$1356.BCRYPT_ALGORITHM_NAME$SEGMENT;
    }
    public static MemorySegment BCRYPT_PROVIDER_HANDLE() {
        return constants$1356.BCRYPT_PROVIDER_HANDLE$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAINING_MODE() {
        return constants$1356.BCRYPT_CHAINING_MODE$SEGMENT;
    }
    public static MemorySegment BCRYPT_BLOCK_LENGTH() {
        return constants$1356.BCRYPT_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_LENGTH() {
        return constants$1357.BCRYPT_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_OBJECT_LENGTH() {
        return constants$1357.BCRYPT_KEY_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_STRENGTH() {
        return constants$1357.BCRYPT_KEY_STRENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_KEY_LENGTHS() {
        return constants$1357.BCRYPT_KEY_LENGTHS$SEGMENT;
    }
    public static MemorySegment BCRYPT_BLOCK_SIZE_LIST() {
        return constants$1357.BCRYPT_BLOCK_SIZE_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_EFFECTIVE_KEY_LENGTH() {
        return constants$1357.BCRYPT_EFFECTIVE_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_LENGTH() {
        return constants$1358.BCRYPT_HASH_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_OID_LIST() {
        return constants$1358.BCRYPT_HASH_OID_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_PADDING_SCHEMES() {
        return constants$1358.BCRYPT_PADDING_SCHEMES$SEGMENT;
    }
    public static MemorySegment BCRYPT_SIGNATURE_LENGTH() {
        return constants$1358.BCRYPT_SIGNATURE_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_HASH_BLOCK_LENGTH() {
        return constants$1358.BCRYPT_HASH_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_AUTH_TAG_LENGTH() {
        return constants$1358.BCRYPT_AUTH_TAG_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIMITIVE_TYPE() {
        return constants$1359.BCRYPT_PRIMITIVE_TYPE$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_KEYED_HASH() {
        return constants$1359.BCRYPT_IS_KEYED_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_REUSABLE_HASH() {
        return constants$1359.BCRYPT_IS_REUSABLE_HASH$SEGMENT;
    }
    public static MemorySegment BCRYPT_MESSAGE_BLOCK_LENGTH() {
        return constants$1359.BCRYPT_MESSAGE_BLOCK_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PUBLIC_KEY_LENGTH() {
        return constants$1359.BCRYPT_PUBLIC_KEY_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_PCP_PLATFORM_TYPE_PROPERTY() {
        return constants$1359.BCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment BCRYPT_PCP_PROVIDER_VERSION_PROPERTY() {
        return constants$1360.BCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment BCRYPT_MULTI_OBJECT_LENGTH() {
        return constants$1360.BCRYPT_MULTI_OBJECT_LENGTH$SEGMENT;
    }
    public static MemorySegment BCRYPT_IS_IFX_TPM_WEAK_KEY() {
        return constants$1360.BCRYPT_IS_IFX_TPM_WEAK_KEY$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_HASH_ALGORITHM() {
        return constants$1360.BCRYPT_HKDF_HASH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_SALT_AND_FINALIZE() {
        return constants$1360.BCRYPT_HKDF_SALT_AND_FINALIZE$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_PRK_AND_FINALIZE() {
        return constants$1360.BCRYPT_HKDF_PRK_AND_FINALIZE$SEGMENT;
    }
    public static MemorySegment BCRYPT_INITIALIZATION_VECTOR() {
        return constants$1361.BCRYPT_INITIALIZATION_VECTOR$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_NA() {
        return constants$1361.BCRYPT_CHAIN_MODE_NA$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CBC() {
        return constants$1361.BCRYPT_CHAIN_MODE_CBC$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_ECB() {
        return constants$1361.BCRYPT_CHAIN_MODE_ECB$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CFB() {
        return constants$1361.BCRYPT_CHAIN_MODE_CFB$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_CCM() {
        return constants$1361.BCRYPT_CHAIN_MODE_CCM$SEGMENT;
    }
    public static MemorySegment BCRYPT_CHAIN_MODE_GCM() {
        return constants$1362.BCRYPT_CHAIN_MODE_GCM$SEGMENT;
    }
    public static MemorySegment BCRYPT_PUBLIC_KEY_BLOB() {
        return constants$1362.BCRYPT_PUBLIC_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIVATE_KEY_BLOB() {
        return constants$1362.BCRYPT_PRIVATE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAPUBLIC_BLOB() {
        return constants$1362.BCRYPT_RSAPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAPRIVATE_BLOB() {
        return constants$1362.BCRYPT_RSAPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_RSAPUBLIC_BLOB() {
        return constants$1362.LEGACY_RSAPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_RSAPRIVATE_BLOB() {
        return constants$1363.LEGACY_RSAPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSAFULLPRIVATE_BLOB() {
        return constants$1363.BCRYPT_RSAFULLPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_GLOBAL_PARAMETERS() {
        return constants$1363.BCRYPT_GLOBAL_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_PRIVATE_KEY() {
        return constants$1363.BCRYPT_PRIVATE_KEY$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCPUBLIC_BLOB() {
        return constants$1363.BCRYPT_ECCPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCPRIVATE_BLOB() {
        return constants$1363.BCRYPT_ECCPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCFULLPUBLIC_BLOB() {
        return constants$1364.BCRYPT_ECCFULLPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECCFULLPRIVATE_BLOB() {
        return constants$1364.BCRYPT_ECCFULLPRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment SSL_ECCPUBLIC_BLOB() {
        return constants$1364.SSL_ECCPUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PUBLIC_BLOB() {
        return constants$1364.BCRYPT_DH_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PRIVATE_BLOB() {
        return constants$1364.BCRYPT_DH_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DH_PUBLIC_BLOB() {
        return constants$1364.LEGACY_DH_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DH_PRIVATE_BLOB() {
        return constants$1365.LEGACY_DH_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_PARAMETERS() {
        return constants$1365.BCRYPT_DH_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PUBLIC_BLOB() {
        return constants$1365.BCRYPT_DSA_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PRIVATE_BLOB() {
        return constants$1365.BCRYPT_DSA_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_PUBLIC_BLOB() {
        return constants$1365.LEGACY_DSA_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_PRIVATE_BLOB() {
        return constants$1365.LEGACY_DSA_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_V2_PUBLIC_BLOB() {
        return constants$1366.LEGACY_DSA_V2_PUBLIC_BLOB$SEGMENT;
    }
    public static MemorySegment LEGACY_DSA_V2_PRIVATE_BLOB() {
        return constants$1366.LEGACY_DSA_V2_PRIVATE_BLOB$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_PARAMETERS() {
        return constants$1366.BCRYPT_DSA_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_PARAMETERS() {
        return constants$1366.BCRYPT_ECC_PARAMETERS$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NAME() {
        return constants$1366.BCRYPT_ECC_CURVE_NAME$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NAME_LIST() {
        return constants$1366.BCRYPT_ECC_CURVE_NAME_LIST$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160R1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP160R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP160T1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP160T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192R1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP192R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP192T1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP192T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224R1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP224R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP224T1() {
        return constants$1367.BCRYPT_ECC_CURVE_BRAINPOOLP224T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256R1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP256R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP256T1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP256T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320R1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP320R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP320T1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP320T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384R1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP384R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP384T1() {
        return constants$1368.BCRYPT_ECC_CURVE_BRAINPOOLP384T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512R1() {
        return constants$1369.BCRYPT_ECC_CURVE_BRAINPOOLP512R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_BRAINPOOLP512T1() {
        return constants$1369.BCRYPT_ECC_CURVE_BRAINPOOLP512T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_25519() {
        return constants$1369.BCRYPT_ECC_CURVE_25519$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_EC192WAPI() {
        return constants$1369.BCRYPT_ECC_CURVE_EC192WAPI$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP192() {
        return constants$1369.BCRYPT_ECC_CURVE_NISTP192$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP224() {
        return constants$1369.BCRYPT_ECC_CURVE_NISTP224$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP256() {
        return constants$1370.BCRYPT_ECC_CURVE_NISTP256$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP384() {
        return constants$1370.BCRYPT_ECC_CURVE_NISTP384$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NISTP521() {
        return constants$1370.BCRYPT_ECC_CURVE_NISTP521$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP256T1() {
        return constants$1370.BCRYPT_ECC_CURVE_NUMSP256T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP384T1() {
        return constants$1370.BCRYPT_ECC_CURVE_NUMSP384T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_NUMSP512T1() {
        return constants$1370.BCRYPT_ECC_CURVE_NUMSP512T1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160K1() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP160K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160R1() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP160R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP160R2() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP160R2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP192K1() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP192K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP192R1() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP192R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP224K1() {
        return constants$1371.BCRYPT_ECC_CURVE_SECP224K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP224R1() {
        return constants$1372.BCRYPT_ECC_CURVE_SECP224R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP256K1() {
        return constants$1372.BCRYPT_ECC_CURVE_SECP256K1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP256R1() {
        return constants$1372.BCRYPT_ECC_CURVE_SECP256R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP384R1() {
        return constants$1372.BCRYPT_ECC_CURVE_SECP384R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_SECP521R1() {
        return constants$1372.BCRYPT_ECC_CURVE_SECP521R1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS7() {
        return constants$1372.BCRYPT_ECC_CURVE_WTLS7$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS9() {
        return constants$1373.BCRYPT_ECC_CURVE_WTLS9$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_WTLS12() {
        return constants$1373.BCRYPT_ECC_CURVE_WTLS12$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V1() {
        return constants$1373.BCRYPT_ECC_CURVE_X962P192V1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V2() {
        return constants$1373.BCRYPT_ECC_CURVE_X962P192V2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P192V3() {
        return constants$1373.BCRYPT_ECC_CURVE_X962P192V3$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V1() {
        return constants$1373.BCRYPT_ECC_CURVE_X962P239V1$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V2() {
        return constants$1374.BCRYPT_ECC_CURVE_X962P239V2$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P239V3() {
        return constants$1374.BCRYPT_ECC_CURVE_X962P239V3$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECC_CURVE_X962P256V1() {
        return constants$1374.BCRYPT_ECC_CURVE_X962P256V1$SEGMENT;
    }
    public static MemorySegment MS_PRIMITIVE_PROVIDER() {
        return constants$1374.MS_PRIMITIVE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_PLATFORM_CRYPTO_PROVIDER() {
        return constants$1374.MS_PLATFORM_CRYPTO_PROVIDER$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSA_ALGORITHM() {
        return constants$1374.BCRYPT_RSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RSA_SIGN_ALGORITHM() {
        return constants$1375.BCRYPT_RSA_SIGN_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DH_ALGORITHM() {
        return constants$1375.BCRYPT_DH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DSA_ALGORITHM() {
        return constants$1375.BCRYPT_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RC2_ALGORITHM() {
        return constants$1375.BCRYPT_RC2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RC4_ALGORITHM() {
        return constants$1375.BCRYPT_RC4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_ALGORITHM() {
        return constants$1375.BCRYPT_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DES_ALGORITHM() {
        return constants$1376.BCRYPT_DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_DESX_ALGORITHM() {
        return constants$1376.BCRYPT_DESX_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_3DES_ALGORITHM() {
        return constants$1376.BCRYPT_3DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_3DES_112_ALGORITHM() {
        return constants$1376.BCRYPT_3DES_112_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD2_ALGORITHM() {
        return constants$1376.BCRYPT_MD2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD4_ALGORITHM() {
        return constants$1376.BCRYPT_MD4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_MD5_ALGORITHM() {
        return constants$1377.BCRYPT_MD5_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA1_ALGORITHM() {
        return constants$1377.BCRYPT_SHA1_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA256_ALGORITHM() {
        return constants$1377.BCRYPT_SHA256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA384_ALGORITHM() {
        return constants$1377.BCRYPT_SHA384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SHA512_ALGORITHM() {
        return constants$1377.BCRYPT_SHA512_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_GMAC_ALGORITHM() {
        return constants$1377.BCRYPT_AES_GMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_AES_CMAC_ALGORITHM() {
        return constants$1378.BCRYPT_AES_CMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P256_ALGORITHM() {
        return constants$1378.BCRYPT_ECDSA_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P384_ALGORITHM() {
        return constants$1378.BCRYPT_ECDSA_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_P521_ALGORITHM() {
        return constants$1378.BCRYPT_ECDSA_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P256_ALGORITHM() {
        return constants$1378.BCRYPT_ECDH_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P384_ALGORITHM() {
        return constants$1378.BCRYPT_ECDH_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_P521_ALGORITHM() {
        return constants$1379.BCRYPT_ECDH_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_ALGORITHM() {
        return constants$1379.BCRYPT_RNG_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_FIPS186_DSA_ALGORITHM() {
        return constants$1379.BCRYPT_RNG_FIPS186_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_RNG_DUAL_EC_ALGORITHM() {
        return constants$1379.BCRYPT_RNG_DUAL_EC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SP800108_CTR_HMAC_ALGORITHM() {
        return constants$1379.BCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_SP80056A_CONCAT_ALGORITHM() {
        return constants$1379.BCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_PBKDF2_ALGORITHM() {
        return constants$1380.BCRYPT_PBKDF2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_CAPI_KDF_ALGORITHM() {
        return constants$1380.BCRYPT_CAPI_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_TLS1_1_KDF_ALGORITHM() {
        return constants$1380.BCRYPT_TLS1_1_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_TLS1_2_KDF_ALGORITHM() {
        return constants$1380.BCRYPT_TLS1_2_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDSA_ALGORITHM() {
        return constants$1380.BCRYPT_ECDSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_ECDH_ALGORITHM() {
        return constants$1380.BCRYPT_ECDH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_XTS_AES_ALGORITHM() {
        return constants$1381.BCRYPT_XTS_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment BCRYPT_HKDF_ALGORITHM() {
        return constants$1381.BCRYPT_HKDF_ALGORITHM$SEGMENT;
    }
    public static MemoryAddress BCRYPT_MD2_ALG_HANDLE() {
        return constants$1381.BCRYPT_MD2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_MD4_ALG_HANDLE() {
        return constants$1381.BCRYPT_MD4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_MD5_ALG_HANDLE() {
        return constants$1381.BCRYPT_MD5_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA1_ALG_HANDLE() {
        return constants$1381.BCRYPT_SHA1_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA256_ALG_HANDLE() {
        return constants$1382.BCRYPT_SHA256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA384_ALG_HANDLE() {
        return constants$1382.BCRYPT_SHA384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SHA512_ALG_HANDLE() {
        return constants$1382.BCRYPT_SHA512_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC4_ALG_HANDLE() {
        return constants$1382.BCRYPT_RC4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RNG_ALG_HANDLE() {
        return constants$1382.BCRYPT_RNG_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD5_ALG_HANDLE() {
        return constants$1382.BCRYPT_HMAC_MD5_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA1_ALG_HANDLE() {
        return constants$1383.BCRYPT_HMAC_SHA1_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA256_ALG_HANDLE() {
        return constants$1383.BCRYPT_HMAC_SHA256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA384_ALG_HANDLE() {
        return constants$1383.BCRYPT_HMAC_SHA384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_SHA512_ALG_HANDLE() {
        return constants$1383.BCRYPT_HMAC_SHA512_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RSA_ALG_HANDLE() {
        return constants$1383.BCRYPT_RSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_ALG_HANDLE() {
        return constants$1383.BCRYPT_ECDSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CMAC_ALG_HANDLE() {
        return constants$1384.BCRYPT_AES_CMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_GMAC_ALG_HANDLE() {
        return constants$1384.BCRYPT_AES_GMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD2_ALG_HANDLE() {
        return constants$1384.BCRYPT_HMAC_MD2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HMAC_MD4_ALG_HANDLE() {
        return constants$1384.BCRYPT_HMAC_MD4_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_CBC_ALG_HANDLE() {
        return constants$1384.BCRYPT_3DES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_ECB_ALG_HANDLE() {
        return constants$1384.BCRYPT_3DES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_CFB_ALG_HANDLE() {
        return constants$1385.BCRYPT_3DES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_CBC_ALG_HANDLE() {
        return constants$1385.BCRYPT_3DES_112_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_ECB_ALG_HANDLE() {
        return constants$1385.BCRYPT_3DES_112_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_3DES_112_CFB_ALG_HANDLE() {
        return constants$1385.BCRYPT_3DES_112_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CBC_ALG_HANDLE() {
        return constants$1385.BCRYPT_AES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_ECB_ALG_HANDLE() {
        return constants$1385.BCRYPT_AES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CFB_ALG_HANDLE() {
        return constants$1386.BCRYPT_AES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_CCM_ALG_HANDLE() {
        return constants$1386.BCRYPT_AES_CCM_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_AES_GCM_ALG_HANDLE() {
        return constants$1386.BCRYPT_AES_GCM_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_CBC_ALG_HANDLE() {
        return constants$1386.BCRYPT_DES_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_ECB_ALG_HANDLE() {
        return constants$1386.BCRYPT_DES_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DES_CFB_ALG_HANDLE() {
        return constants$1386.BCRYPT_DES_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_CBC_ALG_HANDLE() {
        return constants$1387.BCRYPT_DESX_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_ECB_ALG_HANDLE() {
        return constants$1387.BCRYPT_DESX_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DESX_CFB_ALG_HANDLE() {
        return constants$1387.BCRYPT_DESX_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_CBC_ALG_HANDLE() {
        return constants$1387.BCRYPT_RC2_CBC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_ECB_ALG_HANDLE() {
        return constants$1387.BCRYPT_RC2_ECB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RC2_CFB_ALG_HANDLE() {
        return constants$1387.BCRYPT_RC2_CFB_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DH_ALG_HANDLE() {
        return constants$1388.BCRYPT_DH_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_ALG_HANDLE() {
        return constants$1388.BCRYPT_ECDH_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P256_ALG_HANDLE() {
        return constants$1388.BCRYPT_ECDH_P256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P384_ALG_HANDLE() {
        return constants$1388.BCRYPT_ECDH_P384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDH_P521_ALG_HANDLE() {
        return constants$1388.BCRYPT_ECDH_P521_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_DSA_ALG_HANDLE() {
        return constants$1388.BCRYPT_DSA_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P256_ALG_HANDLE() {
        return constants$1389.BCRYPT_ECDSA_P256_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P384_ALG_HANDLE() {
        return constants$1389.BCRYPT_ECDSA_P384_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_ECDSA_P521_ALG_HANDLE() {
        return constants$1389.BCRYPT_ECDSA_P521_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_RSA_SIGN_ALG_HANDLE() {
        return constants$1389.BCRYPT_RSA_SIGN_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_CAPI_KDF_ALG_HANDLE() {
        return constants$1389.BCRYPT_CAPI_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_PBKDF2_ALG_HANDLE() {
        return constants$1389.BCRYPT_PBKDF2_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE() {
        return constants$1390.BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_SP80056A_CONCAT_ALG_HANDLE() {
        return constants$1390.BCRYPT_SP80056A_CONCAT_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_TLS1_1_KDF_ALG_HANDLE() {
        return constants$1390.BCRYPT_TLS1_1_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_TLS1_2_KDF_ALG_HANDLE() {
        return constants$1390.BCRYPT_TLS1_2_KDF_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_XTS_AES_ALG_HANDLE() {
        return constants$1390.BCRYPT_XTS_AES_ALG_HANDLE$ADDR;
    }
    public static MemoryAddress BCRYPT_HKDF_ALG_HANDLE() {
        return constants$1390.BCRYPT_HKDF_ALG_HANDLE$ADDR;
    }
    public static int CRYPT_MIN_DEPENDENCIES() {
        return (int)1L;
    }
    public static int CRYPT_PROCESS_ISOLATE() {
        return (int)65536L;
    }
    public static int CRYPT_UM() {
        return (int)1L;
    }
    public static int CRYPT_KM() {
        return (int)2L;
    }
    public static int CRYPT_MM() {
        return (int)3L;
    }
    public static int CRYPT_ANY() {
        return (int)4L;
    }
    public static int CRYPT_OVERWRITE() {
        return (int)1L;
    }
    public static int CRYPT_LOCAL() {
        return (int)1L;
    }
    public static int CRYPT_DOMAIN() {
        return (int)2L;
    }
    public static int CRYPT_EXCLUSIVE() {
        return (int)1L;
    }
    public static int CRYPT_OVERRIDE() {
        return (int)65536L;
    }
    public static int CRYPT_ALL_FUNCTIONS() {
        return (int)1L;
    }
    public static int CRYPT_ALL_PROVIDERS() {
        return (int)2L;
    }
    public static int CRYPT_PRIORITY_TOP() {
        return (int)0L;
    }
    public static int CRYPT_PRIORITY_BOTTOM() {
        return (int)4294967295L;
    }
    public static MemorySegment CRYPT_DEFAULT_CONTEXT() {
        return constants$1391.CRYPT_DEFAULT_CONTEXT$SEGMENT;
    }
    public static MemorySegment MS_KEY_STORAGE_PROVIDER() {
        return constants$1391.MS_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_SMART_CARD_KEY_STORAGE_PROVIDER() {
        return constants$1391.MS_SMART_CARD_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_PLATFORM_KEY_STORAGE_PROVIDER() {
        return constants$1391.MS_PLATFORM_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment MS_NGC_KEY_STORAGE_PROVIDER() {
        return constants$1391.MS_NGC_KEY_STORAGE_PROVIDER$SEGMENT;
    }
    public static MemorySegment TPM_RSA_SRK_SEAL_KEY() {
        return constants$1391.TPM_RSA_SRK_SEAL_KEY$SEGMENT;
    }
    public static MemorySegment NCRYPT_RSA_ALGORITHM() {
        return constants$1392.NCRYPT_RSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_RSA_SIGN_ALGORITHM() {
        return constants$1392.NCRYPT_RSA_SIGN_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_ALGORITHM() {
        return constants$1392.NCRYPT_DH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DSA_ALGORITHM() {
        return constants$1392.NCRYPT_DSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD2_ALGORITHM() {
        return constants$1392.NCRYPT_MD2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD4_ALGORITHM() {
        return constants$1392.NCRYPT_MD4_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_MD5_ALGORITHM() {
        return constants$1393.NCRYPT_MD5_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA1_ALGORITHM() {
        return constants$1393.NCRYPT_SHA1_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA256_ALGORITHM() {
        return constants$1393.NCRYPT_SHA256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA384_ALGORITHM() {
        return constants$1393.NCRYPT_SHA384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SHA512_ALGORITHM() {
        return constants$1393.NCRYPT_SHA512_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P256_ALGORITHM() {
        return constants$1393.NCRYPT_ECDSA_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P384_ALGORITHM() {
        return constants$1394.NCRYPT_ECDSA_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_P521_ALGORITHM() {
        return constants$1394.NCRYPT_ECDSA_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P256_ALGORITHM() {
        return constants$1394.NCRYPT_ECDH_P256_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P384_ALGORITHM() {
        return constants$1394.NCRYPT_ECDH_P384_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_P521_ALGORITHM() {
        return constants$1394.NCRYPT_ECDH_P521_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_AES_ALGORITHM() {
        return constants$1394.NCRYPT_AES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_RC2_ALGORITHM() {
        return constants$1395.NCRYPT_RC2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_3DES_ALGORITHM() {
        return constants$1395.NCRYPT_3DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DES_ALGORITHM() {
        return constants$1395.NCRYPT_DES_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_DESX_ALGORITHM() {
        return constants$1395.NCRYPT_DESX_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_3DES_112_ALGORITHM() {
        return constants$1395.NCRYPT_3DES_112_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SP800108_CTR_HMAC_ALGORITHM() {
        return constants$1395.NCRYPT_SP800108_CTR_HMAC_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_SP80056A_CONCAT_ALGORITHM() {
        return constants$1396.NCRYPT_SP80056A_CONCAT_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_PBKDF2_ALGORITHM() {
        return constants$1396.NCRYPT_PBKDF2_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_CAPI_KDF_ALGORITHM() {
        return constants$1396.NCRYPT_CAPI_KDF_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_ALGORITHM() {
        return constants$1396.NCRYPT_ECDSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_ALGORITHM() {
        return constants$1396.NCRYPT_ECDH_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_STORAGE_ALGORITHM() {
        return constants$1396.NCRYPT_KEY_STORAGE_ALGORITHM$SEGMENT;
    }
    public static MemorySegment NCRYPT_HMAC_SHA256_ALGORITHM() {
        return constants$1397.NCRYPT_HMAC_SHA256_ALGORITHM$SEGMENT;
    }
    public static int NCRYPT_CIPHER_INTERFACE() {
        return (int)1L;
    }
    public static int NCRYPT_HASH_INTERFACE() {
        return (int)2L;
    }
    public static int NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE() {
        return (int)3L;
    }
    public static int NCRYPT_SECRET_AGREEMENT_INTERFACE() {
        return (int)4L;
    }
    public static int NCRYPT_SIGNATURE_INTERFACE() {
        return (int)5L;
    }
    public static int NCRYPT_KEY_DERIVATION_INTERFACE() {
        return (int)7L;
    }
    public static MemorySegment NCRYPT_RSA_ALGORITHM_GROUP() {
        return constants$1397.NCRYPT_RSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_ALGORITHM_GROUP() {
        return constants$1397.NCRYPT_DH_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DSA_ALGORITHM_GROUP() {
        return constants$1397.NCRYPT_DSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDSA_ALGORITHM_GROUP() {
        return constants$1397.NCRYPT_ECDSA_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECDH_ALGORITHM_GROUP() {
        return constants$1397.NCRYPT_ECDH_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_AES_ALGORITHM_GROUP() {
        return constants$1398.NCRYPT_AES_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_RC2_ALGORITHM_GROUP() {
        return constants$1398.NCRYPT_RC2_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_DES_ALGORITHM_GROUP() {
        return constants$1398.NCRYPT_DES_ALGORITHM_GROUP$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_DERIVATION_GROUP() {
        return constants$1398.NCRYPT_KEY_DERIVATION_GROUP$SEGMENT;
    }
    public static int NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION() {
        return (int)0L;
    }
    public static int NCRYPT_NO_KEY_VALIDATION() {
        return (int)8L;
    }
    public static int NCRYPT_PERSIST_FLAG() {
        return (int)2147483648L;
    }
    public static int NCRYPT_CIPHER_OPERATION() {
        return (int)1L;
    }
    public static int NCRYPT_HASH_OPERATION() {
        return (int)2L;
    }
    public static int NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION() {
        return (int)4L;
    }
    public static int NCRYPT_SECRET_AGREEMENT_OPERATION() {
        return (int)8L;
    }
    public static int NCRYPT_SIGNATURE_OPERATION() {
        return (int)16L;
    }
    public static int NCRYPT_RNG_OPERATION() {
        return (int)32L;
    }
    public static int NCRYPT_KEY_DERIVATION_OPERATION() {
        return (int)64L;
    }
    public static MemorySegment NCRYPT_NAME_PROPERTY() {
        return constants$1398.NCRYPT_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_UNIQUE_NAME_PROPERTY() {
        return constants$1398.NCRYPT_UNIQUE_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ALGORITHM_PROPERTY() {
        return constants$1399.NCRYPT_ALGORITHM_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LENGTH_PROPERTY() {
        return constants$1399.NCRYPT_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LENGTHS_PROPERTY() {
        return constants$1399.NCRYPT_LENGTHS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_BLOCK_LENGTH_PROPERTY() {
        return constants$1399.NCRYPT_BLOCK_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PUBLIC_LENGTH_PROPERTY() {
        return constants$1399.NCRYPT_PUBLIC_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SIGNATURE_LENGTH_PROPERTY() {
        return constants$1399.NCRYPT_SIGNATURE_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_CHAINING_MODE_PROPERTY() {
        return constants$1400.NCRYPT_CHAINING_MODE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_AUTH_TAG_LENGTH() {
        return constants$1400.NCRYPT_AUTH_TAG_LENGTH$SEGMENT;
    }
    public static MemorySegment NCRYPT_UI_POLICY_PROPERTY() {
        return constants$1400.NCRYPT_UI_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_EXPORT_POLICY_PROPERTY() {
        return constants$1400.NCRYPT_EXPORT_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_WINDOW_HANDLE_PROPERTY() {
        return constants$1400.NCRYPT_WINDOW_HANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_CONTEXT_PROPERTY() {
        return constants$1400.NCRYPT_USE_CONTEXT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_IMPL_TYPE_PROPERTY() {
        return constants$1401.NCRYPT_IMPL_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_USAGE_PROPERTY() {
        return constants$1401.NCRYPT_KEY_USAGE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_TYPE_PROPERTY() {
        return constants$1401.NCRYPT_KEY_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_VERSION_PROPERTY() {
        return constants$1401.NCRYPT_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY() {
        return constants$1401.NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURITY_DESCR_PROPERTY() {
        return constants$1401.NCRYPT_SECURITY_DESCR_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_COUNT_ENABLED_PROPERTY() {
        return constants$1402.NCRYPT_USE_COUNT_ENABLED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_COUNT_PROPERTY() {
        return constants$1402.NCRYPT_USE_COUNT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_LAST_MODIFIED_PROPERTY() {
        return constants$1402.NCRYPT_LAST_MODIFIED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_MAX_NAME_LENGTH_PROPERTY() {
        return constants$1402.NCRYPT_MAX_NAME_LENGTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ALGORITHM_GROUP_PROPERTY() {
        return constants$1402.NCRYPT_ALGORITHM_GROUP_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_DH_PARAMETERS_PROPERTY() {
        return constants$1402.NCRYPT_DH_PARAMETERS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_PARAMETERS_PROPERTY() {
        return constants$1403.NCRYPT_ECC_PARAMETERS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_CURVE_NAME_PROPERTY() {
        return constants$1403.NCRYPT_ECC_CURVE_NAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY() {
        return constants$1403.NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY() {
        return constants$1403.NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USE_PER_BOOT_KEY_PROPERTY() {
        return constants$1403.NCRYPT_USE_PER_BOOT_KEY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PROVIDER_HANDLE_PROPERTY() {
        return constants$1403.NCRYPT_PROVIDER_HANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_PROPERTY() {
        return constants$1404.NCRYPT_PIN_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_READER_PROPERTY() {
        return constants$1404.NCRYPT_READER_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SMARTCARD_GUID_PROPERTY() {
        return constants$1404.NCRYPT_SMARTCARD_GUID_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_CERTIFICATE_PROPERTY() {
        return constants$1404.NCRYPT_CERTIFICATE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_PROMPT_PROPERTY() {
        return constants$1404.NCRYPT_PIN_PROMPT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_USER_CERTSTORE_PROPERTY() {
        return constants$1404.NCRYPT_USER_CERTSTORE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ROOT_CERTSTORE_PROPERTY() {
        return constants$1405.NCRYPT_ROOT_CERTSTORE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SECURE_PIN_PROPERTY() {
        return constants$1405.NCRYPT_SECURE_PIN_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ASSOCIATED_ECDH_KEY() {
        return constants$1405.NCRYPT_ASSOCIATED_ECDH_KEY$SEGMENT;
    }
    public static MemorySegment NCRYPT_SCARD_PIN_ID() {
        return constants$1405.NCRYPT_SCARD_PIN_ID$SEGMENT;
    }
    public static MemorySegment NCRYPT_SCARD_PIN_INFO() {
        return constants$1405.NCRYPT_SCARD_PIN_INFO$SEGMENT;
    }
    public static MemorySegment NCRYPT_READER_ICON_PROPERTY() {
        return constants$1405.NCRYPT_READER_ICON_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KDF_SECRET_VALUE() {
        return constants$1406.NCRYPT_KDF_SECRET_VALUE$SEGMENT;
    }
    public static MemorySegment NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY() {
        return constants$1406.NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_TYPE_PROPERTY() {
        return constants$1406.NCRYPT_PCP_PLATFORM_TYPE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PROVIDER_VERSION_PROPERTY() {
        return constants$1406.NCRYPT_PCP_PROVIDER_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKPUB_PROPERTY() {
        return constants$1406.NCRYPT_PCP_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKCERT_PROPERTY() {
        return constants$1406.NCRYPT_PCP_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EKNVCERT_PROPERTY() {
        return constants$1407.NCRYPT_PCP_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKPUB_PROPERTY() {
        return constants$1407.NCRYPT_PCP_RSA_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKCERT_PROPERTY() {
        return constants$1407.NCRYPT_PCP_RSA_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_EKNVCERT_PROPERTY() {
        return constants$1407.NCRYPT_PCP_RSA_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKPUB_PROPERTY() {
        return constants$1407.NCRYPT_PCP_ECC_EKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKCERT_PROPERTY() {
        return constants$1407.NCRYPT_PCP_ECC_EKCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ECC_EKNVCERT_PROPERTY() {
        return constants$1408.NCRYPT_PCP_ECC_EKNVCERT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_SRKPUB_PROPERTY() {
        return constants$1408.NCRYPT_PCP_SRKPUB_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PCRTABLE_PROPERTY() {
        return constants$1408.NCRYPT_PCP_PCRTABLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_CHANGEPASSWORD_PROPERTY() {
        return constants$1408.NCRYPT_PCP_CHANGEPASSWORD_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY() {
        return constants$1408.NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_USAGEAUTH_PROPERTY() {
        return constants$1408.NCRYPT_PCP_USAGEAUTH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY() {
        return constants$1409.NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY() {
        return constants$1409.NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_STORAGEPARENT_PROPERTY() {
        return constants$1409.NCRYPT_PCP_STORAGEPARENT_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PROVIDERHANDLE_PROPERTY() {
        return constants$1409.NCRYPT_PCP_PROVIDERHANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORMHANDLE_PROPERTY() {
        return constants$1409.NCRYPT_PCP_PLATFORMHANDLE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY() {
        return constants$1409.NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY() {
        return constants$1410.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY() {
        return constants$1410.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY() {
        return constants$1410.NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_SCHEME_PROPERTY() {
        return constants$1410.NCRYPT_PCP_RSA_SCHEME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY() {
        return constants$1410.NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDBINDING_PROPERTY() {
        return constants$1410.NCRYPT_PCP_TPM12_IDBINDING_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY() {
        return constants$1411.NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY() {
        return constants$1411.NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEYATTESTATION_PROPERTY() {
        return constants$1411.NCRYPT_PCP_KEYATTESTATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY() {
        return constants$1411.NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY() {
        return constants$1411.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY() {
        return constants$1411.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYREF() {
        return constants$1412.NCRYPT_PCP_HMAC_AUTH_POLICYREF$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_POLICYINFO() {
        return constants$1412.NCRYPT_PCP_HMAC_AUTH_POLICYINFO$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_NONCE() {
        return constants$1412.NCRYPT_PCP_HMAC_AUTH_NONCE$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_SIGNATURE() {
        return constants$1412.NCRYPT_PCP_HMAC_AUTH_SIGNATURE$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_HMAC_AUTH_TICKET() {
        return constants$1412.NCRYPT_PCP_HMAC_AUTH_TICKET$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY() {
        return constants$1412.NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY() {
        return constants$1413.NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_FW_VERSION_PROPERTY() {
        return constants$1413.NCRYPT_PCP_TPM_FW_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM2BNAME_PROPERTY() {
        return constants$1413.NCRYPT_PCP_TPM2BNAME_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_TPM_VERSION_PROPERTY() {
        return constants$1413.NCRYPT_PCP_TPM_VERSION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY() {
        return constants$1413.NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY() {
        return constants$1413.NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY() {
        return constants$1414.NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_SESSIONID_PROPERTY() {
        return constants$1414.NCRYPT_PCP_SESSIONID_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY() {
        return constants$1414.NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY$SEGMENT;
    }
    public static int NCRYPT_TPM12_PROVIDER() {
        return (int)65536L;
    }
    public static int NCRYPT_PCP_SIGNATURE_KEY() {
        return (int)1L;
    }
    public static int NCRYPT_PCP_ENCRYPTION_KEY() {
        return (int)2L;
    }
    public static int NCRYPT_PCP_GENERIC_KEY() {
        return (int)3L;
    }
    public static int NCRYPT_PCP_STORAGE_KEY() {
        return (int)4L;
    }
    public static int NCRYPT_PCP_IDENTITY_KEY() {
        return (int)8L;
    }
    public static int NCRYPT_PCP_HMACVERIFICATION_KEY() {
        return (int)16L;
    }
    public static MemorySegment NCRYPT_SCARD_NGC_KEY_NAME() {
        return constants$1414.NCRYPT_SCARD_NGC_KEY_NAME$SEGMENT;
    }
    public static MemorySegment NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY() {
        return constants$1414.NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_INITIALIZATION_VECTOR() {
        return constants$1414.NCRYPT_INITIALIZATION_VECTOR$SEGMENT;
    }
    public static MemorySegment NCRYPT_CHANGEPASSWORD_PROPERTY() {
        return constants$1415.NCRYPT_CHANGEPASSWORD_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY() {
        return constants$1415.NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_KEY_ACCESS_POLICY_PROPERTY() {
        return constants$1415.NCRYPT_KEY_ACCESS_POLICY_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY() {
        return constants$1415.NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_FLAGS_PROPERTY() {
        return constants$1415.NCRYPT_PIN_CACHE_FLAGS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY() {
        return constants$1415.NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY() {
        return constants$1416.NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY() {
        return constants$1416.NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_PIN_PROPERTY() {
        return constants$1416.NCRYPT_PIN_CACHE_PIN_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY() {
        return constants$1416.NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_PIN_CACHE_CLEAR_PROPERTY() {
        return constants$1416.NCRYPT_PIN_CACHE_CLEAR_PROPERTY$SEGMENT;
    }
    public static MemorySegment NCRYPT_CIPHER_KEY_BLOB() {
        return constants$1416.NCRYPT_CIPHER_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_KDF_KEY_BLOB() {
        return constants$1417.NCRYPT_KDF_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_PROTECTED_KEY_BLOB() {
        return constants$1417.NCRYPT_PROTECTED_KEY_BLOB$SEGMENT;
    }
    public static long NCRYPT_TPM_LOADABLE_KEY_BLOB_MIN_SIZE() {
        return 20L;
    }
    public static MemorySegment NCRYPT_TPM_LOADABLE_KEY_BLOB() {
        return constants$1417.NCRYPT_TPM_LOADABLE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_PKCS7_ENVELOPE_BLOB() {
        return constants$1417.NCRYPT_PKCS7_ENVELOPE_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_PKCS8_PRIVATE_KEY_BLOB() {
        return constants$1417.NCRYPT_PKCS8_PRIVATE_KEY_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_OPAQUETRANSPORT_BLOB() {
        return constants$1417.NCRYPT_OPAQUETRANSPORT_BLOB$SEGMENT;
    }
    public static MemorySegment NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB() {
        return constants$1418.NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB$SEGMENT;
    }
    public static MemorySegment szOID_RSA() {
        return constants$1418.szOID_RSA$SEGMENT;
    }
    public static MemorySegment szOID_PKCS() {
        return constants$1418.szOID_PKCS$SEGMENT;
    }
    public static MemorySegment szOID_RSA_HASH() {
        return constants$1418.szOID_RSA_HASH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_ENCRYPT() {
        return constants$1418.szOID_RSA_ENCRYPT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_1() {
        return constants$1418.szOID_PKCS_1$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_2() {
        return constants$1419.szOID_PKCS_2$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_3() {
        return constants$1419.szOID_PKCS_3$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_4() {
        return constants$1419.szOID_PKCS_4$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_5() {
        return constants$1419.szOID_PKCS_5$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_6() {
        return constants$1419.szOID_PKCS_6$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7() {
        return constants$1419.szOID_PKCS_7$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_8() {
        return constants$1420.szOID_PKCS_8$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_9() {
        return constants$1420.szOID_PKCS_9$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_10() {
        return constants$1420.szOID_PKCS_10$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12() {
        return constants$1420.szOID_PKCS_12$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RSA() {
        return constants$1420.szOID_RSA_RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD2RSA() {
        return constants$1420.szOID_RSA_MD2RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD4RSA() {
        return constants$1421.szOID_RSA_MD4RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD5RSA() {
        return constants$1421.szOID_RSA_MD5RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA1RSA() {
        return constants$1421.szOID_RSA_SHA1RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SETOAEP_RSA() {
        return constants$1421.szOID_RSA_SETOAEP_RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSAES_OAEP() {
        return constants$1421.szOID_RSAES_OAEP$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MGF1() {
        return constants$1421.szOID_RSA_MGF1$SEGMENT;
    }
    public static MemorySegment szOID_RSA_PSPECIFIED() {
        return constants$1422.szOID_RSA_PSPECIFIED$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SSA_PSS() {
        return constants$1422.szOID_RSA_SSA_PSS$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA256RSA() {
        return constants$1422.szOID_RSA_SHA256RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA384RSA() {
        return constants$1422.szOID_RSA_SHA384RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SHA512RSA() {
        return constants$1422.szOID_RSA_SHA512RSA$SEGMENT;
    }
    public static MemorySegment szOID_RSA_DH() {
        return constants$1422.szOID_RSA_DH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_data() {
        return constants$1423.szOID_RSA_data$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signedData() {
        return constants$1423.szOID_RSA_signedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_envelopedData() {
        return constants$1423.szOID_RSA_envelopedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signEnvData() {
        return constants$1423.szOID_RSA_signEnvData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_digestedData() {
        return constants$1423.szOID_RSA_digestedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_hashedData() {
        return constants$1423.szOID_RSA_hashedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_encryptedData() {
        return constants$1424.szOID_RSA_encryptedData$SEGMENT;
    }
    public static MemorySegment szOID_RSA_emailAddr() {
        return constants$1424.szOID_RSA_emailAddr$SEGMENT;
    }
    public static MemorySegment szOID_RSA_unstructName() {
        return constants$1424.szOID_RSA_unstructName$SEGMENT;
    }
    public static MemorySegment szOID_RSA_contentType() {
        return constants$1424.szOID_RSA_contentType$SEGMENT;
    }
    public static MemorySegment szOID_RSA_messageDigest() {
        return constants$1424.szOID_RSA_messageDigest$SEGMENT;
    }
    public static MemorySegment szOID_RSA_signingTime() {
        return constants$1424.szOID_RSA_signingTime$SEGMENT;
    }
    public static MemorySegment szOID_RSA_counterSign() {
        return constants$1425.szOID_RSA_counterSign$SEGMENT;
    }
    public static MemorySegment szOID_RSA_challengePwd() {
        return constants$1425.szOID_RSA_challengePwd$SEGMENT;
    }
    public static MemorySegment szOID_RSA_unstructAddr() {
        return constants$1425.szOID_RSA_unstructAddr$SEGMENT;
    }
    public static MemorySegment szOID_RSA_extCertAttrs() {
        return constants$1425.szOID_RSA_extCertAttrs$SEGMENT;
    }
    public static MemorySegment szOID_RSA_certExtensions() {
        return constants$1425.szOID_RSA_certExtensions$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMECapabilities() {
        return constants$1425.szOID_RSA_SMIMECapabilities$SEGMENT;
    }
    public static MemorySegment szOID_RSA_preferSignedData() {
        return constants$1426.szOID_RSA_preferSignedData$SEGMENT;
    }
    public static MemorySegment szOID_TIMESTAMP_TOKEN() {
        return constants$1426.szOID_TIMESTAMP_TOKEN$SEGMENT;
    }
    public static MemorySegment szOID_RFC3161_counterSign() {
        return constants$1426.szOID_RFC3161_counterSign$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalg() {
        return constants$1426.szOID_RSA_SMIMEalg$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgESDH() {
        return constants$1426.szOID_RSA_SMIMEalgESDH$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgCMS3DESwrap() {
        return constants$1426.szOID_RSA_SMIMEalgCMS3DESwrap$SEGMENT;
    }
    public static MemorySegment szOID_RSA_SMIMEalgCMSRC2wrap() {
        return constants$1427.szOID_RSA_SMIMEalgCMSRC2wrap$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD2() {
        return constants$1427.szOID_RSA_MD2$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD4() {
        return constants$1427.szOID_RSA_MD4$SEGMENT;
    }
    public static MemorySegment szOID_RSA_MD5() {
        return constants$1427.szOID_RSA_MD5$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC2CBC() {
        return constants$1427.szOID_RSA_RC2CBC$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC4() {
        return constants$1427.szOID_RSA_RC4$SEGMENT;
    }
    public static MemorySegment szOID_RSA_DES_EDE3_CBC() {
        return constants$1428.szOID_RSA_DES_EDE3_CBC$SEGMENT;
    }
    public static MemorySegment szOID_RSA_RC5_CBCPad() {
        return constants$1428.szOID_RSA_RC5_CBCPad$SEGMENT;
    }
    public static MemorySegment szOID_ANSI_X942() {
        return constants$1428.szOID_ANSI_X942$SEGMENT;
    }
    public static MemorySegment szOID_ANSI_X942_DH() {
        return constants$1428.szOID_ANSI_X942_DH$SEGMENT;
    }
    public static MemorySegment szOID_X957() {
        return constants$1428.szOID_X957$SEGMENT;
    }
    public static MemorySegment szOID_X957_DSA() {
        return constants$1428.szOID_X957_DSA$SEGMENT;
    }
    public static MemorySegment szOID_X957_SHA1DSA() {
        return constants$1429.szOID_X957_SHA1DSA$SEGMENT;
    }
    public static MemorySegment szOID_ECC_PUBLIC_KEY() {
        return constants$1429.szOID_ECC_PUBLIC_KEY$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P256() {
        return constants$1429.szOID_ECC_CURVE_P256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P384() {
        return constants$1429.szOID_ECC_CURVE_P384$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_P521() {
        return constants$1429.szOID_ECC_CURVE_P521$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP160R1() {
        return constants$1429.szOID_ECC_CURVE_BRAINPOOLP160R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP160T1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP160T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP192R1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP192R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP192T1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP192T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP224R1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP224R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP224T1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP224T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP256R1() {
        return constants$1430.szOID_ECC_CURVE_BRAINPOOLP256R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP256T1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP256T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP320R1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP320R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP320T1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP320T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP384R1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP384R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP384T1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP384T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP512R1() {
        return constants$1431.szOID_ECC_CURVE_BRAINPOOLP512R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_BRAINPOOLP512T1() {
        return constants$1432.szOID_ECC_CURVE_BRAINPOOLP512T1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_EC192WAPI() {
        return constants$1432.szOID_ECC_CURVE_EC192WAPI$SEGMENT;
    }
    public static MemorySegment szOID_CN_ECDSA_SHA256() {
        return constants$1432.szOID_CN_ECDSA_SHA256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP192() {
        return constants$1432.szOID_ECC_CURVE_NISTP192$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP224() {
        return constants$1432.szOID_ECC_CURVE_NISTP224$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP256() {
        return constants$1432.szOID_ECC_CURVE_NISTP256$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP384() {
        return constants$1433.szOID_ECC_CURVE_NISTP384$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_NISTP521() {
        return constants$1433.szOID_ECC_CURVE_NISTP521$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160K1() {
        return constants$1433.szOID_ECC_CURVE_SECP160K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160R1() {
        return constants$1433.szOID_ECC_CURVE_SECP160R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP160R2() {
        return constants$1433.szOID_ECC_CURVE_SECP160R2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP192K1() {
        return constants$1433.szOID_ECC_CURVE_SECP192K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP192R1() {
        return constants$1434.szOID_ECC_CURVE_SECP192R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP224K1() {
        return constants$1434.szOID_ECC_CURVE_SECP224K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP224R1() {
        return constants$1434.szOID_ECC_CURVE_SECP224R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256K1() {
        return constants$1434.szOID_ECC_CURVE_SECP256K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256R1() {
        return constants$1434.szOID_ECC_CURVE_SECP256R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP384R1() {
        return constants$1434.szOID_ECC_CURVE_SECP384R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP521R1() {
        return constants$1435.szOID_ECC_CURVE_SECP521R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS7() {
        return constants$1435.szOID_ECC_CURVE_WTLS7$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS9() {
        return constants$1435.szOID_ECC_CURVE_WTLS9$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS12() {
        return constants$1435.szOID_ECC_CURVE_WTLS12$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V1() {
        return constants$1435.szOID_ECC_CURVE_X962P192V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V2() {
        return constants$1435.szOID_ECC_CURVE_X962P192V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V3() {
        return constants$1436.szOID_ECC_CURVE_X962P192V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V1() {
        return constants$1436.szOID_ECC_CURVE_X962P239V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V2() {
        return constants$1436.szOID_ECC_CURVE_X962P239V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V3() {
        return constants$1436.szOID_ECC_CURVE_X962P239V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P256V1() {
        return constants$1436.szOID_ECC_CURVE_X962P256V1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA1() {
        return constants$1436.szOID_ECDSA_SHA1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SPECIFIED() {
        return constants$1437.szOID_ECDSA_SPECIFIED$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA256() {
        return constants$1437.szOID_ECDSA_SHA256$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA384() {
        return constants$1437.szOID_ECDSA_SHA384$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA512() {
        return constants$1437.szOID_ECDSA_SHA512$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_CBC() {
        return constants$1437.szOID_NIST_AES128_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_CBC() {
        return constants$1437.szOID_NIST_AES192_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_CBC() {
        return constants$1438.szOID_NIST_AES256_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_WRAP() {
        return constants$1438.szOID_NIST_AES128_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_WRAP() {
        return constants$1438.szOID_NIST_AES192_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_WRAP() {
        return constants$1438.szOID_NIST_AES256_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF() {
        return constants$1438.szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF() {
        return constants$1438.szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF() {
        return constants$1439.szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DS() {
        return constants$1439.szOID_DS$SEGMENT;
    }
    public static MemorySegment szOID_DSALG() {
        return constants$1439.szOID_DSALG$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_CRPT() {
        return constants$1439.szOID_DSALG_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_HASH() {
        return constants$1439.szOID_DSALG_HASH$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_SIGN() {
        return constants$1439.szOID_DSALG_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_RSA() {
        return constants$1440.szOID_DSALG_RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIW() {
        return constants$1440.szOID_OIW$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC() {
        return constants$1440.szOID_OIWSEC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA() {
        return constants$1440.szOID_OIWSEC_md4RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSA() {
        return constants$1440.szOID_OIWSEC_md5RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA2() {
        return constants$1440.szOID_OIWSEC_md4RSA2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desECB() {
        return constants$1441.szOID_OIWSEC_desECB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCBC() {
        return constants$1441.szOID_OIWSEC_desCBC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desOFB() {
        return constants$1441.szOID_OIWSEC_desOFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCFB() {
        return constants$1441.szOID_OIWSEC_desCFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desMAC() {
        return constants$1441.szOID_OIWSEC_desMAC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaSign() {
        return constants$1441.szOID_OIWSEC_rsaSign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsa() {
        return constants$1442.szOID_OIWSEC_dsa$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaDSA() {
        return constants$1442.szOID_OIWSEC_shaDSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2RSA() {
        return constants$1442.szOID_OIWSEC_mdc2RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaRSA() {
        return constants$1442.szOID_OIWSEC_shaRSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dhCommMod() {
        return constants$1442.szOID_OIWSEC_dhCommMod$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desEDE() {
        return constants$1442.szOID_OIWSEC_desEDE$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha() {
        return constants$1443.szOID_OIWSEC_sha$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2() {
        return constants$1443.szOID_OIWSEC_mdc2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaComm() {
        return constants$1443.szOID_OIWSEC_dsaComm$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA() {
        return constants$1443.szOID_OIWSEC_dsaCommSHA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaXchg() {
        return constants$1443.szOID_OIWSEC_rsaXchg$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_keyHashSeal() {
        return constants$1443.szOID_OIWSEC_keyHashSeal$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md2RSASign() {
        return constants$1444.szOID_OIWSEC_md2RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSASign() {
        return constants$1444.szOID_OIWSEC_md5RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1() {
        return constants$1444.szOID_OIWSEC_sha1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaSHA1() {
        return constants$1444.szOID_OIWSEC_dsaSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA1() {
        return constants$1444.szOID_OIWSEC_dsaCommSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1RSASign() {
        return constants$1444.szOID_OIWSEC_sha1RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR() {
        return constants$1445.szOID_OIWDIR$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_CRPT() {
        return constants$1445.szOID_OIWDIR_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_HASH() {
        return constants$1445.szOID_OIWDIR_HASH$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_SIGN() {
        return constants$1445.szOID_OIWDIR_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2() {
        return constants$1445.szOID_OIWDIR_md2$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2RSA() {
        return constants$1445.szOID_OIWDIR_md2RSA$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC() {
        return constants$1446.szOID_INFOSEC$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsSignature() {
        return constants$1446.szOID_INFOSEC_sdnsSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicSignature() {
        return constants$1446.szOID_INFOSEC_mosaicSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsConfidentiality() {
        return constants$1446.szOID_INFOSEC_sdnsConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicConfidentiality() {
        return constants$1446.szOID_INFOSEC_mosaicConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsIntegrity() {
        return constants$1446.szOID_INFOSEC_sdnsIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicIntegrity() {
        return constants$1447.szOID_INFOSEC_mosaicIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsTokenProtection() {
        return constants$1447.szOID_INFOSEC_sdnsTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicTokenProtection() {
        return constants$1447.szOID_INFOSEC_mosaicTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKeyManagement() {
        return constants$1447.szOID_INFOSEC_sdnsKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKeyManagement() {
        return constants$1447.szOID_INFOSEC_mosaicKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKMandSig() {
        return constants$1447.szOID_INFOSEC_sdnsKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandSig() {
        return constants$1448.szOID_INFOSEC_mosaicKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteASignature() {
        return constants$1448.szOID_INFOSEC_SuiteASignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAConfidentiality() {
        return constants$1448.szOID_INFOSEC_SuiteAConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAIntegrity() {
        return constants$1448.szOID_INFOSEC_SuiteAIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteATokenProtection() {
        return constants$1448.szOID_INFOSEC_SuiteATokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKeyManagement() {
        return constants$1448.szOID_INFOSEC_SuiteAKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKMandSig() {
        return constants$1449.szOID_INFOSEC_SuiteAKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedSig() {
        return constants$1449.szOID_INFOSEC_mosaicUpdatedSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandUpdSig() {
        return constants$1449.szOID_INFOSEC_mosaicKMandUpdSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedInteg() {
        return constants$1449.szOID_INFOSEC_mosaicUpdatedInteg$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha256() {
        return constants$1449.szOID_NIST_sha256$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha384() {
        return constants$1449.szOID_NIST_sha384$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha512() {
        return constants$1450.szOID_NIST_sha512$SEGMENT;
    }
    public static MemorySegment szOID_COMMON_NAME() {
        return constants$1450.szOID_COMMON_NAME$SEGMENT;
    }
    public static MemorySegment szOID_SUR_NAME() {
        return constants$1450.szOID_SUR_NAME$SEGMENT;
    }
    public static MemorySegment szOID_DEVICE_SERIAL_NUMBER() {
        return constants$1450.szOID_DEVICE_SERIAL_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_COUNTRY_NAME() {
        return constants$1450.szOID_COUNTRY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_LOCALITY_NAME() {
        return constants$1450.szOID_LOCALITY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STATE_OR_PROVINCE_NAME() {
        return constants$1451.szOID_STATE_OR_PROVINCE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STREET_ADDRESS() {
        return constants$1451.szOID_STREET_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATION_NAME() {
        return constants$1451.szOID_ORGANIZATION_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATIONAL_UNIT_NAME() {
        return constants$1451.szOID_ORGANIZATIONAL_UNIT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TITLE() {
        return constants$1451.szOID_TITLE$SEGMENT;
    }
    public static MemorySegment szOID_DESCRIPTION() {
        return constants$1451.szOID_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment szOID_SEARCH_GUIDE() {
        return constants$1452.szOID_SEARCH_GUIDE$SEGMENT;
    }
    public static MemorySegment szOID_BUSINESS_CATEGORY() {
        return constants$1452.szOID_BUSINESS_CATEGORY$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_ADDRESS() {
        return constants$1452.szOID_POSTAL_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_CODE() {
        return constants$1452.szOID_POSTAL_CODE$SEGMENT;
    }
    public static MemorySegment szOID_POST_OFFICE_BOX() {
        return constants$1452.szOID_POST_OFFICE_BOX$SEGMENT;
    }
    public static MemorySegment szOID_PHYSICAL_DELIVERY_OFFICE_NAME() {
        return constants$1452.szOID_PHYSICAL_DELIVERY_OFFICE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TELEPHONE_NUMBER() {
        return constants$1453.szOID_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELEX_NUMBER() {
        return constants$1453.szOID_TELEX_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELETEXT_TERMINAL_IDENTIFIER() {
        return constants$1453.szOID_TELETEXT_TERMINAL_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_FACSIMILE_TELEPHONE_NUMBER() {
        return constants$1453.szOID_FACSIMILE_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_X21_ADDRESS() {
        return constants$1453.szOID_X21_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_INTERNATIONAL_ISDN_NUMBER() {
        return constants$1453.szOID_INTERNATIONAL_ISDN_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_REGISTERED_ADDRESS() {
        return constants$1454.szOID_REGISTERED_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_DESTINATION_INDICATOR() {
        return constants$1454.szOID_DESTINATION_INDICATOR$SEGMENT;
    }
    public static MemorySegment szOID_PREFERRED_DELIVERY_METHOD() {
        return constants$1454.szOID_PREFERRED_DELIVERY_METHOD$SEGMENT;
    }
    public static MemorySegment szOID_PRESENTATION_ADDRESS() {
        return constants$1454.szOID_PRESENTATION_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_SUPPORTED_APPLICATION_CONTEXT() {
        return constants$1454.szOID_SUPPORTED_APPLICATION_CONTEXT$SEGMENT;
    }
    public static MemorySegment szOID_MEMBER() {
        return constants$1454.szOID_MEMBER$SEGMENT;
    }
    public static MemorySegment szOID_OWNER() {
        return constants$1455.szOID_OWNER$SEGMENT;
    }
    public static MemorySegment szOID_ROLE_OCCUPANT() {
        return constants$1455.szOID_ROLE_OCCUPANT$SEGMENT;
    }
    public static MemorySegment szOID_SEE_ALSO() {
        return constants$1455.szOID_SEE_ALSO$SEGMENT;
    }
    public static MemorySegment szOID_USER_PASSWORD() {
        return constants$1455.szOID_USER_PASSWORD$SEGMENT;
    }
    public static MemorySegment szOID_USER_CERTIFICATE() {
        return constants$1455.szOID_USER_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_CA_CERTIFICATE() {
        return constants$1455.szOID_CA_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_REVOCATION_LIST() {
        return constants$1456.szOID_AUTHORITY_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CERTIFICATE_REVOCATION_LIST() {
        return constants$1456.szOID_CERTIFICATE_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CROSS_CERTIFICATE_PAIR() {
        return constants$1456.szOID_CROSS_CERTIFICATE_PAIR$SEGMENT;
    }
    public static MemorySegment szOID_GIVEN_NAME() {
        return constants$1456.szOID_GIVEN_NAME$SEGMENT;
    }
    public static MemorySegment szOID_INITIALS() {
        return constants$1456.szOID_INITIALS$SEGMENT;
    }
    public static MemorySegment szOID_DN_QUALIFIER() {
        return constants$1456.szOID_DN_QUALIFIER$SEGMENT;
    }
    public static MemorySegment szOID_DOMAIN_COMPONENT() {
        return constants$1457.szOID_DOMAIN_COMPONENT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_FRIENDLY_NAME_ATTR() {
        return constants$1457.szOID_PKCS_12_FRIENDLY_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_LOCAL_KEY_ID() {
        return constants$1457.szOID_PKCS_12_LOCAL_KEY_ID$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR() {
        return constants$1457.szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_LOCAL_MACHINE_KEYSET() {
        return constants$1457.szOID_LOCAL_MACHINE_KEYSET$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_EXTENDED_ATTRIBUTES() {
        return constants$1457.szOID_PKCS_12_EXTENDED_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID() {
        return constants$1458.szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID$SEGMENT;
    }
    public static MemorySegment szOID_KEYID_RDN() {
        return constants$1458.szOID_KEYID_RDN$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_LOCALE() {
        return constants$1458.szOID_EV_RDN_LOCALE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_STATE_OR_PROVINCE() {
        return constants$1458.szOID_EV_RDN_STATE_OR_PROVINCE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_COUNTRY() {
        return constants$1458.szOID_EV_RDN_COUNTRY$SEGMENT;
    }
    public static int CERT_RDN_FLAGS_MASK() {
        return (int)4278190080L;
    }
    public static int CERT_RDN_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static MemorySegment CERT_RSA_PUBLIC_KEY_OBJID() {
        return constants$1458.CERT_RSA_PUBLIC_KEY_OBJID$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_SIGN() {
        return constants$1459.CERT_DEFAULT_OID_PUBLIC_KEY_SIGN$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_XCHG() {
        return constants$1459.CERT_DEFAULT_OID_PUBLIC_KEY_XCHG$SEGMENT;
    }
    public static int CMSG_ENCODING_TYPE_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FORMAT_SEMICOLON() {
        return (int)256L;
    }
    public static int CRYPT_FORMAT_CRLF() {
        return (int)512L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)536870912L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG() {
        return (int)268435456L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)393216L;
    }
    public static int CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG() {
        return (int)16777216L;
    }
    public static int CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)100663296L;
    }
    public static MemoryAddress X509_CERT() {
        return constants$1459.X509_CERT$ADDR;
    }
    public static MemoryAddress X509_CERT_TO_BE_SIGNED() {
        return constants$1459.X509_CERT_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_CRL_TO_BE_SIGNED() {
        return constants$1459.X509_CERT_CRL_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_REQUEST_TO_BE_SIGNED() {
        return constants$1459.X509_CERT_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_EXTENSIONS() {
        return constants$1460.X509_EXTENSIONS$ADDR;
    }
    public static MemoryAddress X509_NAME_VALUE() {
        return constants$1460.X509_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_NAME() {
        return constants$1460.X509_NAME$ADDR;
    }
    public static MemoryAddress X509_PUBLIC_KEY_INFO() {
        return constants$1460.X509_PUBLIC_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID() {
        return constants$1460.X509_AUTHORITY_KEY_ID$ADDR;
    }
    public static MemoryAddress X509_KEY_ATTRIBUTES() {
        return constants$1460.X509_KEY_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE_RESTRICTION() {
        return constants$1461.X509_KEY_USAGE_RESTRICTION$ADDR;
    }
    public static MemoryAddress X509_ALTERNATE_NAME() {
        return constants$1461.X509_ALTERNATE_NAME$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS() {
        return constants$1461.X509_BASIC_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE() {
        return constants$1461.X509_KEY_USAGE$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS2() {
        return constants$1461.X509_BASIC_CONSTRAINTS2$ADDR;
    }
    public static MemoryAddress X509_CERT_POLICIES() {
        return constants$1461.X509_CERT_POLICIES$ADDR;
    }
    public static MemoryAddress PKCS_UTC_TIME() {
        return constants$1462.PKCS_UTC_TIME$ADDR;
    }
    public static MemoryAddress PKCS_TIME_REQUEST() {
        return constants$1462.PKCS_TIME_REQUEST$ADDR;
    }
    public static MemoryAddress RSA_CSP_PUBLICKEYBLOB() {
        return constants$1462.RSA_CSP_PUBLICKEYBLOB$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME() {
        return constants$1462.X509_UNICODE_NAME$ADDR;
    }
    public static MemoryAddress X509_KEYGEN_REQUEST_TO_BE_SIGNED() {
        return constants$1462.X509_KEYGEN_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTE() {
        return constants$1462.PKCS_ATTRIBUTE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO_SEQUENCE_OF_ANY() {
        return constants$1463.PKCS_CONTENT_INFO_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME_VALUE() {
        return constants$1463.X509_UNICODE_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_ANY_STRING() {
        return constants$1463.X509_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_UNICODE_ANY_STRING() {
        return constants$1463.X509_UNICODE_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_OCTET_STRING() {
        return constants$1463.X509_OCTET_STRING$ADDR;
    }
    public static MemoryAddress X509_BITS() {
        return constants$1463.X509_BITS$ADDR;
    }
    public static MemoryAddress X509_INTEGER() {
        return constants$1464.X509_INTEGER$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_INTEGER() {
        return constants$1464.X509_MULTI_BYTE_INTEGER$ADDR;
    }
    public static MemoryAddress X509_ENUMERATED() {
        return constants$1464.X509_ENUMERATED$ADDR;
    }
    public static MemoryAddress X509_CHOICE_OF_TIME() {
        return constants$1464.X509_CHOICE_OF_TIME$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID2() {
        return constants$1464.X509_AUTHORITY_KEY_ID2$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_INFO_ACCESS() {
        return constants$1464.X509_AUTHORITY_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_INFO_ACCESS() {
        return constants$1465.X509_SUBJECT_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_CRL_REASON_CODE() {
        return constants$1465.X509_CRL_REASON_CODE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO() {
        return constants$1465.PKCS_CONTENT_INFO$ADDR;
    }
    public static MemoryAddress X509_SEQUENCE_OF_ANY() {
        return constants$1465.X509_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_CRL_DIST_POINTS() {
        return constants$1465.X509_CRL_DIST_POINTS$ADDR;
    }
    public static MemoryAddress X509_ENHANCED_KEY_USAGE() {
        return constants$1465.X509_ENHANCED_KEY_USAGE$ADDR;
    }
    public static MemoryAddress PKCS_CTL() {
        return constants$1466.PKCS_CTL$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_UINT() {
        return constants$1466.X509_MULTI_BYTE_UINT$ADDR;
    }
    public static MemoryAddress X509_DSS_PUBLICKEY() {
        return constants$1466.X509_DSS_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DSS_PARAMETERS() {
        return constants$1466.X509_DSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_DSS_SIGNATURE() {
        return constants$1466.X509_DSS_SIGNATURE$ADDR;
    }
    public static MemoryAddress PKCS_RC2_CBC_PARAMETERS() {
        return constants$1466.PKCS_RC2_CBC_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_SMIME_CAPABILITIES() {
        return constants$1467.PKCS_SMIME_CAPABILITIES$ADDR;
    }
    public static MemoryAddress X509_QC_STATEMENTS_EXT() {
        return constants$1467.X509_QC_STATEMENTS_EXT$ADDR;
    }
    public static MemoryAddress PKCS_RSA_PRIVATE_KEY() {
        return constants$1467.PKCS_RSA_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress PKCS_PRIVATE_KEY_INFO() {
        return constants$1467.PKCS_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress PKCS_ENCRYPTED_PRIVATE_KEY_INFO() {
        return constants$1467.PKCS_ENCRYPTED_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_PKIX_POLICY_QUALIFIER_USERNOTICE() {
        return constants$1467.X509_PKIX_POLICY_QUALIFIER_USERNOTICE$ADDR;
    }
    public static MemoryAddress X509_DH_PUBLICKEY() {
        return constants$1468.X509_DH_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DH_PARAMETERS() {
        return constants$1468.X509_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTES() {
        return constants$1468.PKCS_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress PKCS_SORTED_CTL() {
        return constants$1468.PKCS_SORTED_CTL$ADDR;
    }
    public static MemoryAddress X509_ECC_SIGNATURE() {
        return constants$1468.X509_ECC_SIGNATURE$ADDR;
    }
    public static MemoryAddress X942_DH_PARAMETERS() {
        return constants$1468.X942_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_BITS_WITHOUT_TRAILING_ZEROES() {
        return constants$1469.X509_BITS_WITHOUT_TRAILING_ZEROES$ADDR;
    }
    public static MemoryAddress X942_OTHER_INFO() {
        return constants$1469.X942_OTHER_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_PAIR() {
        return constants$1469.X509_CERT_PAIR$ADDR;
    }
    public static MemoryAddress X509_ISSUING_DIST_POINT() {
        return constants$1469.X509_ISSUING_DIST_POINT$ADDR;
    }
    public static MemoryAddress X509_NAME_CONSTRAINTS() {
        return constants$1469.X509_NAME_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_POLICY_MAPPINGS() {
        return constants$1469.X509_POLICY_MAPPINGS$ADDR;
    }
    public static MemoryAddress X509_POLICY_CONSTRAINTS() {
        return constants$1470.X509_POLICY_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_CROSS_CERT_DIST_POINTS() {
        return constants$1470.X509_CROSS_CERT_DIST_POINTS$ADDR;
    }
    public static MemoryAddress CMC_DATA() {
        return constants$1470.CMC_DATA$ADDR;
    }
    public static MemoryAddress CMC_RESPONSE() {
        return constants$1470.CMC_RESPONSE$ADDR;
    }
    public static MemoryAddress CMC_STATUS() {
        return constants$1470.CMC_STATUS$ADDR;
    }
    public static MemoryAddress CMC_ADD_EXTENSIONS() {
        return constants$1470.CMC_ADD_EXTENSIONS$ADDR;
    }
    public static MemoryAddress CMC_ADD_ATTRIBUTES() {
        return constants$1471.CMC_ADD_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_CERTIFICATE_TEMPLATE() {
        return constants$1471.X509_CERTIFICATE_TEMPLATE$ADDR;
    }
    public static MemoryAddress OCSP_SIGNED_REQUEST() {
        return constants$1471.OCSP_SIGNED_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_REQUEST() {
        return constants$1471.OCSP_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_RESPONSE() {
        return constants$1471.OCSP_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_SIGNED_RESPONSE() {
        return constants$1471.OCSP_BASIC_SIGNED_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_RESPONSE() {
        return constants$1472.OCSP_BASIC_RESPONSE$ADDR;
    }
    public static MemoryAddress X509_LOGOTYPE_EXT() {
        return constants$1472.X509_LOGOTYPE_EXT$ADDR;
    }
    public static MemoryAddress X509_BIOMETRIC_EXT() {
        return constants$1472.X509_BIOMETRIC_EXT$ADDR;
    }
    public static MemoryAddress CNG_RSA_PUBLIC_KEY_BLOB() {
        return constants$1472.CNG_RSA_PUBLIC_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_OBJECT_IDENTIFIER() {
        return constants$1472.X509_OBJECT_IDENTIFIER$ADDR;
    }
    public static MemoryAddress X509_ALGORITHM_IDENTIFIER() {
        return constants$1472.X509_ALGORITHM_IDENTIFIER$ADDR;
    }
    public static MemoryAddress PKCS_RSA_SSA_PSS_PARAMETERS() {
        return constants$1473.PKCS_RSA_SSA_PSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_RSAES_OAEP_PARAMETERS() {
        return constants$1473.PKCS_RSAES_OAEP_PARAMETERS$ADDR;
    }
    public static MemoryAddress ECC_CMS_SHARED_INFO() {
        return constants$1473.ECC_CMS_SHARED_INFO$ADDR;
    }
    public static MemoryAddress TIMESTAMP_REQUEST() {
        return constants$1473.TIMESTAMP_REQUEST$ADDR;
    }
    public static MemoryAddress TIMESTAMP_RESPONSE() {
        return constants$1473.TIMESTAMP_RESPONSE$ADDR;
    }
    public static MemoryAddress TIMESTAMP_INFO() {
        return constants$1473.TIMESTAMP_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_BUNDLE() {
        return constants$1474.X509_CERT_BUNDLE$ADDR;
    }
    public static MemoryAddress X509_ECC_PRIVATE_KEY() {
        return constants$1474.X509_ECC_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress CNG_RSA_PRIVATE_KEY_BLOB() {
        return constants$1474.CNG_RSA_PRIVATE_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_DIR_ATTRS() {
        return constants$1474.X509_SUBJECT_DIR_ATTRS$ADDR;
    }
    public static MemoryAddress X509_ECC_PARAMETERS() {
        return constants$1474.X509_ECC_PARAMETERS$ADDR;
    }
}


